<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>Představuje atribut určující, na které příkazy HTTP bude odpovídat metoda akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> pomocí seznamu příkazů HTTP, na které bude odpovídat metoda akce.</summary>
      <param name="verbs">Příkazy HTTP, na které bude odpovídat metoda akce.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="verbs" /> má hodnotu null nebo nulovou délku.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> pomocí příkazů HTTP, které bude odpovídat metoda akce.</summary>
      <param name="verbs">Příkazy HTTP, na které bude odpovídat metoda akce.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda jsou zadané informace metody platné pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud jsou informace metody platné, jinak hodnota false</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext " /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>Získá nebo nastaví seznam příkazů HTTP, na které bude odpovídat metoda akce.</summary>
      <returns>Seznam příkazů HTTP, na které bude odpovídat metoda akce.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>Poskytuje informace o metodě akce, jako jsou například název, kontroler, parametry, atributy a filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>Získá název metody akce.</summary>
      <returns>Název metody akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>Získá popisovač kontroleru.</summary>
      <returns>Popisovač kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Provede metodu akce pomocí zadaných parametrů a kontextu kontroleru.</summary>
      <returns>Výsledek provedení metody akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="parameters">Parametry metody akce</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou pro tento člen definovány (mimo pojmenovaných atributů).</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou definovány pro tento člen a určeny podle typu.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy zadaného typu neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attritubeType" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Získá atributy filtru.</summary>
      <returns>Atributy filtru</returns>
      <param name="useCache">Hodnota true, pokud má být použita mezipaměť, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>Vrátí filtry, které jsou přidruženy k této metodě akce.</summary>
      <returns>Filtry, které jsou přidruženy k této metodě akce</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>Vrátí parametry metody akce.</summary>
      <returns>Parametry metody akce</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>Vrátí selektory metody akce.</summary>
      <returns>Selektory metody akce</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Určuje, zda jsou pro tento člen definovány jedna či více instancí zadaného typu atributu.</summary>
      <returns>Hodnota true, pokud je pro tento člen definován typ <paramref name="attributeType" />; jinak hodnota false.</returns>
      <param name="attributeType">Typ vlastního atributu</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attritubeType" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>Získá jedinečný ID pro popisovač akce pomocí opožděné inicializace.</summary>
      <returns>Jedinečný ID</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>Poskytuje kontext pro metodu ActionExecuted třídy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač metody akce</param>
      <param name="canceled">Hodnota true, pokud je akce zrušena.</param>
      <param name="exception">Objekt výjimky</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="actionDescriptor" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>Získá nebo nastaví popisovač akce.</summary>
      <returns>Popisovač akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda je objekt <see cref="T:System.Web.Mvc.ActionExecutedContext" /> zrušen.</summary>
      <returns>Hodnota true, pokud je kontext zrušen zrušena, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>Získá nebo nastaví výjimku, ke které došlo během provádění metody akce, pokud k ní došlo.</summary>
      <returns>Výjimka, ke které došlo během provádění metody akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda byla výjimka obsloužena.</summary>
      <returns>Hodnota true, pokud byla výjimka obsloužena, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>Získá nebo nastaví výsledek vrácený metodou akce.</summary>
      <returns>Výsledek vrácený metodou akce</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>Poskytuje kontext pro metodu ActionExecuting třídy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionExecutingContext" /> pomocí zadaného kontextu kontroleru, popisovače akce a parametrů metody akce.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
      <param name="actionParameters">Parametry metody akce</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="ActionParameters" /> nebo <paramref name="actionDescriptor" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>Získá nebo nastaví popisovač akce.</summary>
      <returns>Popisovač akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>Získá nebo nastaví parametry metody akce.</summary>
      <returns>Parametry metody akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>Získá nebo nastaví výsledek vrácený metodou akce.</summary>
      <returns>Výsledek vrácený metodou akce</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>Představuje základní třídu pro atributy filtru.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Voláno rozhraním ASP.NET MVC po provedení metody akce.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Voláno rozhraním ASP.NET MVC před provedením metody akce.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Voláno rozhraním ASP.NET MVC po provedení výsledku akce.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Voláno rozhraním ASP.NET MVC před provedením výsledku akce.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>Představuje atribut, který se používá k ovlivnění výběru metody akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je výběr metody akce platný pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud je výběr metody akce platný pro zadaný kontext kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>Představuje atribut, který slouží jako název akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionNameAttribute" />.</summary>
      <param name="name">Název akce</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je název akce platný v rámci zadaného kontextu kontroleru.</summary>
      <returns>Hodnota true, pokud je název akce platný v rámci zadaného kontextu kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název akce</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>Získá nebo nastaví název akce.</summary>
      <returns>Název akce</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>Představuje atribut ovlivňující výběr metody akce</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je název akce platný v zadaném kontextu kontroleru.</summary>
      <returns>Hodnota true, pokud je název akce platný v zadaném kontextu kontroleru, jinak hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název akce</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>Představuje výsledek metody akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umožňuje zpracování výsledku metody akce pomocí vlastního typu, který dědí z třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.Informace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>Představuje delegáta, který obsahuje logiku pro výběr metody akce.</summary>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>Poskytuje třídu, která implementuje rozhraní <see cref="T:System.Web.Mvc.IMetadataAware" /> za účelem podpory dalších metadat. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AdditionalMetadataAttribute" />.</summary>
      <param name="name">Název metadat modelu</param>
      <param name="value">Hodnota metadat modelu</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name">
      <summary>Získá název atributu dalších metadat.</summary>
      <returns>Název atributu dalších metadat</returns>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Poskytuje metadata pro proces tvorby metadat modelu.</summary>
      <param name="metadata">Metadata</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId">
      <summary>Získá typ atributu dalších metadat.</summary>
      <returns>Typ atributu dalších metadat</returns>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value">
      <summary>Získá hodnotu atributu dalších metadat.</summary>
      <returns>Hodnota atributu dalších metadat</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>Představuje podporu pro vykreslování protokolu HTML ve scénářích AJAX v rámci zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AjaxHelper" /> pomocí zadaného kontextu zobrazení a kontejneru dat zobrazení.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="viewDataContainer">Kontejner dat zobrazení</param>
      <exception cref="T:System.ArgumentNullException">Jeden nebo oba parametry mají hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AjaxHelper" /> pomocí zadaného kontextu zobrazení, kontejneru dat zobrazení a kolekce tras.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="viewDataContainer">Kontejner dat zobrazení</param>
      <param name="routeCollection">Kolekce tras adresy URL</param>
      <exception cref="T:System.ArgumentNullException">Jeden nebo více parametrů má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>Získá nebo nastaví kořenovou cestu pro umístění využívané soubory skriptu globalization.</summary>
      <returns>Umístění složky, ve které jsou uloženy soubory skriptu globalization.Výchozí umístění: ~/Scripts/Globalization</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>Serializuje zadanou zprávu a vrátí výsledný řetězec ve formátu JSON.</summary>
      <returns>Serializovaná zpráva v podobě řetězce ve formátu JSON</returns>
      <param name="message">Zpráva, kterou chcete serializovat.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>Získá kolekci tras adresy URL pro aplikaci.</summary>
      <returns>Kolekce tras pro aplikaci</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewBag">
      <summary>Získá objekt ViewBag.</summary>
      <returns>Objekt ViewBag</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>Získá kontextové informace o zobrazení.</summary>
      <returns>Kontext zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>Získá slovník dat aktuálního zobrazení.</summary>
      <returns>Slovník dat zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>Získá kontejner dat zobrazení.</summary>
      <returns>Kontejner dat zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>Představuje podporu pro vykreslování protokolu HTML ve scénářích rozhraní AJAX v rámci zobrazení silného typu.</summary>
      <typeparam name="TModel">Typ modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AjaxHelper`1" /> pomocí zadaného kontextu zobrazení a kontejneru dat zobrazení.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="viewDataContainer">Kontejner dat zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AjaxHelper`1" /> pomocí zadaného kontextu zobrazení, kontejneru dat zobrazení a kolekce tras adresy URL.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="viewDataContainer">Kontejner dat zobrazení</param>
      <param name="routeCollection">Kolekce tras adresy URL</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewBag">
      <summary>Získá objekt ViewBag.</summary>
      <returns>Objekt ViewBag</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>Získá verzi silného typu slovníku dat zobrazení.</summary>
      <returns>Silný typ slovníku dat zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>Představuje třídu, která rozšiřuje třídu <see cref="T:System.Web.HttpRequestBase" /> přidáním schopnosti určit, zda požadavek HTTP je požadavek AJAX.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)">
      <summary>Určuje, zda zadaný požadavek HTTP je požadavek AJAX.</summary>
      <returns>Hodnota true, pokud zadaný požadavek HTTP je požadavek AJAX. V opačném případě hodnota false.</returns>
      <param name="request">Žádost HTTP</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="request" /> má hodnotu null (nothing v jazyce Visual Basic).</exception>
    </member>
    <member name="T:System.Web.Mvc.AllowAnonymousAttribute">
      <summary>Představuje atribut, který určuje, že se kontrolery a akce mají během ověřování přeskočit <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowAnonymousAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AllowHtmlAttribute">
      <summary>Umožňuje, aby požadavek během vazby modelu zahrnul značku HTML vynecháním ověření požadavku pro vlastnost.(Důrazně doporučujeme, aby vaše aplikace explicitně zkontrolovala všechny modely, u kterých zakážete ověření požadavku, aby nedošlo k zneužití skriptu.)</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AllowHtmlAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Tato metoda podporuje infrastrukturu ověření rozhraní ASP.NET MVC a není zamýšlena k použití přímo z vašeho kódu.</summary>
      <param name="metadata">Metadata modelu</param>
    </member>
    <member name="T:System.Web.Mvc.AreaReference">
      <summary>Při vytváření atributu <see cref="T:System.Web.Mvc.RemoteAttribute" /> řídí interpretaci názvu kontroleru.</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseCurrent">
      <summary>Hledá kontroler v aktuální oblasti.</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseRoot">
      <summary>Hledá kontroler v kořenové oblasti.</summary>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>Poskytuje způsob, jak v aplikaci ASP.NET MVC registrovat jednu či více oblastí.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AreaRegistration" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>Získá název oblasti pro registraci.</summary>
      <returns>Název oblasti pro registraci</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>Registruje všechny oblasti v aplikaci ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>Registruje všechny oblasti v aplikaci ASP.NET MVC pomocí zadaných informací definovaných uživatelem.</summary>
      <param name="state">Objekt obsahující informace definované uživatelem, které mají být předány oblasti </param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>Registruje oblast v aplikaci ASP.NET MVC pomocí zadaných informací o kontextu oblasti.</summary>
      <param name="context">Zapouzdřuje informace požadované k registraci oblasti.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>Objekt, který zapouzdřuje informace požadované pro registraci oblasti v rámci aplikace ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> pomocí zadaného názvu oblasti a kolekce tras.</summary>
      <param name="areaName">Název oblasti pro registraci</param>
      <param name="routes">Kolekce tras pro aplikaci</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> pomocí zadaného názvu oblasti, kolekce tras a uživatelem definovaných dat.</summary>
      <param name="areaName">Název oblasti pro registraci</param>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="state">Objekt obsahující informace definované uživatelem, které mají být předány oblasti </param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>Získá název oblasti pro registraci.</summary>
      <returns>Název oblasti pro registraci</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>Mapuje zadanou trasu adresy URL a přidruží ji k oblasti, která je zadána vlastností <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="name">Název trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>Mapuje zadanou trasu adresy URL a přidruží ji k oblasti, která je zadána vlastností <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> pomocí zadaných výchozích hodnot trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="name">Název trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="defaults">Objekt obsahující výchozí hodnoty trasy</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>Mapuje zadanou trasu adresy URL a přidruží ji k oblasti, která je zadána vlastností <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> pomocí zadaných výchozích hodnot a omezení trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="name">Název trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="defaults">Objekt obsahující výchozí hodnoty trasy</param>
      <param name="constraints">Sada výrazů, které udávají platné hodnoty parametru adresy URL.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mapuje zadanou trasu adresy URL a přidruží ji k oblasti, která je zadána vlastností <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> pomocí zadaných výchozích hodnot, omezení a oborů názvů trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="name">Název trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="defaults">Objekt obsahující výchozí hodnoty trasy</param>
      <param name="constraints">Sada výrazů, které udávají platné hodnoty parametru adresy URL.</param>
      <param name="namespaces">Vyčíslitelná sada oborů názvů pro aplikaci</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>Mapuje zadanou trasu adresy URL a přidruží ji k oblasti, která je zadána vlastností <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> pomocí zadaných výchozích hodnot a oborů názvů trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="name">Název trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="defaults">Objekt obsahující výchozí hodnoty trasy</param>
      <param name="namespaces">Vyčíslitelná sada oborů názvů pro aplikaci</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>Mapuje zadanou trasu adresy URL a přidruží ji k oblasti, která je zadána vlastností <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> pomocí zadaných oborů názvů trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="name">Název trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="namespaces">Vyčíslitelná sada oborů názvů pro aplikaci</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>Získá obory názvů pro aplikaci.</summary>
      <returns>Vyčíslitelná sada oborů názvů pro aplikaci</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>Získá kolekci zadaných tras pro aplikaci.</summary>
      <returns>Kolekce zadaných tras pro aplikaci</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>Získá objekt obsahující uživatelem definované informace, které mají být předány do oblasti. </summary>
      <returns>Objekt obsahující informace definované uživatelem, které mají být předány oblasti </returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>Poskytuje abstraktní třídu pro implementaci zprostředkovatele metadat.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>Voláno z konstruktorů v odvozené třídě pro inicializaci třídy <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Při přepsání v odvozené třídě vytvoří metadata modelu pro danou vlastnost.</summary>
      <returns>Modelová metadata pro vlastnost</returns>
      <param name="attributes">Sada atributů</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Získá seznam atributů.</summary>
      <returns>Seznam atributů</returns>
      <param name="containerType">Typ kontejneru</param>
      <param name="propertyDescriptor">Popisovač vlastnosti</param>
      <param name="attributes">Kontejner atributu</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Vrátí seznam vlastností modelu.</summary>
      <returns>Seznam vlastností modelu</returns>
      <param name="container">Kontejner modelu</param>
      <param name="containerType">Typ kontejneru</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Vrátí metadata pro zadanou vlastnost pomocí typu kontejneru a popisovače vlastnosti.</summary>
      <returns>Metadata pro zadanou vlastnost používající typ kontejneru a popisovač vlastnosti</returns>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="propertyDescriptor">Popisovač vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Vrátí metadata pro zadanou vlastnost pomocí typu kontejneru a názvu vlastnosti.</summary>
      <returns>Metadata pro zadanou vlastnost používající typ kontejneru a název vlastnosti</returns>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Vrátí metadata pro zadanou vlastnost pomocí typu modelu.</summary>
      <returns>Metadata pro zadanou vlastnost používající typ modelu</returns>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ modelu</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>Vrátí popisovač typu ze zadaného typu.</summary>
      <returns>Popisovač typu</returns>
      <param name="type">Typ</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>Poskytuje abstraktní třídu pro třídy implementující zprostředkovatele ověřování.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>Volána z konstruktorů v odvozených třídách k inicializaci třídy <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Získá popisovač typu pro zadaný typ.</summary>
      <returns>Popisovač typu pro zadaný typ</returns>
      <param name="type">Typ zprostředkovatele ověřování</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Získá validátory pro model pomocí metadat a kontextu kontroleru.</summary>
      <returns>Validátory pro model</returns>
      <param name="metadata">Metadata</param>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Získá validátory pro model pomocí metadat, kontextu kontroleru a seznamu atributů.</summary>
      <returns>Validátory pro model</returns>
      <param name="metadata">Metadata</param>
      <param name="context">Kontext kontroleru.</param>
      <param name="attributes">Seznam atributů</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>Pro zpětnou kompatibilitu s rozhraním ASP.NET MVC 3.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>Představuje atribut, kterým se pro asynchronní metodu nastavuje hodnota časového limitu v milisekundách.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
      <param name="duration">Hodnota časového limitu v milisekundách</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>Získá dobu trvání časového limitu v milisekundách.</summary>
      <returns>Trvání časového limitu v milisekundách</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Voláno z technologie ASP.NET před spuštěním asynchronní metody akce.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>Zapouzdřuje informace požadované pro použití atributu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AuthorizationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AuthorizationContext" /> pomocí zadaného kontextu kontroleru.</summary>
      <param name="controllerContext">Kontext, ve kterém je výsledek spuštěn.Informace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AuthorizationContext" /> pomocí zadaného kontextu kontroleru a popisovače akce.</summary>
      <param name="controllerContext">Kontext, ve kterém je výsledek spuštěn.Informace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="actionDescriptor">Objekt poskytuje informace o metodě akce, jako jsou například název, kontroler, parametry, atributy a filtry.</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>Poskytuje informace o metodě akce označené atributem <see cref="T:System.Web.Mvc.AuthorizeAttribute" />, jako jsou například název, kontroler, parametry, atributy a filtry.</summary>
      <returns>Popisovač akce pro metodu akce, který je označen atributem <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>Získá nebo nastaví výsledek vrácený metodou akce.</summary>
      <returns>Výsledek vrácený metodou akce</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>Určuje, že má být přístup ke kontroleru nebo metodě akce omezen na uživatele, kteří splní požadavek na autorizaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>Při přepsání poskytne vstupní bod pro vlastní kontroly autorizace.</summary>
      <returns>Hodnota true, je-li uživatel autorizován, jinak hodnota false</returns>
      <param name="httpContext">Kontext HTTP, který zapouzdřuje všechny informace HTTP o jednotlivých požadavcích HTTP</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Zpracuje požadavky HTTP, pro které se nezdařila autorizace.</summary>
      <param name="filterContext">Zapouzdří informaci pro použití třídy <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.Objekt <paramref name="filterContext" /> obsahuje kontroler, kontext HTTP, kontext požadavku, výsledek akce a data směrování.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Voláno, když proces požaduje autorizaci.</summary>
      <param name="filterContext">Kontext filtru, který zapouzdřuje informaci pro použití třídy <see cref="T:System.Web.Mvc.AuthorizeAttribute" /></param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>Voláno, když modul ukládání do mezipaměti požaduje autorizaci.</summary>
      <returns>Odkaz na stav ověření</returns>
      <param name="httpContext">Kontext HTTP, který zapouzdřuje všechny informace HTTP o jednotlivých požadavcích HTTP</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>Získá nebo nastaví uživatelské role, které mají povolen přístup ke kontroleru nebo metodě akce.</summary>
      <returns>Uživatelské role, které mají povolen přístup ke kontroleru nebo metodě akce.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>Získá jedinečný identifikátor pro tento atribut.</summary>
      <returns>Jedinečný identifikátor pro tento atribut</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>Získá nebo nastaví uživatele, které mají povolen přístup ke kontroleru nebo metodě akce.</summary>
      <returns>Uživatelé, kteří mají povolen přístup ke kontroleru nebo metodě akce.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>Představuje atribut, který zprostředkuje podrobnosti o tom, jak by mělo dojít k vazbě modelu k parametru.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.BindAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>Získá či nastaví seznam názvů vlastností oddělených čárkou, pro které není vazba povolena.</summary>
      <returns>Seznam vyloučení</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>Získá či nastaví seznam názvů vlastností oddělených čárkou, pro které je vazba povolena.</summary>
      <returns>Seznam zahrnutí</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>Určí, zda je zadaná vlastnost povolena.</summary>
      <returns>Hodnota true, pokud je zadaná vlastnost povolena, jinak hodnota false.</returns>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>Získá či nastaví předponu, která bude použita při vykreslení značky pro vazbu s argumentem akce nebo s vlastností modelu.</summary>
      <returns>Předpona, která bude použita</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>Představuje základní třídu pro zobrazení kompilovaná pomocí třídy BuildManager před vykreslením modulem zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> pomocí zadaného kontextu kontroleru a cesty zobrazení.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> pomocí zadaného kontextu kontroleru, cesty zobrazení a aktivátoru stránky zobrazení.</summary>
      <param name="controllerContext">Kontextové informace pro aktuální kontrolerTyto informace zahrnují kontext HTTP, kontext dotazu, data směrování, kontext zobrazení nadřazené akce a další.</param>
      <param name="viewPath">Cesta k zobrazení, které bude vykresleno</param>
      <param name="viewPageActivator">Objekt odpovídající za dynamické konstruování stránky zobrazení při zpracování. </param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="viewPath" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Vykreslí zadaný kontext zobrazení pomocí zadaného objektu zapisovače.</summary>
      <param name="viewContext">Informace související s vykreslením zobrazení, například data zobrazení, dočasná data a kontext formuláře.</param>
      <param name="writer">Objekt zapisovače.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="viewContext" /> má hodnotu null.</exception>
      <exception cref="T:SInvalidOperationException">Instanci typu zobrazení nelze vytvořit.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Při přepsání v odvozené třídě vykreslí zadaný kontext zobrazení pomocí zadaného objektu zapisovače a instance objektu.</summary>
      <param name="viewContext">Informace související s vykreslením zobrazení, například data zobrazení, dočasná data a kontext formuláře.</param>
      <param name="writer">Objekt zapisovače.</param>
      <param name="instance">Objekt obsahující další informace, které lze použít v zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>Získá nebo nastaví cestu zobrazení.</summary>
      <returns>Cesta zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>Poskytuje základní třídu pro moduly zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> pomocí zadaného aktivátoru stránky zobrazení.</summary>
      <param name="viewPageActivator">Aktivátor stránky zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Získá hodnotu, která určuje, zda soubor existuje v zadaném virtuálním souborovém systému (cestě).</summary>
      <returns>Hodnota true, pokud soubor ve virtuálním souborovém systému existuje, jinak hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="virtualPath">Virtuální cesta</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.IsPrecompiledNonUpdateableSite"></member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>Získá aktivátor stránky zobrazení.</summary>
      <returns>Aktivátor stránky zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>Mapuje žádost prohlížeče na bajtové pole.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ByteArrayModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Váže model pomocí zadaného kontextu kontroleru a kontextu vazby.</summary>
      <returns>Vázaný datový objektImplementuje<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1">
      <summary>Poskytuje abstraktní třídu pro implementaci zprostředkovatele metadat uložených do mezipaměti.</summary>
      <typeparam name="TModelMetadata"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheItemPolicy">
      <summary>Získá zásady položky mezipaměti.</summary>
      <returns>Zásady položky mezipaměti</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheKeyPrefix">
      <summary>Získá předponu klíče mezipaměti.</summary>
      <returns>Předpona klíče mezipaměti</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Při přepisu v odvozené třídě vytvoří metadata modelu pro tuto vlastnost, jež jsou uložena v mezipaměti.</summary>
      <returns>Metadata modelu pro tuto vlastnost, jež jsou uložena v mezipaměti</returns>
      <param name="attributes">Atributy</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Vytvoří prototypová metadata použitím přístupu k prototypu a modelu k získání konečných metadat.</summary>
      <returns>Prototypová metadata</returns>
      <param name="prototype">Prototyp</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Vytvoří prototyp metadat.</summary>
      <returns>Prototyp metadat</returns>
      <param name="attributes">Atributy</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Získá metadata pro tyto vlastnosti.</summary>
      <returns>Metadata pro tyto vlastnosti</returns>
      <param name="container">Kontejner</param>
      <param name="containerType">Typ kontejneru</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Vrátí metadata pro zadanou vlastnost.</summary>
      <returns>Metadata zadané vlastnosti</returns>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="propertyDescriptor">Popisovač vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Vrátí metadata pro zadanou vlastnost.</summary>
      <returns>Metadata zadané vlastnosti</returns>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Vrátí metadata pro zadanou vlastnost uložená v mezipaměti pomocí daného typu modelu.</summary>
      <returns>Metadata pro zadanou vlastnost uložená v mezipaměti pomocí daného typu modelu</returns>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ kontejneru</param>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.PrototypeCache">
      <summary>Získá mezipaměť prototypu.</summary>
      <returns>Mezipaměť prototypu</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes">
      <summary>Poskytuje kontejner pro uložení atributů <see cref="N:System.ComponentModel.DataAnnotations" /> do mezipaměti.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.#ctor(System.Attribute[])">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Atributy</param>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DataType">
      <summary>Získá datový typ.</summary>
      <returns>Datový typ</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Získá zobrazení.</summary>
      <returns>Zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayColumn">
      <summary>Získá sloupec zobrazení.</summary>
      <returns>Sloupec zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Získá formát zobrazení.</summary>
      <returns>Formát zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayName">
      <summary>Získá zobrazovaný název.</summary>
      <returns>Zobrazovaný název</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Určuje, zda je datové pole upravitelné.</summary>
      <returns>Hodnota true, pokud je datové pole upravitelné; jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.HiddenInput">
      <summary>Získá skrytý vstup.</summary>
      <returns>Skrytý vstup</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Určuje, zda je datové pole jen pro čtení.</summary>
      <returns>Hodnota true, pokud je datové pole jen pro čtení; jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Required">
      <summary>Určuje, zda je datové pole povinné.</summary>
      <returns>Hodnota true, pokud je datové pole povinné; jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ScaffoldColumn">
      <summary>Určuje, zda se jedná o datové pole typu scaffold.</summary>
      <returns>Hodnota true, pokud se jedná o datové pole typu scaffold; jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.UIHint">
      <summary>Získá nápovědu uživatelského rozhraní.</summary>
      <returns>Nápověda uživatelského rozhraní</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata">
      <summary>Poskytuje kontejner pro uložení objektu <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadata" /> do mezipaměti.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> pomocí prototypu a přistupujícího objektu modelu.</summary>
      <param name="prototype">Prototyp</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> pomocí zprostředkovatele, typu kontejneru, typu modelu, názvu vlastnosti a atributů.</summary>
      <param name="provider">Zprostředkovatel</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název vlastnosti</param>
      <param name="attributes">Atributy</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Získá hodnotu určující, zda mají být prázdné řetězce, které jsou ve formulářích odeslány zpět, převedeny na hodnotu nothing.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Hodnota určující, zda mají být prázdné řetězce, které jsou ve formulářích odeslány zpět, převedeny na hodnotu nothing. </returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDataTypeName">
      <summary>Získá metainformace o datovém typu.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Metainformace o datovém typu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Získá popis modelu.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Popis modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayFormatString">
      <summary>Získá řetězec formátu zobrazení pro model.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Řetězec formátu zobrazení pro model</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayName">
      <summary>Získá zobrazovaný název modelu.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Zobrazovaný název modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeEditFormatString">
      <summary>Získá řetězec formátu úprav modelu.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Řetězec formátu úprav modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHasNonDefaultEditFormat">
      <summary>Získá hodnotu, která označuje, zda model používá jiný než výchozí formát úprav.</summary>
      <returns>Hodnota, která označuje, zda je používán jiný než výchozí formát úprav.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHideSurroundingHtml">
      <summary>Získá hodnotu určující, zda má být objekt modelu vykreslen pomocí přidružených elementů HTML.Získá hodnotu určující, zda má být objekt modelu vykreslen pomocí přidružených elementů HTML.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Hodnota určující, zda má být objekt modelu vykreslen pomocí přidružených elementů HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Získá hodnotu, která určuje, zda je model určen pouze ke čtení.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda je model jen pro čtení</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsRequired">
      <summary>Získá hodnotu, která určuje, zda je model vyžadován.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Hodnota určující, zda je model požadován.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeNullDisplayText">
      <summary>Získá řetězec k zobrazení hodnot null.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Řetězec k zobrazení hodnot null</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeOrder">
      <summary>Získá hodnotu, která představuje pořadí aktuálních metadat.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Hodnota, která představuje pořadí aktuálních metadat.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShortDisplayName">
      <summary>Získá krátký zobrazovaný název.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Krátký zobrazovaný název</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForDisplay">
      <summary>Získá hodnotu určující, zda má být vlastnost zobrazena v zobrazení jen pro čtení, například jako zobrazení seznamu a podrobností.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Hodnota určující, zda má být vlastnost zobrazena v zobrazení jen pro čtení, například jako zobrazení seznamu a podrobností.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForEdit">
      <summary>Získá nebo nastaví hodnotu určující, zda má být model zobrazen v upravitelných zobrazeních.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Vrací objekt <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeSimpleDisplayText">
      <summary>Získá řetězec jednoduchého zobrazení pro model.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Řetězec jednoduchého zobrazení pro model</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeTemplateHint">
      <summary>Získá nápovědu navrhující, kterou šablonu použít pro tento model.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Nápověda, která navrhuje, jakou šablonu použít pro tento model</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeWatermark">
      <summary>Získá hodnotu, kterou lze použít jako vodoznak.Pokud je hodnota uložena v mezipaměti, je vrácena hodnota z mezipaměti, jinak se hodnota načte z metadat modelu a je uložena do mezipaměti.</summary>
      <returns>Hodnota, kterou lze použít jako vodoznak</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider">
      <summary>Implementuje výchozího zprostředkovatele metadat modelu uloženého v mezipaměti pro rozhraní ASP.NET.MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Vrátí kontejner reálných instancí třídy metadat uložené v mezipaměti založených na přistupujícím objektu prototypu a modelu.</summary>
      <returns>Kontejner reálných instancí třídy metadat uložené v mezipaměti</returns>
      <param name="prototype">Prototyp</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Vrátí kontejner instancí prototypu třídy metadat.</summary>
      <returns>Kontejner instancí prototypu třídy metadat</returns>
      <param name="attributes">Typ atributů</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="T:System.Web.Mvc.CachedModelMetadata`1">
      <summary>Poskytuje kontejner pro metadata uložená v mezipaměti.</summary>
      <typeparam name="TPrototypeCache">Typ kontejneru</typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Konstruktor pro vytvoření reálných instancí třídy metadat založených na prototypu</summary>
      <param name="provider">Zprostředkovatel</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název vlastnosti</param>
      <param name="prototypeCache">Prototyp</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Konstruktor pro vytvoření instancí prototypů třídy metadat</summary>
      <param name="prototype">Prototyp</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví hodnotu uloženou v mezipaměti určující, zda mají být prázdné řetězce, které jsou ve formulářích odeslány zpět, převedeny na hodnotu null.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda mají být prázdné řetězce, které jsou ve formulářích odeslány zpět, převedeny na hodnotu null.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDataTypeName">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví metainformaci o datovém typu.</summary>
      <returns>Metainformace o datovém typu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDescription">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví popis modelu.</summary>
      <returns>Popis modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayFormatString">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví řetězec formátu zobrazení pro model.</summary>
      <returns>Řetězec formátu zobrazení pro model</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayName">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví zobrazovaný název modelu.</summary>
      <returns>Zobrazovaný název modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeEditFormatString">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví řetězec formátu úprav modelu.</summary>
      <returns>Řetězec formátu úprav modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHasNonDefaultEditFormat">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.</summary>
      <returns>Hodnota, která označuje, zda je používán jiný než výchozí formát úprav.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHideSurroundingHtml">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví hodnotu uloženou v mezipaměti určující, zda má být objekt modelu vykreslen pomocí přidružených elementů HTML.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda má být objekt modelu vykreslen pomocí přidružených elementů HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví hodnotu uloženou v mezipaměti určující, zda je model jen pro čtení.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda je model jen pro čtení</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsRequired">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví hodnotu uloženou v mezipaměti určující, zda je model požadován.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda je model požadován</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeNullDisplayText">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví řetězec uložený v mezipaměti k zobrazení hodnot null.</summary>
      <returns>Řetězec uložený v mezipaměti k zobrazení hodnot null</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeOrder">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví hodnotu uloženou v mezipaměti, která představuje pořadí aktuálních metadat.</summary>
      <returns>Hodnota uložená v mezipaměti, která představuje pořadí aktuálních metadat.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShortDisplayName">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví krátký zobrazovaný název.</summary>
      <returns>Krátký zobrazovaný název</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForDisplay">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví hodnotu uloženou v mezipaměti určující, zda má být vlastnost zobrazena v zobrazení jen pro čtení, například jako zobrazení seznamu a podrobností.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda má být vlastnost zobrazena v zobrazení jen pro čtení, například jako zobrazení seznamu a podrobností.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForEdit">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví hodnotu uloženou v mezipaměti určující, zda má být model zobrazen v upravitelných zobrazeních.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda má být model zobrazen v upravitelných zobrazeních.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeSimpleDisplayText">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví pro model řetězec jednoduchého zobrazení uložený v mezipaměti.</summary>
      <returns>Řetězec jednoduchého zobrazení uložený v mezipaměti pro model</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeTemplateHint">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví nápovědu uloženou v mezipaměti navrhující, jakou šablonu použít pro tento model.</summary>
      <returns>Nápověda uložená v mezipaměti navrhující, jakou šablonu použít pro tento model</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeWatermark">
      <summary>Tato metoda je chráněna, a proto ji nelze volat přímo.Tato metoda je určena k přepsání v odvozující třídě, například <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Získá nebo nastaví hodnotu uloženou v mezipaměti, kterou lze použít jako vodoznak.</summary>
      <returns>Hodnota uložená v mezipaměti, kterou lze použít jako vodoznak</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Získá nebo nastaví hodnotu uloženou v mezipaměti určující, zda mají být prázdné řetězce, které jsou ve formulářích odeslány zpět, převedeny na hodnotu null.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda mají být prázdné řetězce, které jsou ve formulářích odeslány zpět, převedeny na hodnotu null.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DataTypeName">
      <summary>Získá nebo nastaví metainformaci o datovém typu.</summary>
      <returns>Metainformace o datovém typu</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Description">
      <summary>Získá nebo nastaví popis modelu.</summary>
      <returns>Popis modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayFormatString">
      <summary>Získá nebo nastaví řetězec formátu zobrazení pro model.</summary>
      <returns>Řetězec formátu zobrazení pro model</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayName">
      <summary>Získá nebo nastaví zobrazovaný název modelu.</summary>
      <returns>Zobrazovaný název modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.EditFormatString">
      <summary>Získá nebo nastaví řetězec formátu úprav modelu.</summary>
      <returns>Řetězec formátu úprav modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.GetSimpleDisplayText">
      <summary>Získá nebo nastaví pro model řetězec jednoduchého zobrazení.</summary>
      <returns>Řetězec jednoduchého zobrazení pro model</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HideSurroundingHtml">
      <summary>Získá nebo nastaví hodnotu určující, zda má být objekt modelu vykreslen pomocí přidružených elementů HTML.</summary>
      <returns>Hodnota určující, zda má být objekt modelu vykreslen pomocí přidružených elementů HTML.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsReadOnly">
      <summary>Získá nebo nastaví hodnotu určující, zda je model jen pro čtení.</summary>
      <returns>Hodnota uložená v mezipaměti určující, zda je model jen pro čtení</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsRequired">
      <summary>Získá nebo nastaví hodnotu určující, zda je model požadován.</summary>
      <returns>Hodnota určující, zda je model požadován.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.NullDisplayText">
      <summary>Získá nebo nastaví řetězec k zobrazení hodnot null.</summary>
      <returns>Řetězec k zobrazení hodnot null</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Order">
      <summary>Získá nebo nastaví hodnotu, která představuje pořadí aktuálních metadat.</summary>
      <returns>Hodnota pořadí aktuálních metadat.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.PrototypeCache">
      <summary>Získá nebo nastaví mezipaměť prototypu.</summary>
      <returns>Mezipaměť prototypu</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShortDisplayName">
      <summary>Získá nebo nastaví krátký zobrazovaný název.</summary>
      <returns>Krátký zobrazovaný název</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForDisplay">
      <summary>Získá nebo nastaví hodnotu určující, zda má být vlastnost zobrazena v zobrazení jen pro čtení, například jako zobrazení seznamu a podrobností.</summary>
      <returns>Hodnota true, pokud má být model zobrazen jen pro čtení, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForEdit">
      <summary>Získá nebo nastaví hodnotu určující, zda má být model zobrazen v upravitelných zobrazeních.</summary>
      <returns>Hodnota true, pokud má být model zobrazen v upravitelných zobrazeních, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.SimpleDisplayText">
      <summary>Získá nebo nastaví pro model řetězec jednoduchého zobrazení.</summary>
      <returns>Řetězec jednoduchého zobrazení pro model</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.TemplateHint">
      <summary>Získá nebo nastaví nápovědu, která navrhuje, jakou šablonu použít pro tento model.</summary>
      <returns>Nápověda, která navrhuje, jakou šablonu použít pro tento model</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Watermark">
      <summary>Získá nebo nastaví hodnotu, kterou lze použít jako vodoznak.</summary>
      <returns>Hodnota, kterou lze použít jako vodoznak</returns>
    </member>
    <member name="T:System.Web.Mvc.CancellationTokenModelBinder">
      <summary>Poskytuje mechanismus pro šíření oznámení, že se mají zrušit operace vazače modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.CancellationTokenModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Vrátí výchozí token zrušení.</summary>
      <returns>Výchozí token zrušení.Implementuje<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="bindingContext">Kontext vazby.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>Představuje atribut, který určuje, že metoda akce má být volána jen jako podřízená akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Volá se v případě, že je požadována autorizace.</summary>
      <param name="filterContext">Objekt, který zapouzdřuje informace požadované pro autorizaci přístupu k podřízené akci.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProvider">
      <summary>Představuje zprostředkovatele hodnot pro hodnoty od podřízených akcí.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.GetValue(System.String)">
      <summary>Načte objekt hodnoty pomocí zadaného klíče.</summary>
      <returns>Objekt hodnoty pro zadaný klíč</returns>
      <param name="key">Klíč</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProviderFactory">
      <summary>Představuje objekt factory pro vytváření objektů zprostředkovatelů hodnot pro podřízené akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ChildActionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrací objekt <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> pro zadaný kontext kontroleru.</summary>
      <returns>Objekt <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>Vrací validátory modelu datového typu klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Vrací validátory modelu datového typu klienta.</summary>
      <returns>Validátory modelu datového typu klienta</returns>
      <param name="metadata">Metadata</param>
      <param name="context">Kontext</param>
    </member>
    <member name="P:System.Web.Mvc.ClientDataTypeModelValidatorProvider.ResourceClassKey">
      <summary>Získá klíč třídy prostředku.</summary>
      <returns>Klíč třídy prostředku</returns>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>Poskytuje atribut, který porovná dvě vlastnosti modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.CompareAttribute" />.</summary>
      <param name="otherProperty">Vlastnost, která má být porovnána s aktuální vlastností.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Použije formátování chybové zprávy založené na datovém poli, kde došlo k chybě porovnání.</summary>
      <returns>Formátovaná chybová zpráva</returns>
      <param name="name">Název pole, které způsobilo selhání ověření.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formátuje vlastnost pro ověření klienta předponou v podobě hvězdičky (*) a tečky.</summary>
      <returns>Řetězec *. (hvězdička a tečka) je přidán jako předpona vlastnosti.</returns>
      <param name="property">Vlastnost</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Získá seznam ověřovacích pravidel porovnání hodnot klienta pro danou vlastnost pomocí zadaných metadat modelu a kontextu kontroleru.</summary>
      <returns>Seznam ověřovacích pravidel porovnání hodnot klienta</returns>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Určí, zda se zadaný objekt rovná porovnávanému objektu.</summary>
      <returns>Hodnota null, pokud se hodnota porovnávané vlastnosti rovná parametru hodnoty, jinak výsledek ověření obsahující chybovou zprávu, která určuje, že se porovnání nezdařilo.</returns>
      <param name="value">Hodnota objektu, která má být porovnána.</param>
      <param name="validationContext">Kontext ověření</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>Získá vlastnost, která má být porovnána s aktuální vlastností.</summary>
      <returns>Vlastnost, která má být porovnána s aktuální vlastností.</returns>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherPropertyDisplayName">
      <summary>Získá zobrazovaný název jiných vlastností.</summary>
      <returns>Zobrazovaný název jiných vlastností</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>Představuje typ uživatelem definovaného obsahu, který je výsledkem metody akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ContentResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>Získá nebo nastaví obsah.</summary>
      <returns>Obsah</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>Získá nebo nastaví kódování obsahu.</summary>
      <returns>Kódování obsahu</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>Získá nebo nastaví typ obsahu.</summary>
      <returns>Typ obsahu</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umožňuje zpracování výsledku metody akce pomocí vlastního typu, který dědí z třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>Poskytuje metody odpovídající na požadavky HTTP, které byly učiněny na webovou stránku ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>Získá původce volání akce kontroleru.</summary>
      <returns>Původce volání akce</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.AsyncManager">
      <summary>Poskytuje asynchronní operace.</summary>
      <returns>Vrací objekt <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Zahájí provádění určeného kontextu požadavku.</summary>
      <returns>Vrací instanci rozhraní IAsyncController.</returns>
      <param name="requestContext">Kontext požadavku</param>
      <param name="callback">Asynchronní zpětné volání</param>
      <param name="state">Stav</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>Zahájí volání akce v aktuálním kontextu kontroleru.</summary>
      <returns>Vrací instanci rozhraní IAsyncController.</returns>
      <param name="callback">Zpětné volání</param>
      <param name="state">Stav</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>Získá nebo nastaví vazač.</summary>
      <returns>Vazač</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>Vytvoří objekt výsledného obsahu pomocí řetězce.</summary>
      <returns>Instance výsledného obsahu.</returns>
      <param name="content">Obsah, který má být zapsán do odpovědi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>Vytvoří objekt výsledného obsahu pomocí řetězce a typu obsahu.</summary>
      <returns>Instance výsledného obsahu.</returns>
      <param name="content">Obsah, který má být zapsán do odpovědi.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>Vytvoří objekt výsledného obsahu pomocí řetězce, typu obsahu a kódování obsahu.</summary>
      <returns>Instance výsledného obsahu.</returns>
      <param name="content">Obsah, který má být zapsán do odpovědi.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
      <param name="contentEncoding">Kódování obsahu</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>Vytvoří původce volání akce.</summary>
      <returns>Původce volání akce</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>Vytvoří zprostředkovatele dočasných dat.</summary>
      <returns>Zprostředkovatel dočasných dat</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.DisableAsyncSupport">
      <summary>Získá informaci o tom, zda má být v kontroleru zakázána asynchronní podpora.</summary>
      <returns>Hodnota true, má-li být asynchronní podpora v kontroleru zakázána, jinak hodnota false</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>Uvolní všechny prostředky, které používá aktuální instance třídy <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>Uvolní nespravované prostředky a volitelně také spravované prostředky.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků; hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)">
      <summary>Ukončí volání akce v aktuálním kontextu kontroleru.</summary>
      <param name="asyncResult">Asynchronní výsledek</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)">
      <summary>Ukončí provádění jádra.</summary>
      <param name="asyncResult">Asynchronní výsledek</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>Zavolá akci v aktuálním kontextu kontroleru.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>Vytvoří objekt FileContentResult pomocí obsahu a typu souboru.</summary>
      <returns>Výsledný objekt obsahu souboru</returns>
      <param name="fileContents">Binární obsah, který má být odeslán do odpovědi.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>Vytvoří objekt FileContentResult pomocí obsahu, typu obsahu a názvu cílového souboru.</summary>
      <returns>Výsledný objekt obsahu souboru</returns>
      <param name="fileContents">Binární obsah, který má být odeslán do odpovědi.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
      <param name="fileDownloadName">Název souboru použitý v dialogu stažení souboru, který se zobrazí v prohlížeči.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Vytvoří objekt FileStreamResult pomocí objektu Stream a typu obsahu.</summary>
      <returns>Výsledný objekt obsahu souboru</returns>
      <param name="fileStream">Proud, který má být odeslán do odpovědi.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Vytvoří objekt FileStreamResult pomocí objektu Stream, typu obsahu a názvu cílového souboru.</summary>
      <returns>Výsledný objekt proudu souboru</returns>
      <param name="fileStream">Proud, který má být odeslán do odpovědi.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
      <param name="fileDownloadName">Název souboru použitý v dialogu stažení souboru, který se zobrazí v prohlížeči.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>Vytvoří objekt FilePathResult pomocí názvu souboru a typu obsahu.</summary>
      <returns>Výsledný objekt proudu souboru</returns>
      <param name="fileName">Přístupová cesta k souboru, který má být odeslán do odpovědi.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>Vytvoří objekt FilePathResult pomocí názvu souboru, typu obsahu a názvu souboru při stahování.</summary>
      <returns>Výsledný objekt proudu souboru</returns>
      <param name="fileName">Přístupová cesta k souboru, který má být odeslán do odpovědi.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
      <param name="fileDownloadName">Název souboru použitý v dialogu stažení souboru, který se zobrazí v prohlížeči.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>Volá se, pokud požadavek odpovídá tomuto kontroleru, ale v kontroleru nebyla nalezena žádná metoda se zadaným názvem akce.</summary>
      <param name="actionName">Název požadované akce</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>Získá informace o individuálním požadavku HTTP specifické pro protokol HTTP.</summary>
      <returns>Kontext HTTP</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound">
      <summary>Vrací instanci třídy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.HttpNotFoundResult" /></returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>Vrací instanci třídy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.HttpNotFoundResult" /></returns>
      <param name="statusDescription">Popis stavu</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicializuje data, která nemusejí být k dispozici při volání konstruktoru.</summary>
      <param name="requestContext">Kontext protokolu HTTP a data trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>Vytvoří objekt <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
      <returns>Objekt <see cref="T:System.Web.Mvc.JavaScriptResult" />, který zapíše skript do odpovědi.</returns>
      <param name="script">Kód jazyka JavaScript určený ke spuštění v klientovi</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>Vytvoří objekt <see cref="T:System.Web.Mvc.JsonResult" />, který serializuje určený objekt do formátu JSON (JavaScript Object Notation).</summary>
      <returns>Výsledný objekt ve formátu JSON, který serializuje určený objekt do formátu JSON.Objekt výsledku, který je připraven touto metodou, je zapsán do odpovědi architekturou ASP.NET MVC při provedení objektu.</returns>
      <param name="data">Graf objektů jazyka JavaScript, který má být serializován.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>Vytvoří objekt <see cref="T:System.Web.Mvc.JsonResult" />, který serializuje určený objekt do formátu JSON (JavaScript Object Notation).</summary>
      <returns>Výsledný objekt ve formátu JSON, který serializuje určený objekt do formátu JSON.</returns>
      <param name="data">Graf objektů jazyka JavaScript, který má být serializován.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>Vytvoří objekt <see cref="T:System.Web.Mvc.JsonResult" />, který serializuje určený objekt do formátu JSON (JavaScript Object Notation).</summary>
      <returns>Výsledný objekt ve formátu JSON, který serializuje určený objekt do formátu JSON.</returns>
      <param name="data">Graf objektů jazyka JavaScript, který má být serializován.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
      <param name="contentEncoding">Kódování obsahu</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Pomocí typu obsahu, kódování obsahu a chování požadavku JSON vytvoří objekt <see cref="T:System.Web.Mvc.JsonResult" />, který serializuje určený objekt do formátu JSON (JavaScript Object Notation).</summary>
      <returns>Výsledný objekt, který serializuje určený objekt do formátu JSON</returns>
      <param name="data">Graf objektů jazyka JavaScript, který má být serializován.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
      <param name="contentEncoding">Kódování obsahu</param>
      <param name="behavior">Chování požadavku JSON</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Pomocí zadaného typu obsahu a chování požadavku JSON vytvoří objekt <see cref="T:System.Web.Mvc.JsonResult" />, který serializuje zadaný objekt do formátu JSON (JavaScript Object Notation).</summary>
      <returns>Výsledný objekt, který serializuje určený objekt do formátu JSON</returns>
      <param name="data">Graf objektů jazyka JavaScript, který má být serializován.</param>
      <param name="contentType">Typ obsahu (typ MIME)</param>
      <param name="behavior">Chování požadavku JSON</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Pomocí zadaného chování požadavku JSON vytvoří objekt JsonResult, který serializuje určený objekt do formátu JSON (JavaScript Object Notation).</summary>
      <returns>Výsledný objekt, který serializuje určený objekt do formátu JSON</returns>
      <param name="data">Graf objektů jazyka JavaScript, který má být serializován.</param>
      <param name="behavior">Chování požadavku JSON</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>Získá objekt slovníku stavu modelu, který obsahuje stav modelu a ověření vazeb modelu.</summary>
      <returns>Slovník stavu modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Volá se po zavolání metody akce.</summary>
      <param name="filterContext">Informace o aktuálním požadavku a akci</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Voláno před vyvoláním metody akce</summary>
      <param name="filterContext">Informace o aktuálním požadavku a akci</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Volá se při autorizaci.</summary>
      <param name="filterContext">Informace o aktuálním požadavku a akci</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Volá se při výzvě autorizace.</summary>
      <param name="filterContext">Informace o aktuálním požadavku a akci</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Volá se při autorizaci.</summary>
      <param name="filterContext">Informace o aktuálním požadavku a akci</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Volá se, když dojde v akci k neošetřené výjimce.</summary>
      <param name="filterContext">Informace o aktuálním požadavku a akci</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Volá se po provedení výsledku akce vráceném metodou akce.</summary>
      <param name="filterContext">Informace o aktuálním požadavku a výsledku akce</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Volá se před provedením výsledku akce vráceném metodou akce.</summary>
      <param name="filterContext">Informace o aktuálním požadavku a výsledku akce</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>Vytvoří objekt <see cref="T:System.Web.Mvc.PartialViewResult" />, který vykreslí částečné zobrazení.</summary>
      <returns>Výsledný objekt částečného zobrazení</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>Pomocí určeného modelu vytvoří objekt <see cref="T:System.Web.Mvc.PartialViewResult" />, který vykreslí částečné zobrazení.</summary>
      <returns>Výsledný objekt částečného zobrazení</returns>
      <param name="model">Model vykreslený částečným zobrazením</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>Pomocí zadaného názvu zobrazení vytvoří objekt <see cref="T:System.Web.Mvc.PartialViewResult" />, který vykreslí částečné zobrazení.</summary>
      <returns>Výsledný objekt částečného zobrazení</returns>
      <param name="viewName">Název zobrazení, které je vykresleno do odpovědi</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>Pomocí zadaného názvu zobrazení a modelu vytvoří objekt <see cref="T:System.Web.Mvc.PartialViewResult" />, který vykreslí částečné zobrazení.</summary>
      <returns>Výsledný objekt částečného zobrazení</returns>
      <param name="viewName">Název zobrazení, které je vykresleno do odpovědi</param>
      <param name="model">Model vykreslený částečným zobrazením</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Profile">
      <summary>Získá profil kontextu HTTP.</summary>
      <returns>Profil kontextu HTTP</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>Vytvoří objekt<see cref="T:System.Web.Mvc.RedirectResult" />, který provede přesměrování na zadanou adresu URL.</summary>
      <returns>Výsledný objekt přesměrování</returns>
      <param name="url">Adresa URL přesměrování</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Vrací instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true.</returns>
      <param name="url">Adresa URL přesměrování</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>Provede přesměrování na zadanou akci použitím názvu akce.</summary>
      <returns>Výsledný objekt přesměrování</returns>
      <param name="actionName">Název akce</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>Provede přesměrování na zadanou akci pomocí názvu akce a hodnot trasy.</summary>
      <returns>Výsledný objekt přesměrování</returns>
      <param name="actionName">Název akce</param>
      <param name="routeValues">Parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>Provede přesměrování na zadanou akci pomocí názvu akce a názvu kontroleru.</summary>
      <returns>Výsledný objekt přesměrování</returns>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>Provede přesměrování na určenou akci pomocí názvu akce, názvu kontroleru a slovníku trasy.</summary>
      <returns>Výsledný objekt přesměrování</returns>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Provede přesměrování na určenou akci pomocí názvu akce, názvu kontroleru a hodnot trasy.</summary>
      <returns>Výsledný objekt přesměrování</returns>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Provede přesměrování na určenou akci pomocí názvu akce a slovníku trasy.</summary>
      <returns>Výsledný objekt přesměrování</returns>
      <param name="actionName">Název akce</param>
      <param name="routeValues">Parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)">
      <summary>Pomocí zadaného názvu akce vrací instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true pomocí zadaného názvu akce, názvu kontroleru a hodnot trasy.</returns>
      <param name="actionName">Název akce</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)">
      <summary>Pomocí zadaného názvu akce a hodnot trasy vrací instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true pomocí zadaného názvu akce a hodnot trasy.</returns>
      <param name="actionName">Název akce</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)">
      <summary>Pomocí zadaného názvu akce a názvu kontroleru vrací instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true pomocí zadaného názvu akce a názvu kontroleru.</returns>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>Pomocí zadaného názvu akce, názvu kontroleru a hodnot trasy vrací instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true pomocí zadaného názvu akce, názvu kontroleru a hodnot trasy.</returns>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Pomocí zadaného názvu akce, názvu kontroleru a hodnot trasy vrací instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true pomocí zadaného názvu akce, názvu kontroleru a hodnot trasy.</returns>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Pomocí zadaného názvu akce a hodnot trasy vrací instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy <see cref="T:System.Web.Mvc.RedirectResult" /> s vlastností Permanent nastavenou na hodnotu true pomocí zadaného názvu akce a hodnot trasy.</returns>
      <param name="actionName">Název akce</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>Provede přesměrování na určenou trasu pomocí zadaných hodnot trasy.</summary>
      <returns>Výsledný objekt přesměrování na trasu</returns>
      <param name="routeValues">Parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>Provede přesměrování na zadanou trasu pomocí názvu trasy.</summary>
      <returns>Výsledný objekt přesměrování na trasu</returns>
      <param name="routeName">Název trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>Provede přesměrování na zadanou trasu pomocí názvu a hodnot trasy.</summary>
      <returns>Výsledný objekt přesměrování na trasu</returns>
      <param name="routeName">Název trasy</param>
      <param name="routeValues">Parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Provede přesměrování na zadanou trasu pomocí názvu a slovníku trasy.</summary>
      <returns>Výsledný objekt přesměrování na trasu</returns>
      <param name="routeName">Název trasy</param>
      <param name="routeValues">Parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>Provede přesměrování na zadanou trasu pomocí slovníku trasy.</summary>
      <returns>Výsledný objekt přesměrování na trasu</returns>
      <param name="routeValues">Parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)">
      <summary>Pomocí zadaných hodnot trasy vrací instanci třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Vrací instanci třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true.</returns>
      <param name="routeValues">Název trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)">
      <summary>Pomocí zadaného názvu trasy vrací instanci třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Pomocí zadaného názvu trasy vrací instanci třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true.</returns>
      <param name="routeName">Název trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>Pomocí zadaného názvu trasy a hodnot trasy vrací instanci třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true pomocí zadaného názvu trasy a hodnot trasy</returns>
      <param name="routeName">Název trasy</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Pomocí zadaného názvu trasy a hodnot trasy vrací instanci třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true</returns>
      <param name="routeName">Název trasy</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
      <summary>Pomocí zadaných hodnot trasy vrací instanci třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true.</summary>
      <returns>Instance třídy RedirectResult s vlastností Permanent nastavenou na hodnotu true pomocí zadaných hodnot trasy</returns>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>Získá objekt HttpRequestBase pro aktuální požadavek HTTP.</summary>
      <returns>Objekt požadavku</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Resolver">
      <summary>Představuje nahraditelný překladač závislostí poskytující služby.Ve výchozím nastavení používá <see cref="P:System.Web.Mvc.DependencyResolver.CurrentCache" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>Získá objekt HttpResponseBase pro aktuální odpověď HTTP.</summary>
      <returns>Objekt HttpResponseBase pro aktuální odpověď HTTP</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>Získá data trasy pro aktuální požadavek</summary>
      <returns>Data trasy</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>Získá objekt HttpServerUtilityBase poskytující metody, které se používají při zpracování webového požadavku.</summary>
      <returns>Objekt serveru HTTP</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>Získá objekt HttpSessionStateBase pro aktuální požadavek HTTP.</summary>
      <returns>Objekt stavu relace HTTP pro aktuální požadavek HTTP</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Tato metoda volá metodu BeginExecute.</summary>
      <returns>Výsledek operace.</returns>
      <param name="requestContext">Kontext požadavku</param>
      <param name="callback">Asynchronní zpětné volání</param>
      <param name="state">Stav objektu</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>Tato metoda volá metodu EndExecute.</summary>
      <param name="asyncResult">Asynchronní výsledek operace</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Tato metoda volá metodu OnAuthentication.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Tato metoda volá metodu OnAuthenticationChallenge.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Tato metoda volá metodu OnActionExecuted.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Tato metoda volá metodu OnActionExecuting.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Tato metoda volá metodu OnAuthorization.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Tato metoda volá metodu OnException.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Tato metoda volá metodu OnResultExecuted.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Tato metoda volá metodu OnResultExecuting.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>Získá objekt zprostředkovatele dočasných dat, který se používá k ukládání dat pro následující požadavek.</summary>
      <returns>Zprostředkovatel dočasných dat</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> nebo vlastnost ValueProvider má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru a předpony.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnoty</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> nebo vlastnost ValueProvider má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru, předpony a zahrnutých vlastností.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnoty</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> nebo vlastnost ValueProvider má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru, předpony, seznamu vlastností, které mají být vyloučeny, a seznamu vlastností, které mají být zahrnuty.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnoty</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="excludeProperties">Seznam vlastností, které mají být explicitně vyloučeny z aktualizace.Tyto vlastnosti budou vyloučeny, i když jsou uvedeny v seznamu parametrů includeProperties.</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> nebo vlastnost ValueProvider má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot, předpony, seznamu vlastností, které mají být vyloučeny, a seznamu vlastností, které mají být zahrnuty.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnoty</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="excludeProperties">Seznam vlastností, které mají být explicitně vyloučeny z aktualizace.Tyto vlastnosti budou vyloučeny, i když jsou uvedeny v seznamu parametrů includeProperties.</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot, předpony a zahrnutých vlastností.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnoty</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot a seznamu zahrnutých vlastností.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru a zahrnutých vlastností.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot a seznamu zahrnutých vlastností.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot.</summary>
      <returns>Hodnota true, pokud byla aktualizace úspěšná, jinak hodnota false.</returns>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>Ověří platnost určené instance modelu.</summary>
      <returns>Hodnota true, pokud bylo ověření úspěšné, jinak hodnota false.</returns>
      <param name="model">Model, který má být ověřen</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>Ověří určenou instanci modelu pomocí předpony HTML</summary>
      <returns>Hodnota true, pokud bylo ověření úspěšné, jinak hodnota false.</returns>
      <param name="model">Model, který má být ověřen</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli modelu</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru a předpony.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnot</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru, předpony a zahrnutých vlastností.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnot</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot kontroleru, předpony, seznamu vlastností, které mají být vyloučeny, a seznamu vlastností, které mají být zahrnuty.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnot</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="excludeProperties">Seznam vlastností, které mají být explicitně vyloučeny z aktualizace.Tyto vlastnosti budou vyloučeny, i když jsou uvedeny v seznamu includeProperties.</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot, předpony, seznamu vlastností, které mají být vyloučeny, a seznamu vlastností, které mají být zahrnuty.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnoty</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="excludeProperties">Seznam vlastností, které mají být explicitně vyloučeny z aktualizace.Tyto vlastnosti budou vyloučeny, i když jsou uvedeny v seznamu parametrů includeProperties.</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot, předpony a seznamu vlastností, které mají být zahrnuty.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli hodnoty</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot, předpony a seznamu vlastností, které mají být zahrnuty.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="prefix">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot aktuálního zprostředkovatele hodnot objektu kontroleru.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot, předpony a seznamu vlastností, které mají být zahrnuty.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="includeProperties">Seznam vlastností modelu, které mají být aktualizovány.</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje určenou instanci modelu pomocí hodnot zprostředkovatele hodnot.</summary>
      <param name="model">Instance modelu, která má být aktualizována</param>
      <param name="valueProvider">Slovník vlastností, který je použit k aktualizaci modelu</param>
      <typeparam name="TModel">Typ objektu modelu</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>Získá pomocný objekt adresy URL, který se používá ke generování adres URL využitím směrování.</summary>
      <returns>Pomocný objekt adresy URL</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>Získá informace o zabezpečení uživatele pro aktuální požadavek HTTP.</summary>
      <returns>Informace o zabezpečení uživatele pro aktuální požadavek HTTP</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>Ověří platnost určené instance modelu.</summary>
      <param name="model">Model, který má být ověřen</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>Ověří určenou instanci modelu pomocí předpony HTML</summary>
      <param name="model">Model, který má být ověřen</param>
      <param name="prefix">Předpona, která má být použita při vyhledávání hodnot ve zprostředkovateli modelu</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>Vytvoří objekt<see cref="T:System.Web.Mvc.ViewResult" />, který vykreslí zobrazení do odpovědi.</summary>
      <returns>Výsledný objekt <see cref="M:System.Web.Mvc.Controller.View" />, který vykreslí zobrazení v odpovědi.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>Pomocí modelu vytvoří objekt <see cref="T:System.Web.Mvc.ViewResult" />, který vykreslí zobrazení do odpovědi.</summary>
      <returns>Výsledný objekt zobrazení</returns>
      <param name="model">Model je vykreslen zobrazením</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>Pomocí názvu zobrazení vytvoří objekt <see cref="T:System.Web.Mvc.ViewResult" />, který vykreslí zobrazení.</summary>
      <returns>Výsledný objekt zobrazení</returns>
      <param name="viewName">Název zobrazení, které je vykresleno do odpovědi</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>Vytvoří objekt <see cref="T:System.Web.Mvc.ViewResult" />, který vykreslí určený objekt IView.</summary>
      <returns>Výsledný objekt zobrazení</returns>
      <param name="viewName">Zobrazení, které je vykresleno do odpovědi.</param>
      <param name="model">Model je vykreslen zobrazením</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>Pomocí názvu zobrazení a názvu hlavní stránky vytvoří objekt <see cref="T:System.Web.Mvc.ViewResult" />, který vykreslí zobrazení do odpovědi.</summary>
      <returns>Výsledný objekt zobrazení</returns>
      <param name="viewName">Název zobrazení, které je vykresleno do odpovědi</param>
      <param name="masterName">Název hlavní stránky nebo šablony, která má být použita při vykreslování zobrazení.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>Pomocí názvu zobrazení, názvu hlavní stránky a modelu vytvoří objekt <see cref="T:System.Web.Mvc.ViewResult" />, který vykreslí zobrazení.</summary>
      <returns>Výsledný objekt zobrazení</returns>
      <param name="viewName">Název zobrazení, které je vykresleno do odpovědi</param>
      <param name="masterName">Název hlavní stránky nebo šablony, která má být použita při vykreslování zobrazení.</param>
      <param name="model">Model je vykreslen zobrazením</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>Vytvoří objekt <see cref="T:System.Web.Mvc.ViewResult" />, který vykreslí určený objekt IView.</summary>
      <returns>Výsledný objekt zobrazení</returns>
      <param name="view">Zobrazení, které je vykresleno do odpovědi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>Vytvoří objekt <see cref="T:System.Web.Mvc.ViewResult" />, který vykreslí určený objekt <see cref="T:System.Web.Mvc.IView" />.</summary>
      <returns>Výsledný objekt zobrazení</returns>
      <param name="view">Zobrazení, které je vykresleno do odpovědi.</param>
      <param name="model">Model je vykreslen zobrazením</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ViewEngineCollection">
      <summary>Získá kolekci zobrazovacího modulu.</summary>
      <returns>Kolekce zobrazovacího modulu</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>Představuje třídu, která odpovídá za vyvolání metod akce kontroleru.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerActionInvoker" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>Získá či nastaví vazače modelů přidružené k akci.</summary>
      <returns>Vazače modelů přidružené k akci</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>Vytvoří výsledek akce.</summary>
      <returns>Objekt výsledku akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
      <param name="actionReturnValue">Vrácená hodnota akce</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>Vyhledá informace o metodě akce.</summary>
      <returns>Informace o metodě akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
      <param name="actionName">Název akce</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Načte informace o kontroleru pomocí zadaného kontextu kontroleru.</summary>
      <returns>Informace o kontroleru</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Načte informace o filtrech akce.</summary>
      <returns>Informace o filtrech akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>Získá hodnotu zadaného parametru metody akce.</summary>
      <returns>Hodnota parametru metody akce.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="parameterDescriptor">Popisovač parametru</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Získá hodnoty parametrů metody akce.</summary>
      <returns>Hodnoty parametrů metody akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Vyvolá zadanou akci pomocí zadaného kontextu kontroleru.</summary>
      <returns>Výsledek provedení akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název akce, která bude vyvolána.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Vlákno, které bylo přerušeno při vyvolání akce</exception>
      <exception cref="T:System.Exception">Při vyvolání akce došlo k blíže neurčené chybě.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vyvolá zadanou metodu akce pomocí zadaných parametrů a kontextu kontroleru.</summary>
      <returns>Výsledek provedení metody akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
      <param name="parameters">Parametry</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vyvolá zadanou metodu akce pomocí zadaných parametrů, kontextu kontroleru a filtrů akce.</summary>
      <returns>Kontext pro metodu ActionExecuted třídy <see cref="T:System.Web.Mvc.ActionFilterAttribute" /></returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="filters">Filtry akcí</param>
      <param name="actionDescriptor">Popisovač akce</param>
      <param name="parameters">Parametry</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Vyvolá zadaný výsledek akce pomocí zadaného kontextu kontroleru.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionResult">Výsledek akce</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>Vyvolá zadaný výsledek akce pomocí zadaných filtrů akce a kontextu kontroleru.</summary>
      <returns>Kontext pro metodu ResultExecuted třídy <see cref="T:System.Web.Mvc.ActionFilterAttribute" /></returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="filters">Filtry akcí</param>
      <param name="actionResult">Výsledek akce</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFiltersChallenge(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>Vyvolá zadané filtry autorizace pomocí zadaného popisovače akce a kontextu kontroleru.</summary>
      <returns>Kontext pro objekt <see cref="T:System.Web.Mvc.AuthorizeAttribute" /></returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="filters">Filtry autorizace</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>Vyvolá zadané filtry výjimek pomocí zadané výjimky a kontextu kontroleru.</summary>
      <returns>Kontext pro objekt <see cref="T:System.Web.Mvc.HandleErrorAttribute" /></returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="filters">Filtry výjimek</param>
      <param name="exception">Výjimka</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>Představuje základní třídu pro všechny kontrolery MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>Získá nebo nastaví kontext kontroleru.</summary>
      <returns>Kontext kontroleru.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>Spouští kontext učeného požadavku.</summary>
      <param name="requestContext">Kontext požadavku</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>Provede požadavek.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicializuje zadaný kontext požadavku.</summary>
      <param name="requestContext">Kontext požadavku</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>Spouští kontext učeného požadavku.</summary>
      <param name="requestContext">Kontext požadavku</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>Získá nebo nastaví slovník pro dočasná data.</summary>
      <returns>Slovník pro dočasná data</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda je pro tento požadavek povoleno ověření.</summary>
      <returns>Hodnota true, pokud je ověření tohoto požadavku povoleno, jinak hodnota false.Výchozí hodnotou je hodnota true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>Získá nebo nastaví zprostředkovatele hodnot kontroleru.</summary>
      <returns>Poskytovatel hodnot kontroleru</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewBag">
      <summary>Získá slovník dat dynamického zobrazení.</summary>
      <returns>Slovník dat dynamického zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>Získá nebo nastaví slovník pro data zobrazení.</summary>
      <returns>Slovník pro data zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>Představuje třídu, která odpovídá za dynamické vytvoření kontroleru.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>Získá aktuální objekt tvůrce kontroleru.</summary>
      <returns>Aktuální tvůrce kontroleru.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>Získá výchozí obory názvů.</summary>
      <returns>Výchozí obory názvů.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>Získá související objekt factory kontroleru.</summary>
      <returns>Objekt factory kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>Nastaví objekt factory kontroleru pomocí zadaného typu.</summary>
      <param name="controllerFactoryType">Typ objektu factory kontroleru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerFactoryType" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Objekt factory kontroleru nelze přiřadit z typu v parametru <paramref name="controllerFactoryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Při nastavování objektu factory kontroleru došlo k chybě.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>Nastaví zadaný objekt faktory kontroleru.</summary>
      <param name="controllerFactory">Objekt factory kontroleru</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerFactory" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>Zapouzdří informace o požadavcích HTTP, které odpovídají zadaným instancím <see cref="T:System.Web.Routing.RouteBase" /> a <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerContext" /> pomocí zadaného kontextu HTTP, dat směrování URL a kontroleru.</summary>
      <param name="httpContext">Kontext HTTP</param>
      <param name="routeData">Data trasy</param>
      <param name="controller">Kontroler</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerContext" /> pomocí zadaného kontextu kontroleru.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerContext" /> pomocí zadaného kontextu požadavku a kontroleru.</summary>
      <param name="requestContext">Kontext požadavku</param>
      <param name="controller">Kontroler</param>
      <exception cref="T:System.ArgumentNullException">Jeden nebo oba parametry mají hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>Získá nebo nastaví kontroler.</summary>
      <returns>Kontroler</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.DisplayMode">
      <summary>Získá režim zobrazení.</summary>
      <returns>Režim zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>Získá nebo nastaví kontext HTTP.</summary>
      <returns>Kontext HTTP</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>Získá hodnotu, která určuje, zda je přidružená metoda akce podřízenou akcí.</summary>
      <returns>Hodnota true, pokud je přidružená metoda akce podřízenou akcí, jinak hodnota false</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>Získá objekt, který obsahuje informace o kontextu zobrazení pro nadřazenou metodu akce.</summary>
      <returns>Objekt, který obsahuje informace o kontextu zobrazení pro nadřazenou metodu akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>Získá nebo nastaví kontext požadavku.</summary>
      <returns>Kontext požadavku</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>Získá nebo nastaví data směrování URL.</summary>
      <returns>Data směrování URL</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>Zapouzdří informace popisující kontroler, například jeho název, typ a akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>Získá název kontroleru.</summary>
      <returns>Název kontroleru</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>Získá typ kontroleru.</summary>
      <returns>Typ kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Nalezne metodu akce pomocí zadaného názvu a kontextu kontroleru.</summary>
      <returns>Informace o metodě akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název akce</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>Načte seznam popisovačů metody akce v kontroleru.</summary>
      <returns>Seznam popisovačů metody akce v kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Načte vlastní atributy definované pro tento člen s vynecháním pojmenovaných atributů.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Načte vlastní atributy zadaného typu definované pro tento člen s vynecháním pojmenovaných atributů.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> má hodnotu null (nothing v jazyce Visual Basic).</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Získá atributy filtru.</summary>
      <returns>Atributy filtru</returns>
      <param name="useCache">Hodnota true, pokud má být použita mezipaměť; jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Načte hodnotu, která určuje, zda je pro tento člen definována jedna nebo více instancí zadaného vlastního atributu.</summary>
      <returns>Hodnota true, pokud je pro tento člen definován typ <paramref name="attributeType" />, jinak hodnota false.</returns>
      <param name="attributeType">Typ vlastního atributu</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> má hodnotu null (nothing v jazyce Visual Basic).</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>Při implementaci do odvozené třídy získá jedinečný ID pro popisovač kontroleru pomocí opožděné inicializace.</summary>
      <returns>Jedinečný ID</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>Přidá kontroler k instanci <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Vrátí kolekci filtrů instance kontroleru.</summary>
      <returns>Kolekce filtrů instance kontroleru</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>Představuje atribut, který vyvolá vlastní vazač modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>Načte přidružený vazač modelu.</summary>
      <returns>Odkaz na objekt, který implementuje rozhraní <see cref="T:System.Web.Mvc.IModelBinder" /></returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>Poskytuje kontejner pro běžná metadata pro třídu <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> a pro třídu <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> datového modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String,System.ComponentModel.DataAnnotations.DisplayColumnAttribute)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
      <param name="provider">Zprostředkovatel metadat modelu s datovými poznámkami</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název vlastnosti</param>
      <param name="displayColumnAttribute">Atribut sloupce zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>Vrací jednoduchý text pro data modelu.</summary>
      <returns>Jednoduchý text pro data modelu</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>Implementuje výchozího zprostředkovatele metadat modelu pro rozhraní ASP.NET.MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Získá metadata pro zadanou vlastnost.</summary>
      <returns>Metadata pro vlastnost</returns>
      <param name="attributes">Atributy</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>Představuje metodu, která vytvoří instanci <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>Poskytuje validátor modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru modelu</param>
      <param name="attribute">Atribut ověření modelu</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>Získá atribut ověření pro validátor modelu.</summary>
      <returns>Atribut ověření pro validátor modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>Získá chybovou zprávu pro chybu ověřování.</summary>
      <returns>Chybová zpráva pro chybu ověřování</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>Načte kolekci ověřovacích pravidel klienta.</summary>
      <returns>Kolekce ověřovacích pravidel klienta</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>Získá hodnotu určující, zda je vyžadováno ověření modelu.</summary>
      <returns>Hodnota true, pokud je vyžadováno ověření modelu. V opačném případě hodnota false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>Vrátí seznam chyb ověření modelu.</summary>
      <returns>Seznam chybových zpráv ověření modelu nebo prázdný seznam (pokud k žádným chybám nedošlo).</returns>
      <param name="container">Kontejner modelu</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>Poskytuje validátor modelu pro zadaný typ ověření.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru modelu</param>
      <param name="attribute">Atribut ověření modelu</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>Získá atribut ověření z validátoru modelu.</summary>
      <returns>Atribut ověření z validátoru modelu</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>Implementuje výchozího zprostředkovatele ověření pro aplikace ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda jsou požadovány typy hodnot, které nepovolují hodnotu null.</summary>
      <returns>Hodnota true, pokud se jedná o typ nepovolující hodnotou null, jinak hodnota false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Získá seznam validátorů.</summary>
      <returns>Seznam validátorů</returns>
      <param name="metadata">Metadata</param>
      <param name="context">Kontext</param>
      <param name="attributes">Seznam atributů ověřování</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Zaregistruje adaptér pro ověřování na straně klienta.</summary>
      <param name="attributeType">Typ atributu ověřování</param>
      <param name="adapterType">Typ adaptéru</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Zaregistruje objekt factory adaptéru pro zprostředkovatele ověřování.</summary>
      <param name="attributeType">Typ atributu</param>
      <param name="factory">Objekt factory, který bude použit k vytvoření objektu.<see cref="T:System.Web.Mvc.ModelValidator" /> pro zadaný atribut,</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Zaregistruje výchozí adaptér.</summary>
      <param name="adapterType">Typ adaptéru</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Zaregistruje výchozí objekt factory adaptéru.</summary>
      <param name="factory">Objekt factory, který bude použit k vytvoření <see cref="T:System.Web.Mvc.ModelValidator" /> pro výchozí adaptér</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Zaregistrujte adaptér pro ověřování výchozího objektu.</summary>
      <param name="adapterType">Typ adaptéru</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Zaregistruje objekt factory adaptéru pro zprostředkovatele ověřování výchozího objektu.</summary>
      <param name="factory">Objekt factory</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Zaregistrujte adaptér pro ověřování objektu.</summary>
      <param name="modelType">Typ modelu</param>
      <param name="adapterType">Typ adaptéru</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Zaregistruje objekt factory adaptéru pro zprostředkovatele ověřování objektu.</summary>
      <param name="modelType">Typ modelu</param>
      <param name="factory">Objekt factory</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Poskytuje objekt pro vytváření validátorů založených na objektu <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>Poskytuje kontejner pro validátor modelu chybových informací.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Získá seznam validátorů modelu chybových informací.</summary>
      <returns>Seznam validátorů modelu chybových informací</returns>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>Představuje objekt factory kontroleru, který je registrován ve výchozím nastavení.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DefaultControllerFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> pomocí aktivátoru kontroleru.</summary>
      <param name="controllerActivator">Objekt, který implementuje rozhraní aktivátoru kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Vytvoří zadaný kontroler pomocí zadaného kontextu požadavku.</summary>
      <returns>Kontroler</returns>
      <param name="requestContext">Kontext požadavku HTTP, který obsahuje kontext HTTP a data trasy</param>
      <param name="controllerName">Název kontroleru</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="controllerName" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>Načte instanci kontroleru pro zadaný kontext požadavku a typ kontroleru.</summary>
      <returns>Instance kontroleru</returns>
      <param name="requestContext">Kontext požadavku HTTP, který obsahuje kontext HTTP a data trasy</param>
      <param name="controllerType">Typ kontroleru</param>
      <exception cref="T:System.Web.HttpException">Parametr <paramref name="controllerType" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controllerType" /> nelze přiřadit.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze vytvořit instanci <paramref name="controllerType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>Vrací chování relace kontroleru.</summary>
      <returns>Chování relace kontroleru</returns>
      <param name="requestContext">Kontext požadavku</param>
      <param name="controllerType">Typ kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>Načte typ kontroleru pro zadaný název a kontext požadavku.</summary>
      <returns>Typ kontroleru</returns>
      <param name="requestContext">Kontext požadavku HTTP, který obsahuje kontext HTTP a data trasy</param>
      <param name="controllerName">Název kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Uvolní zadaný kontroler.</summary>
      <param name="controller">Kontroler, který má být uvolněn</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Toto rozhraní API podporuje infrastrukturu ASP.NET MVC a není zamýšleno k použití přímo z vašeho kódu.Tato metoda volá metodu <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />.</summary>
      <returns>Chování relace kontroleru</returns>
      <param name="requestContext">Kontext požadavku</param>
      <param name="controllerName">Název kontroleru</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>Mapuje žádost prohlížeče na datový objekt.Tato třída poskytuje konkrétní implementaci vazače modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DefaultModelBinder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>Získá nebo nastaví vazače modelů pro danou aplikaci.</summary>
      <returns>Vazače modelů pro aplikaci</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Váže model pomocí zadaného kontextu kontroleru a kontextu vazby.</summary>
      <returns>Vázaný objekt</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext " /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>Váže zadanou vlastnost pomocí zadaného kontextu kontroleru, kontextu vazby a zadaného popisovače vlastnosti.</summary>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <param name="propertyDescriptor">Popisuje vlastnost, která má být vázána.Popisovač poskytuje informace, např. typ komponenty, typ vlastnosti a hodnotu vlastnosti.Dále poskytuje metody pro získání nebo nastavení hodnoty vlastnosti.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>Vytváří zadaný typ modelu pomocí zadaného kontextu kontroleru a kontextu vazby.</summary>
      <returns>Datový objekt zadaného typu</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <param name="modelType">Typ objektu modelu, který má být vrácen.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>Vytváří index (podindex) na základě kategorie komponent, které tvoří větší index, kde je zadanou hodnotou indexu celé číslo.</summary>
      <returns>Název podindexu</returns>
      <param name="prefix">Předpona podindexu</param>
      <param name="index">Hodnota indexu</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>Vytváří index (podindex) na základě kategorie komponent, které tvoří větší index, kde je zadanou hodnotou indexu řetězec.</summary>
      <returns>Název podindexu</returns>
      <param name="prefix">Předpona podindexu</param>
      <param name="index">Hodnota indexu</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>Vytváří název dílčí vlastnosti pomocí zadané předpony a názvu vlastnosti.</summary>
      <returns>Název dílčí vlastnosti</returns>
      <param name="prefix">Předpona dílčí vlastnosti</param>
      <param name="propertyName">Název vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Vrací sadu vlastností odpovídajících omezením filtru vlastností, které jsou určeny daným parametrem <paramref name="binding context" />.</summary>
      <returns>Vyčíslitelná sada popisovačů vlastností</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Vrací vlastnosti modelu pomocí zadaného kontextu kontroleru a kontextu vazby.</summary>
      <returns>Kolekce popisovačů vlastností</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>Vrací hodnotu vlastnosti pomocí zadaného kontextu kontroleru, kontextu vazby, popisovače vlastností a vazače vlastností.</summary>
      <returns>Objekt, který představuje hodnotu vlastnosti</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <param name="propertyDescriptor">Popisovač pro vlastnost, která má být zpřístupněnaPopisovač poskytuje informace, např. typ komponenty, typ vlastnosti a hodnotu vlastnosti.Dále poskytuje metody pro získání nebo nastavení hodnoty vlastnosti.</param>
      <param name="propertyBinder">Objekt, který poskytuje způsob vazby vlastnosti</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Vrací popisovač objektu pro typ, který je zadán svým kontextem kontroleru a kontextem vazby.</summary>
      <returns>Objekt popisovače vlastního typu</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>Určuje, zda je datový model pro zadaný kontext vazby platný.</summary>
      <returns>Hodnota true, pokud je model platný, jinak hodnota false.</returns>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Volá se, když dojde k aktualizaci modelu.</summary>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Volá se, když probíhá aktualizace modelu.</summary>
      <returns>Hodnota true, pokud je model aktualizován, jinak hodnota false.</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Volá se, když dojde k ověření zadané vlastnosti.</summary>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <param name="propertyDescriptor">Popisuje vlastnost, která má být ověřena.Popisovač poskytuje informace, např. typ komponenty, typ vlastnosti a hodnotu vlastnosti.Dále poskytuje metody pro získání nebo nastavení hodnoty vlastnosti.</param>
      <param name="value">Hodnota, na kterou má být nastavena vlastnost.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Volá se, když probíhá ověřování zadané vlastnosti.</summary>
      <returns>Hodnota true, pokud probíhá ověřování vlastnosti, jinak hodnota false.</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <param name="propertyDescriptor">Popisuje vlastnost, která je ověřována.Popisovač poskytuje informace, např. typ komponenty, typ vlastnosti a hodnotu vlastnosti.Dále poskytuje metody pro získání nebo nastavení hodnoty vlastnosti.</param>
      <param name="value">Hodnota, na kterou má být nastavena vlastnost.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>Získá nebo nastaví název souboru prostředků (klíč třídy), který obsahuje lokalizované hodnoty řetězce.</summary>
      <returns>Název souboru prostředků (klíč třídy)</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Nastaví zadanou vlastnost pomocí zadaného kontextu kontroleru, kontextu vazby a hodnoty vlastnosti.</summary>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
      <param name="propertyDescriptor">Popisuje vlastnost, která má být nastavena.Popisovač poskytuje informace, např. typ komponenty, typ vlastnosti a hodnotu vlastnosti.Dále poskytuje metody pro získání nebo nastavení hodnoty vlastnosti.</param>
      <param name="value">Hodnota, na kterou má být nastavena vlastnost.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>Představuje mezipaměť pro umístění zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> pomocí zadaného časového rozsahu mezipaměti.</summary>
      <param name="timeSpan">Časový rozsah mezipaměti</param>
      <exception cref="T:System.InvalidOperationException">Atribut ticks parametru <paramref name="timeSpan" /> je nastaven na záporné číslo.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Načte výchozí umístění zobrazení pomocí zadaného kontextu protokolu HTTP a klíče mezipaměti.</summary>
      <returns>Výchozí umístění zobrazení</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="key">Klíč mezipaměti</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Vloží zobrazení do zadané virtuální cesty pomocí zadaného kontextu protokolu HTTP, klíče mezipaměti a virtuální cesty.</summary>
      <param name="httpContext">Kontext HTTP</param>
      <param name="key">Klíč mezipaměti</param>
      <param name="virtualPath">Virtuální cesta</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> má hodnotu null.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>Vytváří prázdnou mezipaměť umístění zobrazení.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>Získá nebo nastaví časový rozsah mezipaměti.</summary>
      <returns>Časový rozsah mezipaměti</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>Poskytuje registrační bod pro překladače závislostí, které implementují <see cref="T:System.Web.Mvc.IDependencyResolver" />, nebo lokátor společných služeb IServiceLocator.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DependencyResolver" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>Získá implementaci překladače závislostí.</summary>
      <returns>Implementace překladače závislostí</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>Toto rozhraní API podporuje infrastrukturu ASP.NET MVC a není zamýšleno k použití přímo z vašeho kódu.</summary>
      <returns>Implementace překladače závislostí</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Toto rozhraní API podporuje infrastrukturu ASP.NET MVC a není zamýšleno k použití přímo z vašeho kódu.</summary>
      <param name="getService">Funkce, která poskytuje tuto službu.</param>
      <param name="getServices">Funkce, která poskytuje tyto služby.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>Toto rozhraní API podporuje infrastrukturu ASP.NET MVC a není zamýšleno k použití přímo z vašeho kódu.</summary>
      <param name="commonServiceLocator">Lokátor společných služeb</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Toto rozhraní API podporuje infrastrukturu ASP.NET MVC a není zamýšleno k použití přímo z vašeho kódu.</summary>
      <param name="resolver">Objekt, který implementuje překladač závislostí.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Poskytuje registrační bod pro překladače závislostí pomocí zadaného delegáta služby a zadaných delegátů kolekce služeb.</summary>
      <param name="getService">Delegát služby</param>
      <param name="getServices">Delegáti služeb</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>Poskytuje registrační bod pro překladače závislostí pomocí poskytnutého lokátoru společných služeb v případě, kdy se používá rozhraní lokátoru služeb.</summary>
      <param name="commonServiceLocator">Lokátor společných služeb</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Poskytuje registrační bod pro překladače závislostí pomocí zadaného rozhraní překladače závislostí.</summary>
      <param name="resolver">Překladač závislostí</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>Poskytuje implementaci zajišťující bezpečnost typů <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> a <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Zobrazí samostatně registrované služby, které podporují vytvoření libovolného objektu.</summary>
      <returns>Požadovaná služba nebo objekt.</returns>
      <param name="resolver">Instance překladače závislostí, kterou tato metoda rozšiřuje.</param>
      <typeparam name="TService">Typ požadované služby nebo objektu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Vyřeší více registrovaných služeb.</summary>
      <returns>Požadované služby.</returns>
      <param name="resolver">Instance překladače závislostí, kterou tato metoda rozšiřuje.</param>
      <typeparam name="TService">Typ požadovaných služeb.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>Představuje základní třídu pro zprostředkovatele hodnot, jejichž hodnoty pocházejí z kolekce, která implementuje rozhraní <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" />.</summary>
      <param name="dictionary">Páry název/hodnota, které slouží k inicializaci zprostředkovatele hodnot</param>
      <param name="culture">Informace o konkrétní jazykové verzi, např. název jazyka, používané písmo a kalendář</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>Určuje, zda kolekce obsahuje zadanou předponu.</summary>
      <returns>Hodnota true, pokud kolekce obsahuje zadanou předponu, jinak hodnota false.</returns>
      <param name="prefix">Předpona, kterou chcete vyhledat.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="prefix" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetKeysFromPrefix(System.String)">
      <summary>Získá klíče z předpony.</summary>
      <returns>Klíče z předpony</returns>
      <param name="prefix">Předpona</param>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>Vrací objekt hodnoty pomocí specifického klíče a kontextu kontroleru.</summary>
      <returns>Objekt hodnoty pro zadaný klíč</returns>
      <param name="key">Klíč objektu hodnoty, který má být načten.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>Poskytuje prázdného zprostředkovatele metadat pro datové modely, které nevyžadují metadata.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Vytvoří novou instanci třídy <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <returns>Nová instance třídy <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="attributes">Atributy</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název modelu</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>Poskytuje prázdného zprostředkovatele ověření pro modely, které nevyžadují validátor.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Získá prázdný validátor modelu.</summary>
      <returns>Prázdný validátor modelu</returns>
      <param name="metadata">Metadata</param>
      <param name="context">Kontext</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>Představuje výsledek, který nic neprovádí, např. metodu akce kontroleru, která nic nespouští.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.EmptyResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Spouští kontext určeného výsledku.</summary>
      <param name="context">Kontext výsledku</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>Poskytuje kontext používání třídy <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ExceptionContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ExceptionContext" /> pro zadanou výjimku pomocí zadaného kontextu kontroleru.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="exception">Výjimka</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>Získá nebo nastaví objekt výjimky.</summary>
      <returns>Objekt výjimky</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>Získá nebo nastaví hodnotu určující, zda byla výjimka vyřešena.</summary>
      <returns>Hodnota true, pokud byla výjimka vyřešena. V opačném případě hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>Získá nebo nastaví výsledek akce.</summary>
      <returns>Výsledek akce</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>Poskytuje třídu pomocníka pro získání názvu modelu z výrazu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>Získá název modelu z výrazu lambda.</summary>
      <returns>Název modelu</returns>
      <param name="expression">Výraz</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>Získá název modelu z řetězcového výrazu.</summary>
      <returns>Název modelu</returns>
      <param name="expression">Výraz</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>Poskytuje kontejner pro metadata ověření pole na straně klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FieldValidationMetadata" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>Získá nebo nastaví název datového pole.</summary>
      <returns>Název datového pole</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda má být obsah ověřovací zprávy nahrazen chybou ověření klienta.</summary>
      <returns>Hodnota true, pokud by obsah ověřovací zprávy měl být nahrazen chybou ověření klienta, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>Získá nebo nastaví ID zprávy validátora.</summary>
      <returns>ID zprávy validátora</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>Získá ověřovací pravidla klienta.</summary>
      <returns>Ověřovací pravidla klienta</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>Odešle obsah binárního souboru do odpovědi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FileContentResult" /> pomocí zadaného obsahu souboru a typu obsahu.</summary>
      <param name="fileContents">Bajtové pole, které má být odesláno do odpovědi.</param>
      <param name="contentType">Typ obsahu, který se má použít pro odpověď.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="fileContents" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>Binární obsah, který má být odeslán do odpovědi.</summary>
      <returns>Obsah souboru.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapíše obsah souboru do odpovědi.</summary>
      <param name="response">Odpověď</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>Odešle obsah souboru do odpovědi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FilePathResult" /> pomocí zadaného názvu souboru a typu obsahu.</summary>
      <param name="fileName">Název souboru, který má být odeslán do odpovědi</param>
      <param name="contentType">Typ obsahu odpovědi</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fileName" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>Získá nebo nastaví cestu k souboru, který je odesílán do odpovědi.</summary>
      <returns>Přístupová cesta k souboru, který je odesílán do odpovědi</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapíše soubor jako odpověď.</summary>
      <param name="response">Odpověď</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>Představuje základní třídu, jejíž prostřednictvím je obsah binárního souboru odeslán do odpovědi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FileResult" />.</summary>
      <param name="contentType">Typ obsahu</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="contentType" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>Získá typ obsahu, který se má použít pro odpověď.</summary>
      <returns>Typ obsahu</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umožňuje zpracování výsledku metody akce pomocí vlastního typu, který dědí z třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>Získá nebo nastaví záhlaví dispozice obsahu, aby se v prohlížeči zobrazilo dialogové okno ke stažení souboru s názvem zadaného souboru.</summary>
      <returns>Název souboru</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapíše soubor jako odpověď.</summary>
      <param name="response">Odpověď</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>Odešle binární obsah do odpovědi pomocí instance <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FileStreamResult" />.</summary>
      <param name="fileStream">Proud, který má být odeslán do odpovědi.</param>
      <param name="contentType">Typ obsahu, který se má použít pro odpověď.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="fileStream" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>Získá proud, který se odešle do dopovědi.</summary>
      <returns>Proud souboru</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapíše soubor jako odpověď.</summary>
      <param name="response">Odpověď</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>Představuje třídu metadat, která obsahuje odkaz na implementaci nejméně jednoho rozhraní filtru, jeho pořadí či oboru.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Filter" />.</summary>
      <param name="instance">Instance </param>
      <param name="scope">Obor</param>
      <param name="order">Pořadí</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>Představuje konstantu, která se používá k určení výchozího pořadí filtrů.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>Získá instanci třídy.</summary>
      <returns>Instance této třídy</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>Získá pořadí použití filtru.</summary>
      <returns>Pořadí použití filtru</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>Získá řazení oborů filtru.</summary>
      <returns>Řazení oborů filtru</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>Představuje základní třídu pro atributy filtru akce a výsledku.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>Získá nebo nastaví hodnotu, která udává, zda lze zadat více než jednu instanci atributu filtru.</summary>
      <returns>Hodnota true, je-li možno zadat více než jednu instanci atributu filtru, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>Získá nebo nastaví pořadí provedení filtrů akce.</summary>
      <returns>Pořadí provedení filtrů akce</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>Definuje zprostředkovatele filtrů pro atributy filtru.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor(System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> a volitelně ukládá instance atributu do mezipaměti.</summary>
      <param name="cacheAttributeInstances">Hodnota true, chcete-li uložit instance atributu do mezipaměti, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Získá kolekci vlastních atributů akce.</summary>
      <returns>Kolekce vlastních atributů akce.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Získá kolekci atributů kontroleru.</summary>
      <returns>Kolekce atributů kontroleru.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Agreguje filtry od všech zprostředkovatelů filtrů do jedné kolekce.</summary>
      <returns>Filtry kolekce od všech zprostředkovatelů filtrů.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>Zapouzdří informace o dostupných filtrech akcí.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FilterInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>Pomocí zadané kolekce filtrů inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FilterInfo" />.</summary>
      <param name="filters">Kolekce filtrů</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>Získá všechny filtry akcí v aplikaci.</summary>
      <returns>Filtry akcí</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthenticationFilters">
      <summary>Získá všechny filtry ověřování v aplikaci.</summary>
      <returns>Seznam filtrů ověřování</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>Získá všechny filtry autorizace v aplikaci.</summary>
      <returns>Filtry autorizace</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>Získá všechny filtry výjimek v aplikaci.</summary>
      <returns>Filtry výjimek</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>Získá všechny filtry výsledků v aplikaci.</summary>
      <returns>Filtry výsledků</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>Představuje kolekci poskytovatelů filtru pro aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FilterProviderCollection" /> s využitím zadaného seznamu zprostředkovatele filtrů.</summary>
      <param name="providers">Seznam zprostředkovatelů filtrů</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.ClearItems">
      <summary>Odebere všechny elementy z kolekce.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Vrátí kolekci poskytovatelů filtru.</summary>
      <returns>Kolekce poskytovatelů filtru.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>Vloží do kolekce element v zadaném indexu.</summary>
      <param name="index">Index založený na nule, do kterého se má položka vložit.</param>
      <param name="item">Objekt, který se má vložit.Hodnota nesmí být null u typů odkazu.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.RemoveItem(System.Int32)">
      <summary>Odebere element v zadaném indexu kolekce.</summary>
      <param name="index">Index elementu (počítáno od nuly), který se má odebrat</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.SetItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>Nahradí element v zadaném indexu.</summary>
      <param name="index">Index elementu založený na nule, který se má nahradit</param>
      <param name="item">Nová hodnota pro element v zadaném indexuHodnota nesmí být null u typů odkazu.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>Poskytuje registrační bod pro filtry.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>Poskytuje registrační bod pro filtry.</summary>
      <returns>Kolekce filtrů</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>Definuje hodnoty určující pořadí spouštění filtrů aplikace MVC v rozhraní ASP.NET v rámci téhož typu filtru a pořadí filtru.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>Určuje pořadí před <see cref="F:System.Web.Mvc.FilterScope.Last" /> a po <see cref="F:System.Web.Mvc.FilterScope.Controller" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>Určuje pořadí před <see cref="F:System.Web.Mvc.FilterScope.Action" /> a po <see cref="F:System.Web.Mvc.FilterScope.Global" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>Určuje první položku.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>Určuje pořadí před <see cref="F:System.Web.Mvc.FilterScope.Controller" /> a po <see cref="F:System.Web.Mvc.FilterScope.First" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>Určuje poslední položku.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>Obsahuje zprostředkovatele hodnot formuláře pro aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
      <param name="collection">Kolekce</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="collection" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>Získá zadaného zprostředkovatele hodnot.</summary>
      <returns>Zprostředkovatel hodnoty</returns>
      <param name="name">Název zprostředkovatele hodnot, kterého chcete získat.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Získá hodnotu určující, zda poskytovatel hodnot obsahuje položku se zadanou předponou.</summary>
      <returns>Hodnota true, pokud poskytovatel hodnot obsahuje položku se zadanou předponou. V opačném případě hodnota false.</returns>
      <param name="prefix">Předpona, kterou chcete vyhledat</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Získá hodnotu z zprostředkovatele hodnot pomocí zadaného klíče.</summary>
      <returns>Hodnota z zprostředkovatele hodnot</returns>
      <param name="key">Klíč</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>Vrátí slovník obsahující zprostředkovatele hodnot.</summary>
      <returns>Slovník poskytovatelů hodnot</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>Zapouzdří informace požadované za účelem ověření a zpracování vstupních dat z formuláře protokolu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FormContext" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>Získá validátory pole pro daný formulář.</summary>
      <returns>Slovník validátorů pole pro daný formulář.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>Získá nebo nastaví identifikátor formuláře.</summary>
      <returns>Identifikátor formuláře</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>Vrací serializovaný objekt obsahující identifikátor formuláře a hodnoty ověření pole pro daný formulář.</summary>
      <returns>Serializovaný objekt obsahující identifikátor formuláře a hodnoty ověření pole pro daný formulář</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>Vrací hodnotu ověření pro zadané vstupní pole.</summary>
      <returns>Hodnota, pomocí které má být ověřeno vstupní pole</returns>
      <param name="fieldName">Název pole, pro které má být načtena hodnota ověření</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fieldName" /> má buď hodnotu null, nebo je prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>Vrací hodnotu ověření pro zadané vstupní pole a hodnotu, která určuje postup pro případ, že není nalezena hodnota ověření.</summary>
      <returns>Hodnota, pomocí které má být ověřeno vstupní pole</returns>
      <param name="fieldName">Název pole, pro které má být načtena hodnota ověření</param>
      <param name="createIfNotFound">Hodnota true pro vytvoření hodnoty ověření, pokud není žádná nalezena, jinak hodnota false.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fieldName" /> má buď hodnotu null, nebo je prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>Vrátí hodnotu, která určuje, zda bylo dané pole ve formuláři vykresleno.</summary>
      <returns>Hodnota true, pokud bylo pole vykresleno, jinak hodnota false.</returns>
      <param name="fieldName">Název pole</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>Nastaví hodnotu, která určuje, zda bylo dané pole ve formuláři vykresleno.</summary>
      <param name="fieldName">Název pole</param>
      <param name="value">Hodnota true určuje, že bylo dané pole ve formuláři vykresleno, jinak hodnota false.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>Určuje, zda by měly být chyby ověření klienta dynamicky přidány do souhrnu ověření.</summary>
      <returns>Hodnota true, pokud by měly být chyby ověření klienta přidány do daného souhrnu ověření, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>Získá nebo nastaví identifikátor pro souhrn ověření.</summary>
      <returns>Identifikátor pro souhrn ověření</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>Podává výčet typů požadavku HTTP pro formulář.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>Udává požadavek GET.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>Udává požadavek POST.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>Představuje zprostředkovatele hodnot formuláře, které jsou obsaženy v objektu <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FormValueProvider" />.</summary>
      <param name="controllerContext">Objekt, který zapouzdřuje informace o aktuální žádosti HTTP</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>Představuje třídu, která odpovídá za vytvoření nové instance objektu zprostředkovatele hodnot formuláře.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.FormValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí objekt zprostředkovatele hodnot formuláře pro zadaný kontext kontroleru.</summary>
      <returns>Objekt zprostředkovatele hodnot formuláře.</returns>
      <param name="controllerContext">Objekt, který zapouzdřuje informace o aktuální žádosti HTTP</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>Představuje třídu, která obsahuje všechny globální filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.GlobalFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>Přidá zadaný filtr do kolekce globálních filtrů.</summary>
      <param name="filter">Filtr</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>Přidá zadaný filtr do kolekce globálních filtrů pomocí zadaného pořadí spuštění filtrů.</summary>
      <param name="filter">Filtr</param>
      <param name="order">Pořadí spuštění filtrů</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>Odebere všechny filtry z kolekce globálních filtrů.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>Určí, zda se filtr nachází v kolekci globálních filtrů.</summary>
      <returns>Hodnota true, pokud se <paramref name="filter" /> nachází v kolekci globálních filtrů, jinak hodnota false.</returns>
      <param name="filter">Filtr</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>Získá počet filtrů v kolekci globálních filtrů.</summary>
      <returns>Počet filtrů v kolekci globálních filtrů</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>Vrátí enumerátor, který iteruje kolekcí globálních filtrů.</summary>
      <returns>Enumerátor, který iteruje kolekcí globálních filtrů</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>Odebere všechny filtry odpovídající zadanému filtru.</summary>
      <param name="filter">Filtr pro odebrání</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Toto rozhraní API podporuje infrastrukturu ASP.NET MVC a není zamýšleno k použití přímo z vašeho kódu. </summary>
      <returns>Enumerátor, který iteruje kolekcí globálních filtrů</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Toto rozhraní API podporuje infrastrukturu ASP.NET MVC a není zamýšleno k použití přímo z vašeho kódu.</summary>
      <returns>Enumerátor, který iteruje kolekcí globálních filtrů</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>Představuje kolekci globálních filtrů.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>Získá nebo nastaví kolekci globálních filtrů.</summary>
      <returns>Kolekce globálních filtrů</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>Představuje atribut, který se používá ke zpracování výjimky vyvolané metodou akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>Získá nebo nastaví typ výjimky.</summary>
      <returns>Typ výjimky</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>Získá nebo nastaví předlohu pro zobrazení informací o výjimce.</summary>
      <returns>Předloha</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Volá se, když dojde k výjimce.</summary>
      <param name="filterContext">Kontext filtru akcí</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>Získá jedinečný identifikátor pro tento atribut.</summary>
      <returns>Jedinečný identifikátor pro tento atribut</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>Získá nebo nastaví zobrazení stránky pro zobrazení informací o výjimce.</summary>
      <returns>Zobrazení stránky</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>Zapouzdří informace pro zpracování chyby vrácené metodou akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HandleErrorInfo" />.</summary>
      <param name="exception">Výjimka</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="actionName">Název akce</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="controllerName" /> nebo <paramref name="actionName" /> má hodnotu null, nebo je prázdný.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>Získá nebo nastaví název akce, která byla spuštěna při vrácení výjimky.</summary>
      <returns>Název akce</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>Získá nebo nastaví název kontroleru obsahující metodu akce, která vrátila výjimku.</summary>
      <returns>Název kontroleru</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>Získá nebo nastaví objekt výjimky.</summary>
      <returns>Objekt výjimky</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>Představuje atribut používaný k označení, zda má být hodnota vlastnosti nebo pole vykreslena jako skrytý element input.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HiddenInputAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>Získá nebo nastaví hodnotu určující, zda zobrazit hodnotu skrytého elementu input.</summary>
      <returns>Hodnota true, pokud má být hodnota zobrazena. V opačném případě hodnota false.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html5DateRenderingMode">
      <summary>Podává výčet režimu vykreslování data pro HTML5.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.CurrentCulture">
      <summary>Aktuální formátování jazykové verze</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.Rfc3339">
      <summary>Formátování RFC 3339</summary>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>Podporuje vykreslení ovládacích prvků jazyka HTML v zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HtmlHelper" /> pomocí zadaného kontextu zobrazení a kontejneru dat zobrazení.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="viewDataContainer">Kontejner dat zobrazení</param>
      <exception cref="T:System.ArgumentNullException">Parametr <see cref="T:System.Web.Mvc.ViewContext" /> nebo viewDataContainer má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HtmlHelper" /> pomocí zadaného kontextu zobrazení, kontejneru dat zobrazení a kolekce tras.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="viewDataContainer">Kontejner dat zobrazení</param>
      <param name="routeCollection">Kolekce tras</param>
      <exception cref="T:System.ArgumentNullException">Jeden nebo více parametrů má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>V zadaných atributech HTML nahradí znak podtržítka (_) pomlčkou (-).</summary>
      <returns>Atributy HTML se znaky podtržítka nahrazenými pomlčkami</returns>
      <param name="htmlAttributes">Atributy HTML</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>Generuje skryté pole formuláře (token proti padělání), které je ověřeno při odeslání formuláře.</summary>
      <returns>Generované pole formuláře (token proti padělání).</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>Generuje skryté pole formuláře (token proti padělání), které je ověřeno při odeslání formuláře.Hodnota pole je generována pomocí zadané hodnoty řetězce salt.</summary>
      <returns>Generované pole formuláře (token proti padělání).</returns>
      <param name="salt">Hodnota řetězce salt, kterou může představovat jakýkoli neprázdný řetězec</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>Generuje skryté pole formuláře (token proti padělání), které je ověřeno při odeslání formuláře.Hodnota pole je generována pomocí zadané hodnoty řetězce salt, domény a cesty.</summary>
      <returns>Generované pole formuláře (token proti padělání).</returns>
      <param name="salt">Hodnota řetězce salt, kterou může představovat jakýkoli neprázdný řetězec</param>
      <param name="domain">Doména aplikace</param>
      <param name="path">Virtuální cesta</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Převede zadanou hodnotu atributu na řetězec kódovaný jazykem HTML.</summary>
      <returns>Řetězec kódovaný jazykem HTMLPokud má parametr hodnoty hodnotu null nebo je prázdný, vrátí tato metoda prázdný řetězec.</returns>
      <param name="value">Objekt, který má být zakódován</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>Převede zadanou hodnotu atributu na řetězec kódovaný jazykem HTML.</summary>
      <returns>Řetězec kódovaný jazykem HTMLPokud má parametr hodnoty hodnotu null nebo je prázdný, vrátí tato metoda prázdný řetězec.</returns>
      <param name="value">Řetězec určený ke kódování</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>Získá nebo nastaví hodnotu určující, zda je povoleno ověření klienta.</summary>
      <returns>Hodnota true, má-li být povolení ověření klienta povoleno, jinak hodnota false.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>Umožňuje ověření vstupu, které probíhá s využitím klientského skriptu v prohlížeči.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <summary>Umožňuje nebo zakazuje ověření klienta.</summary>
      <param name="enabled">Hodnota true, má-li být ověření klienta povoleno, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>Umožňuje nebo zakazuje nerušivý JavaScript.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <summary>Umožňuje nebo zakazuje nerušivý JavaScript.</summary>
      <param name="enabled">Hodnota true, má-li být nerušivý JavaScript povolen, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>Převede hodnotu zadaného objektu na řetězec kódovaný jazykem HTML.</summary>
      <returns>Řetězec kódovaný jazykem HTML</returns>
      <param name="value">Objekt, který má být zakódován</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>Převede zadaný řetězec na řetězec kódovaný jazykem HTML.</summary>
      <returns>Řetězec kódovaný jazykem HTML</returns>
      <param name="value">Řetězec určený ke kódování</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.FormatValue(System.Object,System.String)">
      <summary>Naformátuje hodnotu.</summary>
      <returns>Formátovaná hodnota.</returns>
      <param name="value">Hodnota.</param>
      <param name="format">Řetězec formátu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>Vytvoří ID elementu HTML pomocí zadaného názvu elementu.</summary>
      <returns>ID názvu elementu HTML</returns>
      <param name="name">Název elementu HTML</param>
      <exception cref="T:System.ArgumentNullException">Parametr name má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>Vytvoří ID elementu HTML pomocí zadaného názvu elementu a řetězce, který v názvu nahrazuje tečky.</summary>
      <returns>ID názvu elementu HTML</returns>
      <param name="name">Název elementu HTML</param>
      <param name="idAttributeDotReplacement">Řetězec, který nahrazuje tečky (.) v parametru name</param>
      <exception cref="T:System.ArgumentNullException">Parametr name nebo idAttributeDotReplacement má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element anchor HTML (element a), který odkazuje na zadanou metodu akce a umožní uživateli zadat komunikační protokol, název hostitele a fragment adresy URL.</summary>
      <returns>Element HTML, který odkazuje na zadanou metodu akce</returns>
      <param name="requestContext">Kontext žádosti HTTP</param>
      <param name="routeCollection">Kolekce tras URL</param>
      <param name="linkText">Skrytý titulek textu, který má být zobrazen u odkazu</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="protocol">Komunikační protokol, např. HTTP nebo HTTPSPokud má tento parametr hodnotu null, použije se výchozí hodnota protokolu HTTP.</param>
      <param name="hostName">Název hostitele</param>
      <param name="fragment">Identifikátor fragmentu</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element HTML anchor (element a), který odkazuje na zadanou metodu akce.</summary>
      <returns>Element HTML, který odkazuje na zadanou metodu akce</returns>
      <param name="requestContext">Kontext žádosti HTTP</param>
      <param name="routeCollection">Kolekce tras URL</param>
      <param name="linkText">Skrytý titulek textu, který má být zobrazen u odkazu</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element HTML anchor (element a), který odkazuje na zadanou trasu URL a umožní uživateli zadat komunikační protokol, název hostitele a fragment adresy URL.</summary>
      <returns>Element HTML, který odkazuje na zadanou trasu URL</returns>
      <param name="requestContext">Kontext žádosti HTTP</param>
      <param name="routeCollection">Kolekce tras URL</param>
      <param name="linkText">Skrytý titulek textu, který má být zobrazen u odkazu</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="protocol">Komunikační protokol, např. HTTP nebo HTTPSPokud má tento parametr hodnotu null, použije se výchozí hodnota protokolu HTTP.</param>
      <param name="hostName">Název hostitele</param>
      <param name="fragment">Identifikátor fragmentu</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element HTML anchor (element a), který odkazuje na zadanou trasu URL.</summary>
      <returns>Element HTML, který odkazuje na zadanou trasu URL</returns>
      <param name="requestContext">Kontext žádosti HTTP</param>
      <param name="routeCollection">Kolekce tras URL</param>
      <param name="linkText">Skrytý titulek textu, který má být zobrazen u odkazu</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>Vrátí metodu HTTP, která obsluhuje vstup formuláře (GET nebo POST) jako řetězec.</summary>
      <returns>Řetězec metody formuláře (get nebo post)</returns>
      <param name="method">Metoda HTTP, která obsluhuje formulář</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>Vrátí typ vstupního ovládacího prvku HTML v podobě řetězce.</summary>
      <returns>Řetězec typu vstupu (checkbox, hidden, password, radio nebo text)</returns>
      <param name="inputType">Výčet typů vstupu</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>Získá kolekci atributů ověření nerušivého jazyka JavaScript pomocí zadaného atributu HTML name.</summary>
      <returns>Kolekce atributů ověření nerušivého jazyka JavaScript</returns>
      <param name="name">Atribut HTML name</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>Získá kolekci atributů ověření nerušivého jazyka JavaScript pomocí zadaného atributu HTML name a metadat modelu.</summary>
      <returns>Kolekce atributů ověření nerušivého jazyka JavaScript</returns>
      <param name="name">Atribut HTML name</param>
      <param name="metadata">Metadata modelu</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.Html5DateRenderingMode">
      <summary>Získá nebo nastaví režim vykreslování data HTML5.</summary>
      <returns>Režim vykreslování data HTML5.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>Vrátí skrytý element input, který identifikuje metodu přepsání zadané metody přenosu dat protokolu HTTP použitou klientem.</summary>
      <returns>Metoda přepsání, která používá metodu přenosu dat protokolu HTTP použitou klientem</returns>
      <param name="httpMethod">Metoda přenosu dat protokolu HTTP, která byla použita klientem (DELETE, HEAD nebo PUT)</param>
      <exception cref="T:System.ArgumentNullException">Parametr httpVerb nemá hodnotu PUT, DELETE ani HEAD.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>Vrátí skrytý element input, který identifikuje metodu přepsání zadaného slova představujícího metodu přenosu dat protokolu HTTP použitou klientem.</summary>
      <returns>Metoda přepsání, která používá slovo představující metodu přenosu dat protokolu HTTP použitou klientem</returns>
      <param name="httpVerb">Slovo představující metodu přenosu dat protokolu HTTP použitou klientem</param>
      <exception cref="T:System.ArgumentNullException">Parametr httpVerb nemá hodnotu PUT, DELETE ani HEAD.</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>Získá nebo nastaví znak, který nahrazuje tečky v atributu ID elementu.</summary>
      <returns>Znak, který nahrazuje tečky v atributu ID elementu</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>Vytvoří z objektu slovník, do kterého přidá každou veřejnou vlastnost instance jako klíč s přiřazenou hodnotou.Zveřejní také veřejné vlastnosti odvozených typů.Obvykle se používá s objekty anonymního typu.</summary>
      <returns>Vytvořený slovník názvů a hodnot vlastností.</returns>
      <param name="value">Objekt k převodu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.Object)">
      <summary>Vrátí kód, který není kódován jazykem HTML.</summary>
      <returns>Nezakódovaný kód jazyka HTML</returns>
      <param name="value">Kód jazyka HTML</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.String)">
      <summary>Vrátí kód, který není kódován jazykem HTML.</summary>
      <returns>Nezakódovaný kód jazyka HTML</returns>
      <param name="value">Kód jazyka HTML</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>Získá nebo nastaví kolekci tras pro danou aplikaci.</summary>
      <returns>Kolekce tras pro aplikaci</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationMessageElement(System.String)">
      <summary>Nastaví název elementu, který slouží k zabalení ověřovací zprávy vygenerované metodou <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> a dalšími přetíženími.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationSummaryMessageElement(System.String)">
      <summary>Nastaví název elementu, který slouží k zabalení zprávy na nejvyšší úrovni vygenerované metodou <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> a dalšími přetíženími.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Získá nebo nastaví hodnotu určující, zda je povolen nerušivý JavaScript.</summary>
      <returns>Hodnota true, je-li nerušivý JavaScript povolen, jinak hodnota false.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>Název třídy CSS, která je použita k formátování vstupního pole v případě, že dojde k chybě při ověření</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Název třídy CSS, která je použita k formátování vstupního pole v případě platného vstupu</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>Název třídy CSS, která je použita k formátování chybové zprávy v případě, že dojde k chybě při ověření</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationMessageElement">
      <summary>Název elementu, který slouží k zabalení ověřovací zprávy vygenerované metodou <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> a dalšími přetíženími.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Název třídy CSS, která je použita k formátování ověřovací zprávy v případě platného vstupu</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>Název třídy CSS, která je použita k formátování souhrnu chybových zpráv ověření</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationSummaryMessageElement">
      <summary>Název elementu, který slouží k zabalení zprávy na nejvyšší úrovni vygenerované metodou <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> a dalšími přetíženími.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>Název třídy CSS, která je použita k formátování souhrnu ověření v případě platného vstupu</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewBag">
      <summary>Získá kontejner zobrazení.</summary>
      <returns>Kontejner zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>Získá nebo nastaví kontextové informace o zobrazení.</summary>
      <returns>Kontext zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>Získá slovník dat aktuálního zobrazení.</summary>
      <returns>Slovník dat zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>Získá nebo nastaví kontejner dat zobrazení.</summary>
      <returns>Kontejner dat zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>Představuje podporu pro vykreslení ovládacích prvků jazyka HTML v zobrazení se silnými typy.</summary>
      <typeparam name="TModel">Typ modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HtmlHelper`1" /> pomocí zadaného kontextu zobrazení a kontejneru dat zobrazení.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="viewDataContainer">Kontejner dat zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HtmlHelper`1" /> pomocí zadaného kontextu zobrazení, kontejneru dat zobrazení a kolekce tras.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="viewDataContainer">Kontejner dat zobrazení</param>
      <param name="routeCollection">Kolekce tras</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewBag">
      <summary>Získá kontejner zobrazení.</summary>
      <returns>Kontejner zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>Získá slovník dat aktuálního zobrazení se silnými typy.</summary>
      <returns>Slovník dat aktuálního zobrazení se silnými typy</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>Představuje atribut, který se používá k omezení metody akce, takže tato metoda obsluhuje pouze požadavky HTTP DELETE.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je požadavek delete metody akce platný pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud je požadavek metody akce platný pro zadaný kontext kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>Představuje zprostředkovatele hodnot, který se má použít pro hodnoty pocházející z kolekce souborů protokolu HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" />.</summary>
      <param name="controllerContext">Objekt, který zapouzdřuje informace o aktuální žádosti HTTP</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>Představuje třídu, která zodpovídá za vytvoření nové instance objektu zprostředkovatele hodnot kolekce souboru HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí objekt zprostředkovatele hodnot pro zadaný kontext kontroleru.</summary>
      <returns>Zprostředkovatel hodnot kolekce souboru HTTP.</returns>
      <param name="controllerContext">Objekt, který zapouzdří informace o požadavku HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>Představuje atribut, který se používá k omezení metody akce, takže tato metoda obsluhuje pouze požadavky HTTP GET.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpGetAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je požadavek get metody akce platný pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud je požadavek metody akce platný pro zadaný kontext kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.HttpHeadAttribute">
      <summary>Určuje, že žádost HTTP musí být metoda HTTP HEAD.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpHeadAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je požadavek metody akce platný pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud je požadavek metody akce platný pro zadaný kontext kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>Definuje objekt, který určí, že požadovaný zdroj nebyl nalezen.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> pomocí popisu stavu.</summary>
      <param name="statusDescription">Popis stavu</param>
    </member>
    <member name="T:System.Web.Mvc.HttpOptionsAttribute">
      <summary>Představuje atribut, pomocí kterého lze metodu akce omezit tak, aby obsluhovala pouze žádosti HTTP OPTIONS.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je požadavek metody akce platný pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud je požadavek metody akce platný pro zadaný kontext kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPatchAttribute">
      <summary>Představuje atribut, pomocí kterého lze metodu akce omezit tak, aby obsluhovala pouze žádosti HTTP PATCH.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpPatchAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je požadavek metody akce platný pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud je požadavek metody akce platný pro zadaný kontext kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>Představuje atribut, který se používá k omezení metody akce, takže tato metoda obsluhuje pouze požadavky HTTP POST.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpPostAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je požadavek post metody akce platný pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud je požadavek metody akce platný pro zadaný kontext kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>Váže model k vystavenému souboru.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Váže model.</summary>
      <returns>Vázaná hodnota.Implementuje<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="bindingContext">Kontext vazby.</param>
      <exception cref="T:System.ArgumentNullException">Jeden nebo oba parametry mají hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>Představuje atribut, který se používá k omezení metody akce, takže tato metoda obsluhuje pouze požadavky HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpPutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda je požadavek put metody akce platný pro zadaný kontext kontroleru.</summary>
      <returns>Hodnota true, pokud je požadavek metody akce platný pro zadaný kontext kontroleru. V opačném případě hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě akce</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>Rozšiřuje třídu <see cref="T:System.Web.HttpRequestBase" /> obsahující hodnoty HTTP, které byly odeslány klientem během webového požadavku.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>Načte přepsání metody přenosu dat HTTP, které bylo použito klientem.</summary>
      <returns>Přepsání metody přenosu dat HTTP, které bylo použito klientem.</returns>
      <param name="request">Objekt obsahující hodnoty HTTP, které byly odeslány klientem během webového požadavku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="request" /> má hodnotu null.</exception>
      <exception cref="T:System.NotImplementedException">Přepsání metody přenosu dat HTTP nebylo implementováno.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>Poskytuje možnost návratu výsledku akce pomocí konkrétního kódu stavu odpovědi HTTP a popisu.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>Pomocí stavového kódu inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />.</summary>
      <param name="statusCode">Stavový kód</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>Pomocí kódu a popisu stavu inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />.</summary>
      <param name="statusCode">Stavový kód</param>
      <param name="statusDescription">Popis stavu</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode)">
      <summary>Pomocí stavového kódu inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />.</summary>
      <param name="statusCode">Stavový kód</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode,System.String)">
      <summary>Pomocí kódu a popisu stavu inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />.</summary>
      <param name="statusCode">Stavový kód</param>
      <param name="statusDescription">Popis stavu</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umožňuje zpracování výsledku metody akce pomocí vlastního typu, který dědí z třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.Informace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>Získá stavový kód HTTP.</summary>
      <returns>Stavový kód HTTP</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>Získá popis stavu HTTP.</summary>
      <returns>Popis stavu HTTP</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>Představuje výsledek neoprávněného požadavku protokolu HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> pomocí popisu stavu.</summary>
      <param name="statusDescription">Popis stavu</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>Podává výčet metod protokolu HTTP.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>Vyžaduje odstranění zadaného identifikátoru URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>Načte informaci nebo entitu identifikovanou identifikátorem URI požadavku.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>Načte záhlaví zprávy informace nebo entity identifikované identifikátorem URI požadavku.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Options">
      <summary>Představuje žádost o informace o možnostech komunikace, jež jsou k dispozici v řetězci žádost/odpověď označeném identifikátorem URI žádosti.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Patch">
      <summary>Vyžaduje použití sady změn popsaných v entitě žádosti v prostředku označeném identifikátorem URI žádosti.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>Vystaví novou entitu jako dodatek k identifikátoru URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>Nahradí entitu identifikovanou identifikátorem URI.</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>Definuje metody, které se používají ve filtru akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Voláno po provedení metody akce</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Voláno před provedením metody akce</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>Definuje smlouvu pro původce volání akce, která se použije k vyvolání akce jako odpovědi na požadavek HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Vyvolá zadanou akci pomocí zadaného kontextu kontroleru.</summary>
      <returns>Hodnota true, pokud byla akce nalezena, jinak hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název akce</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvokerFactory">
      <summary>Slouží k vytvoření instance <see cref="T:System.Web.Mvc.IActionInvoker" /> pro aktuální požadavek.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvokerFactory.CreateInstance">
      <summary>Vytvoří instanci původce volání akcí pro aktuální požadavek.</summary>
      <returns>Vytvořený objekt <see cref="T:System.Web.Mvc.IActionInvoker" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>Definuje metody, které jsou požadovány pro filtr autorizace.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Volá se v případě, že je požadována autorizace.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>Umožňuje, aby rozhraní pro ověření ASP.NET MVC zjistilo za běhu, zda validátor podporuje ověřování na straně klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Při implementaci ve třídě vrací ověřovací pravidla klienta pro tuto třídu.</summary>
      <returns>Ověřovací pravidla klienta pro tento validátor.</returns>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>Definuje metody, které jsou požadovány pro kontroler.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>Spouští kontext učeného požadavku.</summary>
      <param name="requestContext">Kontext požadavku</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>Poskytuje jemně odstupňovanou kontrolu nad vytvářením instancí kontrolerů využitím vkládání závislostí.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>Pokud je implementována do třídy, vytvoří kontroler.</summary>
      <returns>Vytvořený kontroler</returns>
      <param name="requestContext">Kontext požadavku</param>
      <param name="controllerType">Typ kontroleru</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>Definuje metody, které jsou požadovány pro objekt factory kontroleru.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Vytvoří zadaný kontroler pomocí zadaného kontextu požadavku.</summary>
      <returns>Kontroler</returns>
      <param name="requestContext">Kontext požadavku</param>
      <param name="controllerName">Název kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Získá chování relace kontroleru.</summary>
      <returns>Chování relace kontroleru</returns>
      <param name="requestContext">Kontext požadavku</param>
      <param name="controllerName">Název kontroleru, jehož chování relace chcete získat.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Uvolní zadaný kontroler.</summary>
      <param name="controller">Kontroler</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>Definuje metody, které zjednodušují umístění služby a zjištění závislosti.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>Zobrazí samostatně registrované služby, které podporují vytvoření libovolného objektu.</summary>
      <returns>Požadovaná služba nebo objekt.</returns>
      <param name="serviceType">Typ požadované služby nebo objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>Vyřeší více registrovaných služeb.</summary>
      <returns>Požadované služby.</returns>
      <param name="serviceType">Typ požadovaných služeb.</param>
    </member>
    <member name="T:System.Web.Mvc.IEnumerableValueProvider">
      <summary>Představuje speciální <see cref="T:System.Web.Mvc.IValueProvider" />, která je vyčíslitelná.</summary>
    </member>
    <member name="M:System.Web.Mvc.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Získá klíče z předpony.</summary>
      <returns>Klíče</returns>
      <param name="prefix">Předpona</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>Definuje metody, které jsou vyžadovány pro filtr výjimek.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Volá se, když dojde k výjimce.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>Poskytuje rozhraní pro filtry hledání.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Vrátí enumerátor obsahující všechny instance <see cref="T:System.Web.Mvc.IFilterProvider" /> v lokátoru služeb.</summary>
      <returns>Enumerátor obsahující všechny instance <see cref="T:System.Web.Mvc.IFilterProvider" /> v lokátoru služeb</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>Poskytuje rozhraní pro vystavení atributů třídě <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Při implementaci v některé třídě poskytuje metadata pro proces vytváření metadat modelu.</summary>
      <param name="metadata">Metadata modelu</param>
    </member>
    <member name="T:System.Web.Mvc.IMethodInfoActionDescriptor">
      <summary>Volitelné rozhraní pro typy <see cref="T:System.Web.Mvc.ActionDescriptor" />, které poskytují položku <see cref="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo">
      <summary>Získá položku MethodInfo.</summary>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>Definuje metody, které jsou vyžadovány pro vazač modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Vytvoří vazbu modelu s hodnotou pomocí zadaného kontextu kontroleru a kontextu vazby.</summary>
      <returns>Vázaná hodnota.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="bindingContext">Kontext vazby.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>Definuje metody, které umožní dynamickou implementaci vazby modelu pro třídy, které implementují rozhraní <see cref="T:System.Web.Mvc.IModelBinder" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>Vrátí vazač modelu pro zadaný typ.</summary>
      <returns>Vazač modelu pro zadaný typ</returns>
      <param name="modelType">Typ modelu</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>Definuje členy, které určují pořadí filtrů, a to, zda je povoleno více filtrů.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>Je-li implementován ve třídě, získá nebo nastaví hodnotu, která udává, zda je povoleno více filtrů.</summary>
      <returns>Hodnota true, pokud je povoleno více filtrů, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>Je-li metoda implementována ve třídě, získá pořadí filtru.</summary>
      <returns>Pořadí filtru</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>Podává výčet typů vstupních ovládacích prvků.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>Zaškrtávací políčko</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>Skryté pole</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>Pole pro heslo</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>Přepínač</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>Textové pole</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>Definuje metody, které jsou požadovány pro filtr výsledků.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Voláno po provedení výsledku akce.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Voláno před provedením výsledku akce.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>Přidružuje trasu k oblasti v aplikaci ASP.NET MVC.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>Získá název oblasti, ke které se má přidružit trasa.</summary>
      <returns>Název oblasti, ke které se má přidružit trasa</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>Definuje smlouvu pro zprostředkovatele dočasných dat, kteří ukládají data zobrazovaná příštím požadavkem.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Načte dočasná data.</summary>
      <returns>Dočasná data</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Uloží dočasná data.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="values">Hodnoty</param>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProviderFactory">
      <summary>Slouží k vytvoření instance <see cref="T:System.Web.Mvc.ITempDataProvider" /> pro kontroler.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProviderFactory.CreateInstance">
      <summary>Vytvoří instanci rozhraní <see cref="T:System.Web.Mvc.ITempDataProvider" /> pro kontroler.</summary>
      <returns>Vytvořený objekt <see cref="T:System.Web.Mvc.ITempDataProvider" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>Představuje rozhraní <see cref="T:System.Web.Mvc.IValueProvider" />, které může přeskočit ověření požadavku.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Načte hodnotu objektu přidruženého k zadanému klíči.</summary>
      <returns>Hodnota objektu pro zadaný klíč</returns>
      <param name="key">Klíč</param>
      <param name="skipValidation">Hodnota true, je-li možné ověření přeskočit. V opačném případě hodnota false.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>Definuje metody požadované pro zprostředkovatele hodnoty v aplikaci ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>Určuje, zda kolekce obsahuje zadanou předponu.</summary>
      <returns>Hodnota true, pokud kolekce obsahuje zadanou předponu, jinak hodnota false.</returns>
      <param name="prefix">Předpona, kterou chcete vyhledat.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>Načte objekt hodnoty pomocí zadaného klíče.</summary>
      <returns>Objekt hodnoty pro zadaný klíč nebo hodnota null, pokud klíč není nalezen.</returns>
      <param name="key">Klíč objektu hodnoty, který má být načten.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>Definuje metody, které jsou požadovány pro zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Vykreslí zadaný kontext zobrazení pomocí zadaného objektu zapisovače.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="writer">Objekt zapisovače.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>Definuje metody, které jsou požadovány pro slovník dat zobrazení.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>Získá nebo nastaví slovník dat zobrazení.</summary>
      <returns>Slovník dat zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>Definuje metody, které jsou požadovány pro modul zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Vyhledá určené dílčí zobrazení pomocí zadaného kontextu kontroleru.</summary>
      <returns>Dílčí zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="partialViewName">Název částečného zobrazení</param>
      <param name="useCache">Hodnota true určuje, že pokud existuje zobrazení v mezipaměti, modul zobrazení vrátí zobrazení uložené v mezipaměti, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Vyhledá určené zobrazení pomocí zadaného kontextu kontroleru.</summary>
      <returns>Zobrazení stránky</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewName">Název zobrazení</param>
      <param name="masterName">Název předlohy</param>
      <param name="useCache">Hodnota true určuje, že pokud existuje zobrazení v mezipaměti, modul zobrazení vrátí zobrazení uložené v mezipaměti, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Uvolní určené zobrazení pomocí zadaného kontextu kontroleru.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="view">Zobrazení</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>Definuje metody, které jsou požadovány pro zápis umístění zobrazení v paměti do mezipaměti.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Získá výchozí umístění zobrazení pomocí zadaného kontextu protokolu HTTP a klíče mezipaměti.</summary>
      <returns>Umístění zobrazení</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="key">Klíč mezipaměti</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Vloží zadané umístění zobrazení do mezipaměti pomocí zadaného kontextu protokolu HTTP a klíče mezipaměti.</summary>
      <param name="httpContext">Kontext HTTP</param>
      <param name="key">Klíč mezipaměti</param>
      <param name="virtualPath">Virtuální cesta</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>Poskytuje jemně odstupňovanou kontrolu nad vytvářením stránek zobrazení využitím vkládání závislostí.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <summary>Poskytuje jemně odstupňovanou kontrolu nad vytvářením stránek zobrazení využitím vkládání závislostí.</summary>
      <returns>Vytvořená stránka zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="type">Typ kontroleru</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>Odešle obsah JavaScript do odpovědi.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umožňuje zpracování výsledku metody akce pomocí vlastního typu, který dědí z třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>Získá nebo nastaví skript.</summary>
      <returns>Skript.</returns>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProvider">
      <summary>Zprostředkovatel hodnot formulářů JQuery slouží ke zpracování formátovaných dat JQuery ve formulářích požadavků.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Vytvoří novou instanci zprostředkovatele hodnot formulářů JQuery.</summary>
      <param name="controllerContext">Kontext, ve kterém položka ValueProvider pracuje.</param>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProviderFactory">
      <summary>Poskytne potřebnou položku ValueProvider pro zpracování dat formuláře JQuery.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.#ctor">
      <summary>Vytvoří novou instanci objektu factory, který poskytuje položku ValueProvider formulářů JQuery.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí vhodnou položku ValueProvider.</summary>
      <param name="controllerContext">Kontext, ve kterém by položka ValueProvider měla pracovat.</param>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>Určuje, zda jsou povoleny požadavky metody GET protokolu HTTP od klienta.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>Požadavky metody GET protokolu HTTP od klienta jsou povoleny.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>Požadavky metody GET protokolu HTTP od klienta nejsou povoleny.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>Představuje třídu, jejíž prostřednictvím je obsah s formátem JSON odeslán odpovědi.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.JsonResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>Získá nebo nastaví kódování obsahu.</summary>
      <returns>Kódování obsahu</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>Získá nebo nastaví typ obsahu.</summary>
      <returns>Typ obsahu</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>Získá nebo nastaví data.</summary>
      <returns>Data</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umožňuje zpracování výsledku metody akce pomocí vlastního typu, který dědí z třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda jsou povoleny požadavky HTTP GET klienta.</summary>
      <returns>Hodnota, která určuje, zda jsou povoleny požadavky HTTP GET klienta.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.MaxJsonLength">
      <summary>Získá nebo nastaví maximální délku dat.</summary>
      <returns>Maximální délka dat</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.RecursionLimit">
      <summary>Získá nebo nastaví limit rekurze.</summary>
      <returns>Limit rekurze</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>Povoluje metody akce k odeslání a přijetí textu s formátem JSON a k navázání textu ve formátu JSON na parametry metod akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.JsonValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrací objekt zprostředkovatele hodnot JSON pro zadaný kontext kontroleru.</summary>
      <returns>Objekt zprostředkovatele hodnot JSON pro zadaný kontext kontroleru.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>Mapuje žádost prohlížeče na objekt LINQ <see cref="T:System.Data.Linq.Binary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Váže model pomocí zadaného kontextu kontroleru a kontextu vazby.</summary>
      <returns>Vázaný datový objektPokud nemůže být model vázán, vrátí metoda hodnotu null.Implementuje<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />.</returns>
      <param name="controllerContext">Kontext, ve kterém kontroler pracujeInformace kontextu obsahují údaje o kontroleru, obsahu HTTP, kontextu požadavku a datech trasy.</param>
      <param name="bindingContext">Kontext, ve kterém je model vázánKontext obsahuje informace, například o objektu modelu, názvu modelu, typu modelu, filtru vlastností a zprostředkovateli hodnoty.</param>
    </member>
    <member name="T:System.Web.Mvc.MaxLengthAttributeAdapter">
      <summary>Poskytuje adaptér pro atribut MaxLengthAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
      <summary>Inicializuje novou instanci třídy MaxLengthAttribute.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
      <param name="attribute">Atribut MaxLength.</param>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.GetClientValidationRules">
      <summary>Získá seznam ověřovacích pravidel klienta pro kontrolu maximální délky.</summary>
      <returns>Seznam ověřovacích pravidel klienta pro kontrolu.</returns>
    </member>
    <member name="T:System.Web.Mvc.MinLengthAttributeAdapter">
      <summary>Poskytuje adaptér pro atribut MinLengthAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MinLengthAttribute)">
      <summary>Inicializuje novou instanci třídy MinLenghtAttribute.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
      <param name="attribute">Atribut s minimální délkou.</param>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.GetClientValidationRules">
      <summary>Získá seznam pravidel ověření klienta pro kontrolu minimální délky.</summary>
      <returns>Seznam ověřovacích pravidel klienta pro kontrolu.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>Představuje atribut, který je použit k přidružení typu modelu k typu tvůrce modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelBinderAttribute" />.</summary>
      <param name="binderType">Typ vazače</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="binderType" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>Získá nebo nastaví typ vazače.</summary>
      <returns>Typ vazače</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>Načte instanci vazače modelu.</summary>
      <returns>Odkaz na objekt, který implementuje rozhraní <see cref="T:System.Web.Mvc.IModelBinder" /></returns>
      <exception cref="T:System.InvalidOperationException">Při vytváření instance vazače modelu došlo k chybě.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>Představuje třídu obsahující všechny vazače modelů pro aplikaci seřazené podle typu vazače.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelBinderDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Přidá zadanou položku do slovníku vazačů modelů.</summary>
      <param name="item">Objekt, který chcete přidat do instance <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.ICollection`1" /> je určen pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>Přidá zadanou položku do slovníku vazačů modelů pomocí zadaného klíče.</summary>
      <param name="key">Klíč elementu, který chcete přidat</param>
      <param name="value">Hodnota elementu, který chcete přidat</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> je určen pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">V objektu <see cref="T:System.Collections.Generic.IDictionary`2" /> již existuje element se stejným klíčem.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>Odebere všechny položky ze slovníku vazačů modelů.</summary>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.ICollection`1" /> je určen pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Určuje, zda slovník vazačů modelů obsahuje zadanou hodnotu.</summary>
      <returns>Hodnota true, pokud se položka <paramref name="item" /> nachází ve slovníku vazačů modelů. V opačném případě hodnota false.</returns>
      <param name="item">Objekt, který chcete nalézt v objektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>Určuje, zda slovník vazačů modelů obsahuje element se zadaným klíčem.</summary>
      <returns>Hodnota true, pokud slovník vazačů modelů obsahuje element se zadaným klíčem. V opačném případě hodnota false.</returns>
      <param name="key">Klíč, který chcete nalézt v objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>Zkopíruje elementy slovníku vazačů modelů do pole, které začíná v zadané hodnotě indexu.</summary>
      <param name="array">Jednorozměrné pole, které je cílem elementů zkopírovaných z <see cref="T:System.Collections.Generic.ICollection`1" />.Pole musí mít indexování s nulovým základem.</param>
      <param name="arrayIndex">Index s nulovým základem v poli <paramref name="array" />, ve kterém začíná kopírování</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Pole <paramref name="arrayIndex" /> je menší než 0.</exception>
      <exception cref="T:System.ArgumentException">Pole <paramref name="array" /> je multidimenzionální.– nebo – Pole <paramref name="arrayIndex" /> se rovná nebo je větší než délka <paramref name="array" />.– nebo – Počet elementů ve zdrojovém objektu <see cref="T:System.Collections.Generic.ICollection`1" /> je větší než dostupné místo z hodnoty indexu <paramref name="arrayIndex" /> do konce cílového pole. – nebo – Typ <paramref name="T" /> nelze automaticky přetypovat na typ cílového pole.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>Získá počet elementů ve slovníku vazačů modelů.</summary>
      <returns>Počet elementů ve slovníku vazačů modelů</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>Získá nebo nastaví výchozí vazač modelu.</summary>
      <returns>Výchozí vazač modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>Načte vazač modelu pro zadaný typ.</summary>
      <returns>Vazač modelu</returns>
      <param name="modelType">Typ modelu, který se má načíst.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelType" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>Načte vazač modelu zadaného typu nebo výchozí vazač modelu.</summary>
      <returns>Vazač modelu</returns>
      <param name="modelType">Typ modelu, který se má načíst.</param>
      <param name="fallbackToDefault">Hodnota true, chcete-li načíst výchozí vazač modelů.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelType" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít pro iteraci prostřednictvím kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>Získá hodnotu určující, zda je slovník vazačů modelů jen pro čtení.</summary>
      <returns>Hodnota true, pokud je slovník vazačů modelů jen pro čtení. V opačném případě hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>Získá nebo nastaví zadaný klíč v objektu, který implementuje rozhraní <see cref="T:System.Web.Mvc.IModelBinder" />.</summary>
      <returns>Klíč pro zadanou položku</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>Získá kolekci obsahující klíče ve slovníku vazačů modelů.</summary>
      <returns>Kolekce obsahující klíče ve slovníku vazačů modelů</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Odebere první výskyt zadaného elementu ze slovníku vazačů modelů.</summary>
      <returns>Hodnota true, pokud byla položka <paramref name="item" /> úspěšně odebrána ze slovníku vazačů modelů. V opačném případě hodnota false.Tato metoda také vrátí hodnotu false, pokud položku <paramref name="item" /> nelze ve slovníku vazačů modelů nalézt.</returns>
      <param name="item">Objekt, který chcete odebrat z objektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.ICollection`1" /> je určen pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>Odebere element se zadaným klíčem ze slovníku vazačů modelů.</summary>
      <returns>Hodnota true, pokud byl element úspěšně odebrán, jinak hodnota false.Tato metoda také vrátí hodnotu false, pokud položka <paramref name="key" /> nebyla ve slovníku vazačů modelů nalezena.</returns>
      <param name="key">Klíč elementu, který chcete odebrat</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> je určen pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít k iteraci v rámci kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>Získá hodnotu přidruženou k zadanému klíči.</summary>
      <returns>Hodnota true, pokud objekt, který implementuje entitu <see cref="T:System.Collections.Generic.IDictionary`2" />, obsahuje element se zadaným klíčem, jinak hodnota false.</returns>
      <param name="key">Klíč hodnoty, kterou chcete získat</param>
      <param name="value">Pokud je klíč nalezen, metoda vrátí hodnotu, která je přidružena k zadanému klíči, jinak je pro typ parametru <paramref name="value" /> přidružena výchozí hodnota.Tento parametr se předává neinicializovaný.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>Získá kolekci obsahující hodnoty ve slovníku vazačů modelů.</summary>
      <returns>Kolekce obsahující hodnoty ve slovníku vazačů modelů</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>Představuje kolekci zprostředkovatelů vazačů modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> pomocí seznamu zprostředkovatelů vazačů modelů.</summary>
      <param name="list">Seznam zprostředkovatelů vazačů modelů</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.ClearItems">
      <summary>Odebere všechny elementy z kolekce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>Vrátí vazač modelu zadaného typu.</summary>
      <returns>Vazač modelu zadaného typu</returns>
      <param name="modelType">Typ vazače modelu</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Vloží zprostředkovatele vazače modelu do kolekce ModelBinderProviderCollection na pozici se zadaným indexem.</summary>
      <param name="index">Index.</param>
      <param name="item">Zprostředkovatel vazače modelu</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.RemoveItem(System.Int32)">
      <summary>Odebere element na pozici kolekce se zadaným indexem.</summary>
      <param name="index">Index elementu (počítáno od nuly), který se má odebrat</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Nahradí element zprostředkovatele vazače modelu v zadané hodnotě indexu.</summary>
      <param name="index">Index.</param>
      <param name="item">Zprostředkovatel vazače modelu</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>Poskytuje kontejner pro zprostředkovatele vazače modelu.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>Poskytuje registrační bod pro zprostředkovatele vazače modelu pro aplikace, které nepoužívají vkládání závislostí.</summary>
      <returns>Kolekce zprostředkovatele vazače modelu</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>Poskytuje globální přístup k vazačům modelů pro aplikaci.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>Získá vazače modelů pro aplikaci.</summary>
      <returns>Vazače modelů pro aplikaci</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>Poskytuje kontext, ve kterém funguje vazač modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>Pomocí kontextu vazby inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelBindingContext" />.</summary>
      <param name="bindingContext">Kontext vazby.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Získá nebo nastaví hodnotu, která označuje, zda má vazač používat prázdnou předponu.</summary>
      <returns>Hodnota true, pokud má vazač použít prázdnou předponu, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>Získá nebo nastaví model.</summary>
      <returns>Model</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>Získá nebo nastaví metadata modelu.</summary>
      <returns>Metadata modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>Získá nebo nastaví název modelu.</summary>
      <returns>Název modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>Získá nebo nastaví stav modelu.</summary>
      <returns>Stav modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>Získá nebo nastaví typ modelu.</summary>
      <returns>Typ modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>Získá nebo nastaví filtr vlastností.</summary>
      <returns>Filtr vlastností.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>Získá metadata vlastnosti.</summary>
      <returns>Metadata vlastnosti</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>Získá nebo nastaví zprostředkovatele hodnoty.</summary>
      <returns>Zprostředkovatel hodnoty</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>Představuje chybu, ke které došlo během vazby modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelError" /> pomocí zadané výjimky.</summary>
      <param name="exception">Výjimka</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelError" /> pomocí zadané výjimky a chybové zprávy.</summary>
      <param name="exception">Výjimka</param>
      <param name="errorMessage">Chybová zpráva</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelError" /> pomocí zadané chybové zprávy.</summary>
      <param name="errorMessage">Chybová zpráva</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>Získá nebo nastaví chybovou zprávu.</summary>
      <returns>Chybová zpráva</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>Získá nebo nastaví objekt výjimky.</summary>
      <returns>Objekt výjimky</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>Kolekce instancí <see cref="T:System.Web.Mvc.ModelError" /></summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>Přidá zadaný objekt <see cref="T:System.Exception" /> do kolekce chyb modelu.</summary>
      <param name="exception">Výjimka</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>Přidá zadanou chybovou zprávu do kolekce chyb modelu.</summary>
      <param name="errorMessage">Chybová zpráva</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>Poskytuje kontejner pro běžná metadata pro třídu <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> a pro třídu <see cref="T:System.Web.Mvc.ModelValidator" /> datového modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <param name="provider">Zprostředkovatel</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ modelu</param>
      <param name="propertyName">Název modelu</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>Získá slovník, který obsahuje další metadata týkající se modelu.</summary>
      <returns>Slovník, který obsahuje další metadata týkající se modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Container">
      <summary>Odkaz na objekt kontejneru modelu.Pokud model reprezentuje vlastnost, nebude mít hodnotu null.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>Získá nebo nastaví typ kontejneru v modelu.</summary>
      <returns>Typ kontejneru v modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda mají být prázdné řetězce, které jsou ve formulářích odeslány zpět, převedeny na hodnotu null.</summary>
      <returns>Hodnota true, pokud jsou prázdné řetězce odeslány ve formulářích zpět, by měla být převedena na hodnotu null, jinak hodnota false.Výchozí hodnotou je hodnota true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>Získá nebo nastaví metainformaci o datovém typu. </summary>
      <returns>Metainformace o datovém typu </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder">
      <summary>Výchozí hodnota pořadí (10000)</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>Získá nebo nastaví popis modelu.</summary>
      <returns>Popis modeluVýchozí hodnota je null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>Získá nebo nastaví řetězec formátu zobrazení pro model.</summary>
      <returns>Řetězec formátu zobrazení pro model</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>Získá nebo nastaví zobrazovaný název modelu.</summary>
      <returns>Zobrazovaný název modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>Získá nebo nastaví řetězec formátu úprav modelu.</summary>
      <returns>Řetězec formátu úprav modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.ViewDataDictionary{``0})">
      <summary>Vrátí metadata z parametru <see cref="T:System.Linq.Expressions.Expression" /> modelu.</summary>
      <returns>Metadata</returns>
      <param name="expression">Výraz, který určuje model</param>
      <param name="viewData">Slovník dat zobrazení</param>
      <typeparam name="TParameter">Typ parametru</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Získá metadata z parametru výrazu pro model.</summary>
      <returns>Metadata modelu</returns>
      <param name="expression">Výraz, který určuje model</param>
      <param name="viewData">Slovník dat zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>Získá zobrazovaný název modelu.</summary>
      <returns>Zobrazovaný název modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>Vrací jednoduchý popis modelu.</summary>
      <returns>Jednoduchý popis modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>Získá seznam validátorů modelu.</summary>
      <returns>Seznam validátorů modelu</returns>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>Získá nebo nastaví hodnotu určující, zda má být objekt modelu vykreslen pomocí přidružených elementů HTML.</summary>
      <returns>Hodnota true, pokud by přidružené elementy HTML obsahující objekty modelu měly být zahrnuty do objektu, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>Získá nebo nastaví hodnotu určující, zda se jedná o komplexní typ modelu.</summary>
      <returns>Hodnota, která určuje, zda rozhraní MVC považuje model za komplexní.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>Získá hodnotu, která určuje, zda se jedná o typ s možnou hodnotou null.</summary>
      <returns>Hodnota true, pokud se jedná o typ s možnou hodnotou null, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>Získá nebo nastaví hodnotu určující, zda je model jen pro čtení.</summary>
      <returns>Hodnota true, pokud se jedná o model jen pro čtení, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>Získá nebo nastaví hodnotu určující, zda je model požadován.</summary>
      <returns>Hodnota true, pokud je model vyžadován, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>Získá hodnotu modelu</summary>
      <returns>Hodnota modeluDalší informace o <see cref="T:System.Web.Mvc.ModelMetadata" /> naleznete v příspěvku ASP.NET MVC 2 Templates, Part 2: ModelMetadata na blogu Brada Wilsona.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>Získá typ modelu.</summary>
      <returns>Typ modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>Získá nebo nastaví řetězec k zobrazení hodnot null.</summary>
      <returns>Řetězec k zobrazení hodnot null</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>Získá nebo nastaví hodnotu, která představuje pořadí aktuálních metadat.</summary>
      <returns>Hodnota pořadí aktuálních metadat.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>Získá kolekci objektů metadat modelu, která popisuje vlastnosti modelu.</summary>
      <returns>Kolekce objektů metadat modelu, která popisuje vlastnosti modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>Získá název vlastnosti.</summary>
      <returns>Název vlastnosti</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>Získá nebo nastaví zprostředkovatele.</summary>
      <returns>Zprostředkovatel</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled">
      <summary>Získá nebo nastaví hodnotu určující, zda je povoleno ověření požadavku.</summary>
      <returns>Hodnota true, je-li ověření povoleno, jinak hodnota false</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>Získá nebo nastaví krátký zobrazovaný název.</summary>
      <returns>Krátký zobrazovaný název</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>Získá nebo nastaví hodnotu určující, zda má být vlastnost zobrazena v zobrazení jen pro čtení, například jako zobrazení seznamu a podrobností.</summary>
      <returns>Hodnota true, pokud má být model zobrazen jen pro čtení, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>Získá nebo nastaví hodnotu určující, zda má být model zobrazen v upravitelných zobrazeních.</summary>
      <returns>Hodnota true, pokud má být model zobrazen v upravitelných zobrazeních, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>Získá nebo nastaví pro model řetězec jednoduchého zobrazení.</summary>
      <returns>Řetězec jednoduchého zobrazení pro model</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>Získá nebo nastaví nápovědu, která navrhuje, jakou šablonu použít pro tento model.</summary>
      <returns>Nápověda, která navrhuje, jakou šablonu použít pro tento model</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>Získá nebo nastaví hodnotu, kterou lze použít jako vodoznak.</summary>
      <returns>Vodoznak</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>Poskytuje abstraktní základní třídu pro vlastního zprostředkovatele metadat.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>Při přepsání v odvozené třídě inicializuje novou instanci objektu, která je odvozena ze třídy <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Získá <see cref="T:System.Web.Mvc.ModelMetadata" /> objekt pro každou vlastnost modelu.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ModelMetadata" /> objekt pro každou vlastnost modelu.</returns>
      <param name="container">Kontejner</param>
      <param name="containerType">Typ kontejneru</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Získá metadata pro zadanou vlastnost.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ModelMetadata" /> objekt pro vlastnost.</returns>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="containerType">Typ kontejneru</param>
      <param name="propertyName">Vlastnost, pro kterou se má získat model metadat.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Získá metadata pro zadaný přistupující objekt modelu a typ modelu.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ModelMetadata" /> objekt pro zadaný přistupující objekt modelu a typ modelu.</returns>
      <param name="modelAccessor">Přistupující objekt modelu</param>
      <param name="modelType">Typ modelu</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>Poskytne kontejner pro aktuální instanci <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>Získá či nastaví aktuální objekt <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
      <returns>Aktuální objekt <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>Zapouzdří stav vazby modelu do vlastnosti argumentu metody akce nebo do samotného argumentu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>Vrátí objekt <see cref="T:System.Web.Mvc.ModelErrorCollection" /> obsahující chyby, ke kterým došlo během vazby modelu.</summary>
      <returns>Chyby</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>Vrátí objekt <see cref="T:System.Web.Mvc.ValueProviderResult" />, který zapouzdřuje hodnotu vázanou během vazby modelu.</summary>
      <returns>Hodnota.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>Představuje stav pokusu o vytvoření vazby odeslaného formuláře s metodou akce, která obsahuje informace o ověření.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelStateDictionary" /> pomocí hodnot, které jsou zkopírovány ze zadaného slovníku stavů modelu.</summary>
      <param name="dictionary">Slovník stavu modelu</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary " /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Přidá zadanou položku do slovníku stavů modelu.</summary>
      <param name="item">Objekt, který má být přidán do slovníku stavů modelu</param>
      <exception cref="T:System.NotSupportedException">Slovník stavu modelu je jen pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>Přidá do slovníku stavů modelu element, který obsahuje zadaný klíč a hodnotu.</summary>
      <param name="key">Klíč elementu, který chcete přidat</param>
      <param name="value">Hodnota elementu, který chcete přidat</param>
      <exception cref="T:System.NotSupportedException">Slovník stavu modelu je jen pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Element s určeným klíčem se ve slovníku stavu modelu již vyskytuje.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Přidá zadanou chybu modelu do kolekce chyb pro slovník stavů modelu, který je přidružen k zadanému klíči.</summary>
      <param name="key">Klíč</param>
      <param name="exception">Výjimka</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Přidá zadanou chybovou zprávu do kolekce chyb pro slovník stavů modelu, který je přidružen k zadanému klíči.</summary>
      <param name="key">Klíč</param>
      <param name="errorMessage">Chybová zpráva</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>Odebere všechny položky ze slovníku stavů modelu.</summary>
      <exception cref="T:System.NotSupportedException">Slovník stavu modelu je jen pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Určuje, zda slovník stavů modelu obsahuje konkrétní hodnotu.</summary>
      <returns>Hodnota true, pokud se položka <paramref name="item" /> nachází ve slovníku stavu modelu, jinak hodnota false.</returns>
      <param name="item">Objekt, který má být vyhledán ve slovníku stavů modelu</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Určuje, zda slovník stavů modelu obsahuje zadaný klíč.</summary>
      <returns>Hodnota true, pokud slovník stavu modelu obsahuje zadaný klíč, jinak hodnota false.</returns>
      <param name="key">Klíč, který má být vyhledán ve slovníku stavů modelu </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>Zkopíruje elementy slovníku stavů modelu do pole počínaje od zadaného indexu.</summary>
      <param name="array">Jednorozměrné pole, které je cílem elementů zkopírovaných z objektu <see cref="T:System.Collections.Generic.ICollection`1" />Pole musí mít indexování s nulovým základem.</param>
      <param name="arrayIndex">Index s nulovým základem v poli <paramref name="array" />, ve kterém začíná kopírování</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Pole <paramref name="arrayIndex" /> je menší než 0.</exception>
      <exception cref="T:System.ArgumentException">Pole <paramref name="array" /> je multidimenzionální.– nebo – Pole <paramref name="arrayIndex" /> se rovná nebo je větší než délka <paramref name="array" />.– nebo – Počet elementů ve zdrojové kolekci je větší než dostupné místo z <paramref name="arrayIndex" /> do konce cílového pole <paramref name="array" />.– nebo – Typ <paramref name="T" /> nelze automaticky přetypovat na typ cílového pole <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>Získá počet dvojic klíč/hodnota v kolekci.</summary>
      <returns>Počet dvojic klíč/hodnota v kolekci</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít pro iteraci prostřednictvím kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>Získá hodnotu, která určuje, zda je kolekce určena jen pro čtení.</summary>
      <returns>Hodnota true, pokud je kolekce určena jen pro čtení, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>Získá hodnotu, která označuje, zda je tato instance slovníku stavů modelu platná.</summary>
      <returns>Hodnota true, pokud je tato instance platná, jinak hodnota false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>Určuje, zda existují objekty <see cref="T:System.Web.Mvc.ModelError" />, které jsou přidruženy k zadanému klíči nebo tvoří jeho předponu.</summary>
      <returns>Hodnota true, pokud slovník stavu modelu obsahuje hodnotu přidruženou k zadanému klíči, jinak hodnota false.</returns>
      <param name="key">Klíč</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>Získá nebo nastaví hodnotu, která je přidružena k zadanému klíči.</summary>
      <returns>Položka stavu modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>Získá kolekci obsahující klíče ve slovníku.</summary>
      <returns>Kolekce, která obsahuje klíče slovníku stavů modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>Zkopíruje hodnoty ze zadaného objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> do tohoto slovníku a přepíše přitom existující hodnoty, pokud se klíče shodují.</summary>
      <param name="dictionary">Slovník</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Odebere ze slovníku stavů modelu první výskyt zadaného objektu.</summary>
      <returns>Hodnota true, pokud byla položka <paramref name="item" /> úspěšně odebrána ze slovníku stavu modelu, jinak hodnota false.Tato metoda vrátí hodnotu false také v případě, že položku <paramref name="item" /> nelze ve slovníku stavu modelu nalézt.</returns>
      <param name="item">Objekt, který má být odebrán ze slovníku stavů modelu</param>
      <exception cref="T:System.NotSupportedException">Slovník stavu modelu je jen pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>Odebere ze slovníku stavů modelu element se zadaným klíčem.</summary>
      <returns>Hodnota true, pokud byl element úspěšně odebrán, jinak hodnota false.Tato metoda vrátí hodnotu false také v případě, že klíč <paramref name="key" /> nelze ve slovníku stavu modelu nalézt.</returns>
      <param name="key">Klíč elementu, který chcete odebrat</param>
      <exception cref="T:System.NotSupportedException">Slovník stavu modelu je jen pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Nastaví hodnotu zadaného klíče pomocí zadaného slovníku zprostředkovatele hodnoty.</summary>
      <param name="key">Klíč</param>
      <param name="value">Hodnota.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít pro iteraci prostřednictvím kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>Pokusí se získat hodnotu, která je přidružena k zadanému klíči.</summary>
      <returns>Hodnota true, pokud objekt, který implementuje entitu <see cref="T:System.Collections.Generic.IDictionary`2" />, obsahuje element se zadaným klíčem, jinak hodnota false.</returns>
      <param name="key">Klíč hodnoty, kterou chcete získat</param>
      <param name="value">Pokud je klíč nalezen, metoda vrátí hodnotu, která je přidružena k zadanému klíči, jinak je pro typ parametru <paramref name="value" /> přidružena výchozí hodnota.Tento parametr se předává neinicializovaný.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>Získá kolekci obsahující hodnoty ve slovníku.</summary>
      <returns>Kolekce, která obsahuje hodnoty slovníku stavů modelu</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>Poskytuje kontejner pro výsledek ověření.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>Získá nebo nastaví název členu.</summary>
      <returns>Název členu</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>Získá nebo nastaví zprávu výsledku ověření.</summary>
      <returns>Zpráva výsledku ověření</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>Poskytuje základní třídu pro implementaci ověřovací logiky.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Volána z konstruktorů v odvozených třídách k inicializaci třídy <see cref="T:System.Web.Mvc.ModelValidator" />.</summary>
      <param name="metadata">Metadata</param>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>Získá kontext kontroleru.</summary>
      <returns>Kontext kontroleru.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>Při implementaci v odvozené třídě vrátí metadata pro ověření klienta.</summary>
      <returns>Metadata pro ověření klienta</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Vrací validátora kompozitního modelu pro daný model.</summary>
      <returns>Validátor kompozitního modelu pro daný model</returns>
      <param name="metadata">Metadata</param>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>Získá nebo nastaví hodnotu určující, zda je požadována vlastnost modelu.</summary>
      <returns>Hodnota true, pokud je vlastnost modelu povinná, v opačném případě hodnota true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>Získá metadata pro validátora modelu.</summary>
      <returns>Metadata pro validátor modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>Při implementaci v odvozené třídě ověří objekt.</summary>
      <returns>Seznam výsledků ověření</returns>
      <param name="container">Kontejner</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>Poskytne seznam validátorů modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>Pokud je implementována do odvozené třídy, inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Získá seznam validátorů.</summary>
      <returns>Seznam validátorů</returns>
      <param name="metadata">Metadata</param>
      <param name="context">Kontext</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>Představuje kolekci zprostředkovatelů ověření modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> pomocí seznamu zprostředkovatelů ověření modelů.</summary>
      <param name="list">Seznam zprostředkovatelů ověření modelů</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.ClearItems">
      <summary>Odebere všechny elementy z kolekce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Vrátí seznam validátorů modelů.</summary>
      <returns>Seznam validátorů modelů</returns>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Vloží zprostředkovatele ověření modelu do kolekce.</summary>
      <param name="index">Index založený na nule, do kterého se má položka vložit.</param>
      <param name="item">Zprostředkovatel ověření modelu, který má být vložen.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.RemoveItem(System.Int32)">
      <summary>Odebere element na pozici kolekce se zadaným indexem.</summary>
      <param name="index">Index elementu (počítáno od nuly), který se má odebrat</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Nahradí element zprostředkovatele ověření modelu v zadaném indexu.</summary>
      <param name="index">Index elementu zprostředkovatele ověření modelu založený na nule, který má být nahrazen.</param>
      <param name="item">Nová hodnota elementu zprostředkovatele ověření modelu</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>Poskytuje kontejner pro aktuálního zprostředkovatele ověření.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>Získá kolekci zprostředkovatele validátoru modelu.</summary>
      <returns>Kolekce zprostředkovatele validátoru modelu</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>Představuje seznam položek, ze kterého uživatel může vybrat více položek.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MultiSelectList" /> pomocí zadaných položek, které mají být zahrnuty do seznamu.</summary>
      <param name="items">Položky</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MultiSelectList" /> pomocí zadaných položek, které mají být zahrnuty do seznamu, a vybraných hodnot.</summary>
      <param name="items">Položky</param>
      <param name="selectedValues">Vybrané hodnoty</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy MultiSelectList pomocí položek, které se mají zahrnout do seznamu, vybraných hodnot a zakázaných hodnot.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="selectedValues">Vybrané hodnoty pole.Slouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Zakázané hodnoty.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MultiSelectList" /> pomocí položek, které mají být zahrnuty do seznamu, pole hodnoty dat a pole textu dat.</summary>
      <param name="items">Položky</param>
      <param name="dataValueField">Pole hodnoty dat</param>
      <param name="dataTextField">Pole textu dat</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MultiSelectList" /> pomocí položek, které mají být zahrnuty do seznamu, pole hodnoty dat, pole textu dat a vybraných hodnot.</summary>
      <param name="items">Položky</param>
      <param name="dataValueField">Pole hodnoty dat</param>
      <param name="dataTextField">Pole textu dat</param>
      <param name="selectedValues">Vybrané hodnoty</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy MultiSelectList pomocí položek, které mají být zahrnuty do seznamu, pole hodnoty dat, pole textu dat, vybraných hodnot a zakázaných hodnot.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Vybrané hodnoty pole.Slouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Zakázané hodnoty.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String)">
      <summary>Inicializuje novou instanci třídy MultiSelectList pomocí položek, které mají být zahrnuty do seznamu, pole hodnoty dat, pole textu dat a pole skupiny dat.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole skupiny dat.Slouží k přiřazení vlastnosti skupiny k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy MultiSelectList pomocí položek, které mají být zahrnuty do seznamu, pole hodnoty dat, pole textu dat, pole skupiny dat a vybraných hodnot.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole skupiny dat.Slouží k přiřazení vlastnosti skupiny k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Vybrané hodnoty pole.Slouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy MultiSelectList pomocí položek, které mají být zahrnuty do seznamu, pole hodnoty dat, pole textu dat, pole skupiny dat, vybraných hodnot a zakázaných hodnot.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole skupiny dat.Slouží k přiřazení vlastnosti skupiny k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Vybrané hodnoty pole.Slouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Zakázané hodnoty.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy MultiSelectList pomocí položek, které mají být zahrnuty do seznamu, pole hodnoty dat, pole textu dat, pole skupiny dat, vybraných hodnot, zakázaných hodnot a zakázaných skupin.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole skupiny dat.Slouží k přiřazení vlastnosti skupiny k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValues">Vybrané hodnoty pole.Slouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Zakázané hodnoty.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledGroups">Zakázané skupiny.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListGroup" />.</param>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataGroupField">
      <summary>Získá pole skupiny dat.</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>Získá nebo nastaví textové pole.</summary>
      <returns>Pole textu dat</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>Získá nebo nastaví pole hodnoty dat.</summary>
      <returns>Pole hodnoty dat</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledGroups">
      <summary>Získá zakázané skupiny.</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledValues">
      <summary>Získá zakázané hodnoty.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít pro iteraci prostřednictvím kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>Získá nebo nastaví položky v seznamu.</summary>
      <returns>Položky v seznamu</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>Získá nebo nastaví vybrané hodnoty.</summary>
      <returns>Vybrané hodnoty</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít pro iteraci přes kolekci.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>V případě implementace v odvozené třídě poskytuje třídu metadat, která obsahuje odkaz na implementaci nejméně jednoho rozhraní filtru, jeho pořadí či oboru.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MvcFilter" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MvcFilter" /> a určuje pořadí filtrů a to, zda je povoleno více filtrů.</summary>
      <param name="allowMultiple">Hodnota true, pokud je povoleno více filtrů stejného typu, jinak hodnota false.</param>
      <param name="order">Pořadí filtru</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>Získá hodnotu, která udává, zda lze zadat více než jednu instanci atributu filtru.</summary>
      <returns>Hodnota true, je-li povolena více než jedna instance atributu filtru, jinak hodnota false.Implementuje<see cref="P:System.Web.Mvc.IMvcFilter.AllowMultiple" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>Získá hodnotu udávající pořadí, ve kterém se filtr použije.</summary>
      <returns>Hodnota udávající pořadí, ve kterém se filtr použije.Implementuje<see cref="P:System.Web.Mvc.IMvcFilter.Order" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>Vybere kontroler, který zpracuje požadavek HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MvcHandler" />.</summary>
      <param name="requestContext">Kontext požadavku</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>Přidá hlavičku verze pomocí zadaného kontextu HTTP.</summary>
      <param name="httpContext">Kontext HTTP</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Voláno rozhraním ASP.NET, aby mohlo začít asynchronní zpracování požadavků.</summary>
      <returns>Stav asynchronního volání</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="callback">Asynchronní metoda zpětného volání</param>
      <param name="state">Stav asynchronního objektu</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Voláno rozhraním ASP.NET, aby mohlo začít asynchronní zpracování požadavků pomocí základního kontextu HTTP.</summary>
      <returns>Stav asynchronního volání</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="callback">Asynchronní metoda zpětného volání</param>
      <param name="state">Stav asynchronního objektu</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda je zakázána hlavička odpovědi MVC.</summary>
      <returns>Hodnota true, pokud je hlavička odpovědi MVC zakázána, jinak hodnota false</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Voláno rozhraním ASP.NET po skončení asynchronního zpracování požadavků.</summary>
      <param name="asyncResult">Asynchronní výsledek</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>Získá hodnotu, která určuje, zda instanci <see cref="T:System.Web.IHttpHandler" /> může použít jiná žádost.</summary>
      <returns>Hodnota true, pokud lze instanci <see cref="T:System.Web.IHttpHandler" /> znovu použít; jinak hodnota false</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>Obsahuje název hlavičky verze ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Zpracuje požadavek pomocí zadaného kontextu požadavku HTTP.</summary>
      <param name="httpContext">Kontext HTTP</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Zpracuje požadavek pomocí zadaného základního kontextu požadavku HTTP.</summary>
      <param name="httpContext">Kontext HTTP</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>Získá kontext požadavku.</summary>
      <returns>Kontext požadavku</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Voláno rozhraním ASP.NET, aby mohlo začít asynchronní zpracování požadavků pomocí základního kontextu HTTP.</summary>
      <returns>Stav asynchronního volání</returns>
      <param name="context">Kontext HTTP</param>
      <param name="cb">Asynchronní metoda zpětného volání</param>
      <param name="extraData">Data</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Voláno rozhraním ASP.NET po skončení asynchronního zpracování požadavků.</summary>
      <param name="result">Asynchronní výsledek</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Získá hodnotu, která určuje, zda instanci <see cref="T:System.Web.IHttpHandler" /> může použít jiná žádost.</summary>
      <returns>Hodnota true, pokud lze instanci <see cref="T:System.Web.IHttpHandler" /> znovu použít; jinak hodnota false</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Umožní zpracování webových požadavků HTTP vlastní obslužnou rutinou HTTP, která implementuje rozhraní <see cref="T:System.Web.IHttpHandler" />.</summary>
      <param name="httpContext">Objekt <see cref="T:System.Web.HttpContext" />, který odkazuje na vnitřní objekty serveru (například: Požadavek, Odpověď, Relace a Server) používané ke zpracování požadavků HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>Představuje řetězec kódovaný jazykem HTML, který by neměl být znovu kódován.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MvcHtmlString" />.</summary>
      <param name="value">Řetězec, který se má vytvořitPokud není přiřazena žádná hodnota, pro vytvoření objektu se použije prázdná řetězcová hodnota.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>Pomocí zadané textové hodnoty vytvoří řetězec kódovaný jazykem HTML.</summary>
      <returns>Řetězec kódovaný jazykem HTML</returns>
      <param name="value">Hodnota řetězce, který chcete vytvořit</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>Obsahuje prázdný řetězec v jazyku HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>Určuje, zda má zadaný řetězec obsah, hodnotu null nebo je prázdný.</summary>
      <returns>Hodnota true, pokud má řetězec hodnotu null nebo je prázdný, jinak hodnota false.</returns>
      <param name="value">Řetězec</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>Ověří a zpracuje požadavek HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MvcHttpHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Voláno rozhraním ASP.NET, aby mohlo začít asynchronní zpracování požadavků.</summary>
      <returns>Stav asynchronního volání</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="callback">Asynchronní metoda zpětného volání</param>
      <param name="state">Stav</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Voláno rozhraním ASP.NET, aby mohlo začít asynchronní zpracování požadavků.</summary>
      <returns>Stav asynchronního volání</returns>
      <param name="httpContext">Základní kontext HTTP</param>
      <param name="callback">Asynchronní metoda zpětného volání</param>
      <param name="state">Stav</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Voláno rozhraním ASP.NET po skončení asynchronního zpracování požadavků.</summary>
      <param name="asyncResult">Asynchronní výsledek</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Voláno rozhraním ASP.NET, aby mohlo začít asynchronní zpracování požadavků.</summary>
      <returns>Stav asynchronního volání</returns>
      <param name="context">Kontext</param>
      <param name="cb">Asynchronní metoda zpětného volání</param>
      <param name="extraData">Objekt obsahující data</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Voláno rozhraním ASP.NET po skončení asynchronního zpracování požadavků.</summary>
      <param name="result">Stav asynchronních operací</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>Ověří a zpracuje požadavek HTTP.</summary>
      <param name="httpHandler">Obslužná rutina HTTP</param>
      <param name="httpContext">Kontext HTTP</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>Vytvoří objekt, který implementuje rozhraní IHttpHandler a předá do něj kontext požadavku.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MvcRouteHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MvcRouteHandler" /> pomocí zadaného objektu factory.</summary>
      <param name="controllerFactory">Objekt factory kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Vrátí obslužnou rutinu HTTP pomocí zadaného kontextu HTTP.</summary>
      <returns>Obslužná rutina HTTP</returns>
      <param name="requestContext">Kontext požadavku</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>Vrátí chování relace.</summary>
      <returns>Chování relace</returns>
      <param name="requestContext">Kontext požadavku</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Vrátí obslužnou rutinu HTTP pomocí zadaného kontextu požadavku.</summary>
      <returns>Obslužná rutina HTTP</returns>
      <param name="requestContext">Kontext požadavku</param>
    </member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>Vytváří instance souborů <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Vytvoří hostitele Razor.</summary>
      <returns>Hostitel Razor</returns>
      <param name="virtualPath">Virtuální cesta k cílovému souboru</param>
      <param name="physicalPath">Fyzická cesta k cílovému souboru</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>Rozšiřuje objekt NameValueCollection, aby bylo možné kopírovat kolekci do zadaného slovníku.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Kopíruje zadanou kolekci do cílového místa.</summary>
      <param name="collection">Kolekce</param>
      <param name="destination">Cíl</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Kopíruje zadanou kolekci do zadaného cíle a volitelně nahrazuje předchozí položky.</summary>
      <param name="collection">Kolekce</param>
      <param name="destination">Cíl</param>
      <param name="replaceEntries">Hodnota true, chcete-li nahradit předchozí položky, jinak hodnota false.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>Představuje základní třídu pro zprostředkovatele hodnot, jejichž hodnoty pocházejí z objektu <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> pomocí zadané neověřené kolekce.</summary>
      <param name="collection">Kolekce obsahující hodnoty použité k inicializaci zprostředkovatele</param>
      <param name="unvalidatedCollection">Kolekce obsahující hodnoty použité k inicializaci zprostředkovateleTato kolekce nebude ověřena.</param>
      <param name="culture">Objekt, který obsahuje informace o cílové jazykové verzi</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo,System.Boolean)">
      <summary>Inicializuje poskytovatele kolekcí názvů a hodnot.</summary>
      <param name="collection">Kolekce hodnot klíčů z požadavku.</param>
      <param name="unvalidatedCollection">Neověřená kolekce hodnot klíčů z požadavku.</param>
      <param name="culture">Jazyková verze, ve které se mají hodnoty použít.</param>
      <param name="jQueryToMvcRequestNormalizationRequired">Požadavek jQuery POST při odesílání komplexních objektů Javascript na server neprovádí kódování způsobem, který je pro rozhraní MVC srozumitelný.Tento příznak by se měl nastavit, pokud je zapotřebí požadavek normalizovat do podoby rozhraní MVC: https://aspnetwebstack.codeplex.com/workitem/1564.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />.</summary>
      <param name="collection">Kolekce obsahující hodnoty použité k inicializaci zprostředkovatele</param>
      <param name="culture">Objekt, který obsahuje informace o cílové jazykové verzi</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="collection" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>Určuje, zda kolekce obsahuje zadanou předponu.</summary>
      <returns>Hodnota true, pokud kolekce obsahuje zadanou předponu, jinak hodnota false.</returns>
      <param name="prefix">Předpona, kterou chcete vyhledat.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="prefix" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Získá klíče pomocí zadané předpony.</summary>
      <returns>Klíče</returns>
      <param name="prefix">Předpona</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>Vrátí objekt hodnoty, který používá zadaný klíč.</summary>
      <returns>Objekt hodnoty pro zadaný klíč</returns>
      <param name="key">Klíč objektu hodnoty, který má být načten.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Vrátí objekt hodnoty pomocí specifického klíče a ověřovací direktivy.</summary>
      <returns>Objekt hodnoty pro zadaný klíč</returns>
      <param name="key">Klíč</param>
      <param name="skipValidation">Hodnota true, je-li možné ověření přeskočit. V opačném případě hodnota false.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>Poskytuje vhodnou obálku pro atribut <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>Představuje atribut, pomocí kterého lze označit, že metoda kontroleru není metodou akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.NonActionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Určuje, zda atribut určí metodu, která není metodou akce, pomocí zadaného kontextu kontroleru.</summary>
      <returns>Hodnota true pokud atribut určí platnou, neakční metodu, jinak hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="methodInfo">Informace o metodě</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>Představuje atribut sloužící k označení metody akce, jejíž výstup bude uložen do mezipaměti.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.OutputCacheAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>Získá nebo nastaví název profilu mezipaměti.</summary>
      <returns>Název profilu mezipaměti</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>Získá nebo nastaví mezipaměť podřízené akce.</summary>
      <returns>Mezipaměť podřízené akce</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>Získá nebo nastaví dobu uložení do mezipaměti v sekundách.</summary>
      <returns>Doba uložení do mezipaměti</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí hodnotu, která určuje, zda je mezipaměť podřízené akce aktivní.</summary>
      <returns>Hodnota true, pokud je mezipaměť podřízené akce aktivní, jinak hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>Získá nebo nastaví umístění</summary>
      <returns>Umístění</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>Získá nebo nastaví hodnotu určující, zda má být mezipaměť uchována.</summary>
      <returns>Hodnota true, pokud má být mezipaměť uchována, jinak hodnota false.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Tato metoda je implementací <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> a podporuje infrastrukturu ASP.NET MVC.Tato metoda není zamýšlena pro použití přímo z vašeho kódu.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Tato metoda je implementací <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> a podporuje infrastrukturu ASP.NET MVC.Tato metoda není zamýšlena pro použití přímo z vašeho kódu.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Tato metoda je implementací <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> a podporuje infrastrukturu ASP.NET MVC.Tato metoda není zamýšlena pro použití přímo z vašeho kódu.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Tato metoda je implementací <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> a podporuje infrastrukturu ASP.NET MVC.Tato metoda není zamýšlena pro použití přímo z vašeho kódu.</summary>
      <param name="filterContext">Kontext filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Voláno před provedením výsledku akce</summary>
      <param name="filterContext">Kontext filtru, který zapouzdřuje informaci pro použití třídy <see cref="T:System.Web.Mvc.AuthorizeAttribute" /></param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>Získá nebo nastaví závislost SQL.</summary>
      <returns>Závislost SQL</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>Získá nebo nastaví kódování měnit podle obsahu.</summary>
      <returns>Kódování měnit podle obsahu</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>Získá nebo nastaví hodnotu měnit podle vlastních požadavků.</summary>
      <returns>Hodnota měnit podle vlastních požadavků</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>Získá nebo nastaví hodnotu měnit podle hlavičky.</summary>
      <returns>Hodnota měnit podle hlavičky</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>Získá nebo nastaví hodnotu měnit podle parametru.</summary>
      <returns>Hodnota měnit podle parametru</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideActionFiltersAttribute">
      <summary>Představuje atributy přidružené k filtru přepsání.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideActionFiltersAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.OverrideActionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Získá filtry k přepsání pro tuto instanci.</summary>
      <returns>Filtry k přepsání pro tuto instanci</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthenticationAttribute">
      <summary>Představuje atributy přidružené k ověřování.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthenticationAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.OverrideAuthenticationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthenticationAttribute.FiltersToOverride">
      <summary>Získá filtry k přepsání pro tuto instanci.</summary>
      <returns>Filtry k přepsání pro tuto instanci</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthorizationAttribute">
      <summary>Představuje atributy přidružené k autorizaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthorizationAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.OverrideAuthorizationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Získá filtry k přepsání pro tuto instanci.</summary>
      <returns>Filtry k přepsání pro tuto instanci</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideExceptionFiltersAttribute">
      <summary>Představuje atributy přidružené k filtru výjimek.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideExceptionFiltersAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.OverrideExceptionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideExceptionFiltersAttribute.FiltersToOverride">
      <summary>Získá filtry k přepsání pro tuto instanci.</summary>
      <returns>Filtry k přepsání pro tuto instanci</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideResultFiltersAttribute">
      <summary>Představuje atributy přidružené k filtru výsledků.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideResultFiltersAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.OverrideResultFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideResultFiltersAttribute.FiltersToOverride">
      <summary>Získá filtry k přepsání pro tuto instanci.</summary>
      <returns>Filtry k přepsání pro tuto instanci</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>Zapouzdřuje informace pro parametry metody akce vazby do datového modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ParameterBindingInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>Získá vazač modelu.</summary>
      <returns>Vazač modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>Získá seznam názvů vlastností oddělených čárkou se zakázanou vazbou.</summary>
      <returns>Seznam vyloučení</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>Získá seznam názvů vlastností oddělených čárkou s povolenou vazbou.</summary>
      <returns>Seznam zahrnutí</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>Získá předponu, která se používá v případě, že rozhraní MVC váže hodnotu s parametrem akce nebo vlastností modelu.</summary>
      <returns>Předpona</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>Obsahuje informace, které popisují parametr.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>Získá popisovač akce.</summary>
      <returns>Popisovač akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>Získá informace o vazbě.</summary>
      <returns>Informace o vazbě</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>Získá výchozí hodnotu parametru.</summary>
      <returns>Výchozí hodnota parametru</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou pro tento člen definovány (mimo pojmenovaných atributů).</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou definovány pro tento člen a určeny podle typu.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Určuje, zda je jedna nebo více instancí vlastního typu atributu definována pro tento člen.</summary>
      <returns>Hodnota true, pokud je pro tento člen definován vlastní typ atributu, jinak hodnota false.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>Získá název parametru.</summary>
      <returns>Název parametru</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>Získá typ parametru.</summary>
      <returns>Typ parametru</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>Představuje základní třídu, která slouží k odeslání částečného zobrazení do odpovědi.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.PartialViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí objekt <see cref="T:System.Web.Mvc.ViewEngineResult" />, který slouží k vykreslení zobrazení.</summary>
      <returns>Výsledek modulu zobrazení</returns>
      <param name="context">Kontext kontroleru.</param>
      <exception cref="T:System.InvalidOperationException">Když se metoda pokoušela najít zobrazení, došlo k chybě.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>Zprostředkuje registrační bod pro kód aplikace před spuštěním ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Zaregistruje kód aplikace před spuštěním Razor.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>Představuje zprostředkovatele hodnoty pro řetězce dotazu, které jsou obsaženy v objektu <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.QueryStringValueProvider" />.</summary>
      <param name="controllerContext">Objekt, který zapouzdřuje informace o aktuální žádosti HTTP</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>Představuje třídu, která zodpovídá za vytvoření nové instance objektu zprostředkovatele hodnoty řetězce dotazu.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí objekt zprostředkovatele hodnot pro zadaný kontext kontroleru.</summary>
      <returns>Objekt zprostředkovatele hodnoty řetězce dotazu</returns>
      <param name="controllerContext">Objekt, který zapouzdřuje informace o aktuální žádosti HTTP</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>Poskytuje adaptér pro atribut <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
      <param name="attribute">Atribut rozsahu</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>Získá seznam ověřovacích pravidel klienta pro kontrolu rozsahu.</summary>
      <returns>Seznam ověřovacích pravidel klienta pro kontrolu rozsahu</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Představuje třídu používanou pro vytváření zobrazení, která mají syntaxi Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RazorView" />.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení</param>
      <param name="layoutPath">Rozložení stránky předlohy</param>
      <param name="runViewStartPages">Hodnota, která určuje, zda budou spouštěcí soubory zobrazení spuštěny před zobrazením.</param>
      <param name="viewStartFileExtensions">Sada přípon používaných při hledání spouštěcích souborů zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RazorView" /> pomocí aktivátoru stránky zobrazení.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení</param>
      <param name="layoutPath">Rozložení stránky předlohy</param>
      <param name="runViewStartPages">Hodnota, která určuje, zda budou spouštěcí soubory zobrazení spuštěny před zobrazením.</param>
      <param name="viewStartFileExtensions">Sada přípon používaných při hledání spouštěcích souborů zobrazení</param>
      <param name="viewPageActivator">Aktivátor stránky zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>Získá rozložení stránky předlohy.</summary>
      <returns>Rozložení stránky předlohy</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Vykreslí zadaný kontext zobrazení pomocí zadaného zapisovače a instance <see cref="T:System.Web.Mvc.WebViewPage" />.</summary>
      <param name="viewContext">Kontext zobrazení</param>
      <param name="writer">Zapisovač textu, který se použije k vykreslení zobrazení do odpovědi</param>
      <param name="instance">Instance <see cref="T:System.Web.Mvc.WebViewPage" />.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>Získá hodnotu, která určuje, zda budou spouštěcí soubory zobrazení spuštěny před zobrazením.</summary>
      <returns>Hodnota, která určuje, zda budou spouštěcí soubory zobrazení spuštěny před zobrazením.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>Získá sadu přípon souborů, které se použijí při hledání spouštěcích souborů zobrazení.</summary>
      <returns>Sada přípon souborů používaných při hledání spouštěcích souborů zobrazení.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>Představuje modul zobrazení použitý k vykreslení stránky, která využívá syntaxi Razor rozhraní ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RazorViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RazorViewEngine" /> pomocí aktivátoru stránky zobrazení.</summary>
      <param name="viewPageActivator">Aktivátor stránky zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Pomocí zadaného kontextu kontroleru a částečné cesty vytvoří částečné zobrazení.</summary>
      <returns>Dílčí zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="partialPath">Cesta částečného zobrazení.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Vytvoří zobrazení pomocí zadaného kontextu kontroleru a cesty zobrazení a hlavního zobrazení.</summary>
      <returns>Zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení.</param>
      <param name="masterPath">Cesta hlavního zobrazení.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>Řídí zpracování akcí aplikace tak, že je přesměruje na určený identifikátor URI.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" />.</summary>
      <param name="url">Adresa URL cíle</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RedirectResult" /> pomocí zadané adresy URL cíle a příznaku trvalého přesměrování.</summary>
      <param name="url">Adresa URL</param>
      <param name="permanent">Hodnota, která určuje, zda má být přesměrování trvalé</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umožňuje zpracování výsledku metody akce pomocí vlastního typu, který dědí z třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>Získá hodnotu, která určuje, zda má být přesměrování trvalé.</summary>
      <returns>Hodnota true, pokud má přesměrování být trvalé, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>Získá nebo nastaví adresu URL cíle.</summary>
      <returns>Adresa URL cíle</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>Představuje výsledek, který provádí přesměrování pomocí zadaného slovníku hodnot trasy.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> pomocí zadaného názvu a hodnot trasy.</summary>
      <param name="routeName">Název trasy</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> pomocí zadaného názvu trasy, hodnot trasy a příznaku trvalého přesměrování.</summary>
      <param name="routeName">Název trasy</param>
      <param name="routeValues">Hodnoty trasy</param>
      <param name="permanent">Hodnota, která určuje, zda má být přesměrování trvalé</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> pomocí zadaných hodnot trasy.</summary>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umožňuje zpracování výsledku metody akce pomocí vlastního typu, který dědí z třídy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>Získá hodnotu, která určuje, zda má být přesměrování trvalé.</summary>
      <returns>Hodnota true, pokud má přesměrování být trvalé, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>Získá nebo nastaví název trasy.</summary>
      <returns>Název trasy</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>Získá nebo nastaví hodnoty trasy.</summary>
      <returns>Hodnoty trasy</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>Obsahuje informace, které popisují reflektovanou metodu akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" />.</summary>
      <param name="methodInfo">Informace metody akce</param>
      <param name="actionName">Název akce</param>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="methodInfo" /> nebo <paramref name="controllerDescriptor" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>Získá název akce.</summary>
      <returns>Název akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>Získá popisovač kontroleru.</summary>
      <returns>Popisovač kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Spouští zadaný kontext kontroleru pomocí zadaných parametrů metody akce.</summary>
      <returns>Vrácená hodnota akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="parameters">Parametry</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="parameters" /> nebo <paramref name="controllerContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Vrací pole vlastních atributů definovaných pro tento člen mimo pojmenovaných atributů.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Vrací pole vlastních atributů definovaných pro tento člen určených podle typu.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Získá atributy filtru.</summary>
      <returns>Atributy filtru</returns>
      <param name="useCache">Hodnota true, pokud má být použita mezipaměť, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>Načte parametry metody akce.</summary>
      <returns>Parametry metody akce</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>Načte selektory akce.</summary>
      <returns>Selektory akce</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Určuje, zda je jedna nebo více instancí vlastního typu atributu definována pro tento člen.</summary>
      <returns>Hodnota true, pokud je pro tento člen definován vlastní typ atributu, jinak hodnota false.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>Získá nebo nastaví informace metody akce.</summary>
      <returns>Informace metody akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>Získá jedinečné ID pro reflektovaný popisovač akce pomocí opožděné inicializace.</summary>
      <returns>Jedinečný ID</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>Obsahuje informace, které popisují reflektovaný kontroler.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" />.</summary>
      <param name="controllerType">Typ kontroleru</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerType" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>Získá typ kontroleru.</summary>
      <returns>Typ kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Vyhledá zadanou akci pro zadaný kontext kontroleru.</summary>
      <returns>Informace o akci</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název akce</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>Vrátí seznam akcí kontroleru.</summary>
      <returns>Seznam popisovačů akce kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou pro tento člen definovány (mimo pojmenovaných atributů).</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou definovány pro tento člen a určeny podle typu.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Získá atributy filtru.</summary>
      <returns>Atributy filtru</returns>
      <param name="useCache">Hodnota true, pokud má být použita mezipaměť, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Vrátí hodnotu, která určuje, zda je pro tento člen definována jedna nebo více instancí vlastního typu atributu.</summary>
      <returns>Hodnota true, pokud je pro tento člen definován vlastní typ atributu, jinak hodnota false.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>Obsahuje informace, které popisují reflektovaný parametr metody akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" />.</summary>
      <param name="parameterInfo">Informace o parametru</param>
      <param name="actionDescriptor">Popisovač akce</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="parameterInfo" /> nebo <paramref name="actionDescriptor" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>Získá popisovač akce.</summary>
      <returns>Popisovač akce</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>Získá informace o vazbě.</summary>
      <returns>Informace o vazbě</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>Získá výchozí hodnotu reflektovaného parametru.</summary>
      <returns>Výchozí hodnota reflektovaného parametru</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou pro tento člen definovány (mimo pojmenovaných atributů).</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou definovány pro tento člen a určeny podle typu.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
      <exception cref="T:System.TypeLoadException">Typ vlastního atributu nelze načíst.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Pro tento člen je definován více než jeden atribut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Vrátí hodnotu, která určuje, zda je pro tento člen definována jedna nebo více instancí vlastního typu atributu.</summary>
      <returns>Hodnota true, pokud je pro tento člen definován vlastní typ atributu, jinak hodnota false.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>Získá nebo nastaví informace o parametru.</summary>
      <returns>Informace o parametru</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>Získá název parametru.</summary>
      <returns>Název parametru</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>Získá typ parametru.</summary>
      <returns>Typ parametru</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>Poskytuje adaptér pro atribut <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" />.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
      <param name="attribute">Atribut regulární výraz</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>Získá seznam ověřovacích pravidel klienta atributu regulární výraz.</summary>
      <returns>Seznam ověřovacích pravidel klienta atributu regulární výraz</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>Poskytuje atribut používající ověření modulu plug-in jQuery vzdáleného validátoru. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RemoteAttribute" /> pomocí zadaného názvu trasy.</summary>
      <param name="routeName">Název trasy</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RemoteAttribute" /> pomocí zadaného názvu metody akce a názvu kontroleru.</summary>
      <param name="action">Název metody akce</param>
      <param name="controller">Název kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RemoteAttribute" /> pomocí zadaného názvu metody akce, názvu kontroleru a názvu oblasti.</summary>
      <param name="action">Název metody akce</param>
      <param name="controller">Název kontroleru</param>
      <param name="areaName">Název oblasti</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.Web.Mvc.AreaReference)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
      <param name="action">Název trasy</param>
      <param name="controller">Název kontroleru</param>
      <param name="areaReference">V případě nastavení atributu <see cref="F:System.Web.Mvc.AreaReference.UseRoot" /> hledá kontroler v kořenovém adresáři.V ostatních případech hledá v aktuální oblasti.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.AdditionalFields">
      <summary>Získá nebo nastaví další pole potřebná pro ověření.</summary>
      <returns>Další pole potřebná pro ověření</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)">
      <summary>Vrací řetězec názvů polí ověření oddělený čárkami.</summary>
      <returns>Řetězec názvů polí ověření oddělený čárkami</returns>
      <param name="property">Název vlastnosti ověření</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>Formátuje chybovou zprávu, která se zobrazuje při selhání ověření.</summary>
      <returns>Formátovaná chybová zpráva</returns>
      <param name="name">Název zobrazený spolu s chybovou zprávou.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formátuje vlastnost pro ověření klienta předponou v podobě hvězdičky (*) a tečky.</summary>
      <returns>Řetězec *. Je přidáno jako předpona vlastnosti.</returns>
      <param name="property">Vlastnost</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Získá seznam pravidel ověření klienta pro danou vlastnost.</summary>
      <returns>Získá seznam pravidel vzdáleného ověření klienta pro danou vlastnost.</returns>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>Získá adresu URL pro vyvolání vzdáleného ověření.</summary>
      <returns>Adresa URL pro vyvolání vzdáleného ověření</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>Získá nebo nastaví metodu protokolu HTTP používanou pro vzdálené ověření.</summary>
      <returns>Metoda protokolu HTTP používaná pro vzdálené ověření.Výchozí hodnota je GET.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>Tato metoda vrací vždy hodnotu true.</summary>
      <returns>true</returns>
      <param name="value">Cíl ověření</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>Získá slovník dat trasy.</summary>
      <returns>Slovník dat trasy</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>Získá nebo nastaví název trasy.</summary>
      <returns>Název trasy</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>Získá kolekci trasy z tabulky trasy.</summary>
      <returns>Kolekce trasy z tabulky trasy</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>Poskytuje adaptér pro atribut <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
      <param name="attribute">Požadovaný atribut.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>Získá seznam ověřovacích pravidel klienta pro povinné hodnoty.</summary>
      <returns>Seznam ověřovacích pravidel klienta pro povinné hodnoty</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>Představuje atribut, který vynutí opětovné odeslání nezabezpečeného požadavku HTTP přes protokol HTTPS.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Obsluhuje nezabezpečené požadavky HTTP odeslané do metody akce.</summary>
      <param name="filterContext">Objekt, který zapouzdřuje informace potřebné k použití atributu zobrazení<see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.InvalidOperationException">Požadavek HTTP obsahuje neplatné přepsání metody přenosu.Všechny požadavky GET jsou považovány za neplatné.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Určí, zda je požadavek zabezpečený (protokol HTTPS), a pokud není, volá metodu <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Objekt, který zapouzdřuje informace potřebné k použití atributu zobrazení<see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>Poskytuje kontext pro metodu <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> třídy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="result">Objekt výsledku</param>
      <param name="canceled">Hodnota true, chcete-li zrušit provádění, jinak hodnota false.</param>
      <param name="exception">Objekt výjimky</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="result" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda je instance <see cref="T:System.Web.Mvc.ResultExecutedContext" /> zrušena.</summary>
      <returns>Hodnota true, pokud je instance zrušena, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>Získá nebo nastaví objekt výjimky.</summary>
      <returns>Objekt výjimky</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>Získá nebo nastaví hodnotu určující, zda byla výjimka vyřešena.</summary>
      <returns>Hodnota true, pokud byla výjimka vyřešena. V opačném případě hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>Získá nebo nastaví výsledek akce.</summary>
      <returns>Výsledek akce</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>Poskytuje kontext pro metodu <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> třídy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ResultExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ResultExecutingContext" /> pomocí zadaného kontextu kontroleru a výsledku akce.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="result">Výsledek akce</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="result" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>Získá nebo nastaví hodnotu určující, zda je tato hodnota <see cref="T:System.Web.Mvc.ResultExecutingContext" /> cancel.</summary>
      <returns>Hodnota true, pokud je hodnota cancel, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>Získá nebo nastaví výsledek akce.</summary>
      <returns>Výsledek akce</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAreaAttribute">
      <summary>Definuje oblast, která má být nastavena pro všechny trasy definované v tomto kontroleru.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RouteAreaAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RouteAreaAttribute" />.</summary>
      <param name="areaName">Název oblastiV případe hodnoty null dojde k pokusu o odvození názvu oblasti z oboru názvů cílového kontroleru.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaName">
      <summary>Získá název oblasti, která má být nastavena pro všechny trasy definované v kontroleru.V případe hodnoty null dojde k pokusu o odvození názvu oblasti z oboru názvů cílového kontroleru.</summary>
      <returns>Název oblasti, která má být nastavena pro všechny trasy definované v kontroleru.</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaPrefix">
      <summary>Získá předponu URL, která má být použita pro trasy této oblasti.ve výchozím nastavení je použit název oblasti.</summary>
      <returns>Předpona URL, která má být použita pro trasy této oblasti.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAttribute">
      <summary>Ustaví kontroler nebo akci k přímému zveřejnění prostřednictvím trasy.Při umístění na kontroleru se vztahuje na akce, u kterých není žádný obor názvů System.Web.Mvc.RouteAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RouteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RouteAttribute" /> se zadanou šablonou.</summary>
      <param name="template">Vzor trasy k porovnání shody.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Name">
      <summary>Získá nebo nastaví název trasy.</summary>
      <returns>Název trasy</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Order">
      <summary>Získá pořadí, ve kterém je trasa použita.</summary>
      <returns>Pořadí, ve kterém je trasa použita.</returns>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.System#Web#Mvc#Routing#IDirectRouteFactory#CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Vytvoří položku přímé trasy.</summary>
      <returns>Položka přímé trasy.</returns>
      <param name="context">Kontext, který má být použit k vytvoření trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Template">
      <summary>Získá vzor pro trasu k porovnání shody.</summary>
      <returns>Vzor k porovnání shody.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions">
      <summary>Poskytuje rozšíření směrování pro atribut kolekce tras.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection)">
      <summary>Mapuje trasy definované atributy pro aplikaci.</summary>
      <param name="routes">Kolekce tras.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>Mapuje trasy definované atributy pro aplikaci.</summary>
      <param name="directRouteProvider">Položka <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" />, která se má použít pro mapování tras.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Mapuje trasy definované atributy pro aplikaci.</summary>
      <param name="routes">Kolekce tras.</param>
      <param name="constraintResolver">Objekt <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />, který má být použit k vyřešení vložených omezení v šablonách tras.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>Mapuje trasy definované atributy pro aplikaci.</summary>
      <param name="constraintResolver">Objekt <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />, který má být použit k vyřešení vložených omezení v šablonách tras.</param>
      <param name="directRouteProvider">Položka <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" />, která se má použít pro mapování tras.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>Rozšiřuje objekt <see cref="T:System.Web.Routing.RouteCollection" /> pro směrování MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Vrátí objekt obsahující informace o trase a virtuální cestě, které jsou výsledkem generování adresy URL v aktuální oblasti.</summary>
      <returns>Objekt obsahující informace o trase a virtuální cestě, které jsou výsledkem generování adresy URL v aktuální oblasti.</returns>
      <param name="routes">Objekt obsahující trasy pro aplikace</param>
      <param name="requestContext">Objekt, který zapouzdřuje informace o požadované trase.</param>
      <param name="name">Název trasy, která se má použít po načtení informací o cestě adresy URL.</param>
      <param name="values">Objekt, který obsahuje parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Vrátí objekt obsahující informace o trase a virtuální cestě, které jsou výsledkem generování adresy URL v aktuální oblasti.</summary>
      <returns>Objekt obsahující informace o trase a virtuální cestě, které jsou výsledkem generování adresy URL v aktuální oblasti.</returns>
      <param name="routes">Objekt obsahující trasy pro aplikace</param>
      <param name="requestContext">Objekt, který zapouzdřuje informace o požadované trase.</param>
      <param name="values">Objekt, který obsahuje parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>Ignoruje zadanou trasu adresy URL pro daný seznam dostupných tras.</summary>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="url">Vzor adresy URL pro trasu, který má být ignorován.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> nebo <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>Ignoruje zadanou trasu adresy URL pro daný seznam dostupných tras a seznam omezení.</summary>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="url">Vzor adresy URL pro trasu, který má být ignorován.</param>
      <param name="constraints">Sada výrazů, které udávají hodnoty parametru. <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> nebo <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Mapuje zadanou trasu adresy URL.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="name">Název mapované trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> nebo <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Mapuje zadanou trasu adresy URL a nastaví výchozí hodnoty trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="name">Název mapované trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="defaults">Objekt obsahující výchozí hodnoty trasy</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> nebo <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Mapuje zadanou trasu adresy URL a nastaví výchozí hodnoty a omezení trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="name">Název mapované trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="defaults">Objekt obsahující výchozí hodnoty trasy</param>
      <param name="constraints">Sada výrazů, které udávají hodnoty parametru. <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> nebo <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mapuje zadanou trasu adresy URL a nastaví výchozí hodnoty, omezení a obory názvů trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="name">Název mapované trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="defaults">Objekt obsahující výchozí hodnoty trasy</param>
      <param name="constraints">Sada výrazů, které udávají hodnoty parametru. <paramref name="url" />.</param>
      <param name="namespaces">Sada oborů názvů pro aplikaci</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> nebo <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>Mapuje zadanou trasu adresy URL a nastaví výchozí hodnoty a obory názvů trasy.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="name">Název mapované trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="defaults">Objekt obsahující výchozí hodnoty trasy</param>
      <param name="namespaces">Sada oborů názvů pro aplikaci</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> nebo <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>Mapuje zadanou trasu adresy URL a nastaví obory hodnot.</summary>
      <returns>Odkaz na mapovanou trasu</returns>
      <param name="routes">Kolekce tras pro aplikaci</param>
      <param name="name">Název mapované trasy</param>
      <param name="url">Vzor adresy URL pro trasu</param>
      <param name="namespaces">Sada oborů názvů pro aplikaci</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> nebo <paramref name="url" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>Představuje zprostředkovatele hodnot pro data směrování obsažená v objektu, který implementuje rozhraní <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RouteDataValueProvider" />.</summary>
      <param name="controllerContext">Objekt, který obsahuje informace o požadavku HTTP</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>Představuje objekt pro vytváření objektů zprostředkovatele hodnot dat trasy.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí objekt zprostředkovatele hodnot pro zadaný kontext kontroleru.</summary>
      <returns>Objekt zprostředkovatele hodnoty</returns>
      <param name="controllerContext">Objekt, který zapouzdřuje informace o aktuální žádosti HTTP</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RoutePrefixAttribute">
      <summary>Označí kontroler předponou trasy, která se použije pro všechny akce v rámci kontroleru.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RoutePrefixAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.RoutePrefixAttribute" /> se zadanou předponou.</summary>
      <param name="prefix">Předpona trasy pro kontroler.</param>
    </member>
    <member name="P:System.Web.Mvc.RoutePrefixAttribute.Prefix">
      <summary>Získá předponu trasy.</summary>
      <returns>Předpona trasy</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>Představuje seznam, ze kterého si uživatelé vyberou jednu položku.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.SelectList" /> pomocí zadaných položek pro seznam.</summary>
      <param name="items">Položky</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.SelectList" /> pomocí zadaných položek pro seznam a vybrané hodnoty.</summary>
      <param name="items">Položky</param>
      <param name="selectedValue">Vybraná hodnota</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy SelectList pomocí zadaných položek pro seznam, vybranou hodnotu a zakázané hodnoty.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="selectedValue">Vybraná hodnotaSlouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Zakázané hodnoty.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.SelectList" /> pomocí zadaných položek pro seznam, pole hodnoty dat a pole textu dat.</summary>
      <param name="items">Položky</param>
      <param name="dataValueField">Pole hodnoty dat</param>
      <param name="dataTextField">Pole textu dat</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.SelectList" /> pomocí zadaných položek pro seznam, pole hodnoty dat, pole textu dat a vybrané hodnoty.</summary>
      <param name="items">Položky</param>
      <param name="dataValueField">Pole hodnoty dat</param>
      <param name="dataTextField">Pole textu dat</param>
      <param name="selectedValue">Vybraná hodnota</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy SelectList pomocí zadaných položek pro seznam, pole hodnoty dat, pole textu dat, vybrané hodnoty a zakázaných hodnot.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Vybraná hodnotaSlouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Zakázané hodnoty.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object)">
      <summary>Inicializuje novou instanci třídy SelectList pomocí zadaných položek pro seznam, pole hodnoty dat, pole textu dat, pole skupiny dat a vybrané hodnoty.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole skupiny dat.Slouží k přiřazení vlastnosti skupiny k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Vybraná hodnotaSlouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy SelectList pomocí zadaných položek pro seznam, pole hodnoty dat, pole textu dat, pole skupiny dat, vybrané hodnoty a zakázaných hodnot.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole skupiny dat.Slouží k přiřazení vlastnosti skupiny k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Vybraná hodnotaSlouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Zakázané hodnoty.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializuje novou instanci třídy SelectList pomocí zadaných položek pro seznam, pole hodnoty dat, pole textu dat a pole skupiny dat.Vybraná hodnota, zakázané hodnoty a zakázané skupiny.</summary>
      <param name="items">Položky sloužící k tvorbě jednotlivých položek <see cref="T:System.Web.Mvc.SelectListItem" /> seznamu.</param>
      <param name="dataValueField">Pole hodnoty datSlouží k přiřazení vlastnosti hodnoty k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataTextField">Pole textu datSlouží k přiřazení vlastnosti textu k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="dataGroupField">Pole skupiny dat.Slouží k přiřazení vlastnosti skupiny k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="selectedValue">Vybraná hodnotaSlouží k přiřazení vybrané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledValues">Zakázané hodnoty.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListItem" />.</param>
      <param name="disabledGroups">Zakázané skupiny.Slouží k přiřazení zakázané vlastnosti k odpovídající položce <see cref="T:System.Web.Mvc.SelectListGroup" />.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>Získá hodnotu seznamu vybranou uživatelem.</summary>
      <returns>Vybraná hodnota</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListGroup">
      <summary>Reprezentuje element HTML skupiny voleb a jeho atributy.Seznam pro výběr podporuje přítomnost více skupin se stejným názvem.Ty se pak porovnávají s využitím rovnosti odkazů.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListGroup.#ctor"></member>
    <member name="P:System.Web.Mvc.SelectListGroup.Disabled">
      <summary>Získá nebo nastaví hodnotu, která určuje, jestli je tato skupina <see cref="T:System.Web.Mvc.SelectListGroup" /> zakázána.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListGroup.Name">
      <summary>Reprezentuje hodnotu popisku této skupiny voleb.</summary>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>Představuje vybranou položku v instanci třídy <see cref="T:System.Web.Mvc.SelectList" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Disabled">
      <summary>Získá nebo nastaví hodnotu, která určuje, jestli je tato skupina <see cref="T:System.Web.Mvc.SelectListItem" /> zakázána.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Group">
      <summary>Představuje element HTML skupiny voleb, do které je tato položka zabalena.Seznam pro výběr podporuje přítomnost více skupin se stejným názvem.Ty se pak porovnávají s využitím rovnosti odkazů.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>Získá nebo nastaví hodnotu, která určuje, zda je vybrána <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
      <returns>Hodnota true, je-li položka vybrána. V opačném případě hodnota false</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>Získá nebo nastaví text vybrané položky.</summary>
      <returns>Text</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>Získá nebo nastaví hodnotu vybrané položky.</summary>
      <returns>Hodnota.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateAttribute">
      <summary>Určuje stav relace kontroleru.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.SessionStateAttribute" /></summary>
      <param name="behavior">Typ stavu relace</param>
    </member>
    <member name="P:System.Web.Mvc.SessionStateAttribute.Behavior">
      <summary>Získá chování stavu relace pro kontroler.</summary>
      <returns>Chování stavu relace pro kontroler</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>Poskytuje data o stavu relace aktuálnímu objektu <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Načte dočasná data pomocí zadaného kontextu kontroleru.</summary>
      <returns>Dočasná data</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <exception cref="T:System.InvalidOperationException">Při načítání kontextu relace došlo k chybě.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ukládá určené hodnoty do slovníku dočasných dat pomocí zadaného kontextu kontroleru.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="values">Hodnoty</param>
      <exception cref="T:System.InvalidOperationException">Při načítání kontextu relace došlo k chybě.</exception>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>Poskytuje adaptér pro atribut <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" />.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
      <param name="attribute">Atribut délka řetězce</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>Získá seznam ověřovacích pravidel klienta atributu délka řetězce.</summary>
      <returns>Seznam ověřovacích pravidel klienta atributu délka řetězce</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>Představuje skupinu dat, která je uchována pouze z jednoho požadavku na další.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>Přidá element se zadaným klíčem a hodnotou k objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Klíč elementu, který chcete přidat</param>
      <param name="value">Hodnota elementu, který chcete přidat</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> je určen pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">V objektu <see cref="T:System.Collections.Generic.IDictionary`2" /> již existuje element se stejným klíčem.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>Odstraní všechny položky z instance <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.ICollection`1" /> je určen pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>Určuje, zda instance <see cref="T:System.Collections.Generic.IDictionary`2" /> obsahuje element se zadaným klíčem.</summary>
      <returns>Hodnota true, pokud instance <see cref="T:System.Collections.Generic.IDictionary`2" /> obsahuje element se zadaným klíčem, jinak hodnota false.</returns>
      <param name="key">Klíč, který chcete nalézt v instanci <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>Určuje, zda slovník obsahuje zadanou hodnotu.</summary>
      <returns>Hodnota true, pokud slovník obsahuje zadanou hodnotu, jinak hodnota false.</returns>
      <param name="value">Hodnota.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>Získá počet elementů v objektu <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Počet elementů v objektu <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>Získá enumerátor.</summary>
      <returns>Enumerátor.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>Získá nebo nastaví objekt se zadaným klíčem.</summary>
      <returns>Objekt se zadaným klíčem.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>Označí ve slovníku všechny klíče k zachování.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>Označí ve slovníku zadaný klíč, který se zachová.</summary>
      <param name="key">Klíč, který chcete ve slovníku zachovat.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>Získá objekt <see cref="T:System.Collections.Generic.ICollection`1" />, který obsahuje klíče elementů v objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Klíče elementů v objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Načte zadaný kontext kontroleru pomocí zadaného zprostředkovatele dat.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="tempDataProvider">Zprostředkovatel dočasných dat.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>Vrátí objekt, který obsahuje element spojený se zadaným klíčem, aniž by se klíč označil k odstranění.</summary>
      <returns>Objekt, který obsahuje element spojený se zadaným klíčem.</returns>
      <param name="key">Klíč elementu, který chcete vrátit.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>Odebere element se zadaným klíčem z objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Hodnota true, pokud byl element úspěšně odebrán, jinak hodnota false.Tato metoda také vrátí hodnotu false, pokud klíč <paramref name="key" /> nelze v objektu <see cref="T:System.Collections.Generic.IDictionary`2" /> nalezen.Instance</returns>
      <param name="key">Klíč elementu, který chcete odebrat</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> je určen pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Uloží zadaný kontext kontroleru pomocí zadaného zprostředkovatele dat.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="tempDataProvider">Zprostředkovatel dočasných dat.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Přidá zadanou dvojici klíč/hodnota do slovníku.</summary>
      <param name="keyValuePair">Dvojice klíč/hodnota.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Pomocí výchozí procedury rovnosti určí, zda sekvence obsahuje zadaný element.</summary>
      <returns>Hodnota true, pokud slovník obsahuje zadanou dvojici klíč/hodnota, jinak hodnota false.</returns>
      <param name="keyValuePair">Dvojice klíč/hodnota, kterou chcete vyhledat.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Zkopíruje dvojici klíč/hodnota do zadaného pole u zadaného indexu.</summary>
      <param name="array">Cílové pole.</param>
      <param name="index">Index.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Získá hodnotu, která určuje, zda je slovník určen pouze ke čtení.</summary>
      <returns>Hodnota true, pokud je slovník určen pouze ke čtení, jinak hodnota false.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Odstraní zadanou dvojici klíč/hodnota ze slovníku.</summary>
      <returns>Hodnota true, pokud byla dvojice klíč/hodnota úspěšně odebrána, jinak hodnota false.</returns>
      <param name="keyValuePair">Dvojice klíč/hodnota.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít k iteraci v rámci kolekce.</summary>
      <returns>Objekt, <see cref="T:System.Collections.IEnumerator" /> který lze použít pro iteraci prostřednictvím kolekce.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Získá hodnotu elementu se zadaným klíčem.</summary>
      <returns>Hodnota true, pokud objekt, který implementuje entitu <see cref="T:System.Collections.Generic.IDictionary`2" />, obsahuje element se zadaným klíčem, jinak hodnota false.</returns>
      <param name="key">Klíč hodnoty, kterou chcete získat</param>
      <param name="value">Pokud je klíč nalezen, metoda vrátí hodnotu, která je přidružena k zadanému klíči, jinak je přidružena výchozí hodnota <paramref name="value" /> pro typ parametru.Tento parametr se předává neinicializovaný.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>Získá objekt <see cref="T:System.Collections.Generic.ICollection`1" />, který obsahuje hodnoty v objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Hodnoty elementů v objektu, který implementuje hodnotu <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>Zapouzdří informace o kontextu aktuální šablony.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>Získá nebo nastaví formátovanou hodnotu modelu.</summary>
      <returns>Formátovaná hodnota modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>Načte úplný identifikátor DOM ID pole, které používá zadaný atribut HTML name.</summary>
      <returns>Úplný identifikátor DOM ID.</returns>
      <param name="partialFieldName">Hodnota atributu HTML name</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>Načte úplný název (včetně předpony) pro pole, které používá zadaný atribut HTML name.</summary>
      <returns>Název pole s předponou</returns>
      <param name="partialFieldName">Hodnota atributu HTML name</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>Získá nebo nastaví předponu pole HTML.</summary>
      <returns>Předpona pole HTML</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>Obsahuje počet objektů, které uživatel navštívil.</summary>
      <returns>Počet objektů</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>Určuje, zda uživatel navštívil šablonu.</summary>
      <returns>Hodnota true, pokud uživatel přešel na šablonu, jinak hodnota false.</returns>
      <param name="metadata">Objekt, který zapouzdřuje informace popisující model</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>Obsahuje metody pro vytvoření adres URL pro rozhraní ASP.NET MVC v rámci aplikace.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>Pomocí zadaného kontextu požadavku inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
      <param name="requestContext">Objekt, který obsahuje informace o aktuálním požadavku a trase, která mu odpovídala.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>Pomocí zadaného kontextu požadavku a kolekce tras inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
      <param name="requestContext">Objekt, který obsahuje informace o aktuálním požadavku a trase, která mu odpovídala.</param>
      <param name="routeCollection">Kolekce tras.</param>
      <exception cref="ArgumentNullException">Parametr <paramref name="requestContext" /> nebo <paramref name="routeCollection" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action">
      <summary>Generuje řetězec pro plně kvalifikovanou adresu URL pro metodu akce.</summary>
      <returns>Řetězec pro plně kvalifikovanou adresu URL pro metodu akce</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>Pro metodu akce vygeneruje pomocí zadaného názvu akce plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>Pro metodu akce vygeneruje pomocí zadaného názvu akce a hodnot trasy plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>Pro metodu akce vygeneruje pomocí zadaného názvu akce a názvu kontroleru plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>Pro metodu akce vygeneruje pomocí zadaného názvu akce, názvu kontroleru a hodnot trasy plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>Pro metodu akce vygeneruje pomocí zadaného názvu akce, názvu kontroleru, hodnot trasy a protokolu, který se použije, plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Pro metodu akce vygeneruje pomocí zadaného názvu akce, názvu kontroleru a hodnot trasy plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String)">
      <summary>Pro metodu akce vygeneruje pomocí zadaného názvu akce, názvu kontroleru, hodnot trasy a protokolu, který se použije, plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Pro metodu akce vygeneruje pomocí zadaného názvu akce, názvu kontroleru, hodnot trasy, protokolu, který se použije, a názvu hostitele plně kvalifikovanou URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Pro metodu akce vygeneruje plně kvalifikovanou adresu URL pro zadaný název akce a hodnoty trasy.</summary>
      <returns>Plně kvalifikovaná adresa URL pro metodu akce.</returns>
      <param name="actionName">Název metody akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>Převede virtuální (relativní) cestu na absolutní cestu aplikace.</summary>
      <returns>Absolutní cesta aplikace.</returns>
      <param name="contentPath">Virtuální cesta obsahu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>Kóduje zvláštní znaky v řetězci adresy URL do ekvivalentů entity znaků.</summary>
      <returns>Kódovaný řetězec adresy URL.</returns>
      <param name="url">Text určený ke kódování.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>Vrátí řetězec, který obsahuje adresu URL obsahu.</summary>
      <returns>Řetězec, který obsahuje adresu URL obsahu.</returns>
      <param name="contentPath">Cesta obsahu.</param>
      <param name="httpContext">Kontext HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Vrátí řetězec, který obsahuje adresu URL.</summary>
      <returns>Řetězec, který obsahuje adresu URL.</returns>
      <param name="routeName">Název trasy</param>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="protocol">Protokol HTTP.</param>
      <param name="hostName">Název hostitele.</param>
      <param name="fragment">Fragment.</param>
      <param name="routeValues">Hodnoty trasy</param>
      <param name="routeCollection">Kolekce tras</param>
      <param name="requestContext">Kontext požadavku</param>
      <param name="includeImplicitMvcValues">Hodnota true, chcete-li zahrnout implicitní hodnoty MVC, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Vrátí řetězec, který obsahuje adresu URL.</summary>
      <returns>Řetězec, který obsahuje adresu URL.</returns>
      <param name="routeName">Název trasy</param>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Hodnoty trasy</param>
      <param name="routeCollection">Kolekce tras</param>
      <param name="requestContext">Kontext požadavku</param>
      <param name="includeImplicitMvcValues">Hodnota true, chcete-li zahrnout implicitní hodnoty MVC, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Object)">
      <summary>Pro zadané hodnoty trasy generuje plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro zadané hodnoty trasy.</returns>
      <param name="routeName">Název trasy</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Pro zadané hodnoty trasy generuje plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL pro zadané hodnoty trasy.</returns>
      <param name="routeName">Název trasy</param>
      <param name="routeValues">Hodnoty trasy</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)">
      <summary>Vrátí hodnotu, která určuje, zda je daná adresa URL lokální.</summary>
      <returns>Hodnota true, je-li adresa URL lokální, jinak hodnota false.</returns>
      <param name="url">Adresa URL</param>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>Získá informaci o požadavku HTTP, který odpovídá definované trase.</summary>
      <returns>Kontext požadavku</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>Získá kolekci, která obsahuje trasy registrované pro danou aplikaci.</summary>
      <returns>Kolekce tras</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>Pro zadané hodnoty trasy generuje plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL.</returns>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>Pro zadaný název trasy generuje plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL.</returns>
      <param name="routeName">Název trasy, která se používá ke generování adresy URL</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>Pomocí názvu trasy generuje pro zadané hodnoty trasy plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL.</returns>
      <param name="routeName">Název trasy, která se používá ke generování adresy URL</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>Pomocí názvu trasy a protokolu, který se použije, generuje pro zadané hodnoty trasy plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL.</returns>
      <param name="routeName">Název trasy, která se používá ke generování adresy URL.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Pomocí názvu trasy generuje pro zadané hodnoty trasy plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL.</returns>
      <param name="routeName">Název trasy, která se používá ke generování adresy URL</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Pomocí názvu trasy, protokolu, který se použije, a názvu hostitele generuje pro zadané hodnoty trasy plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL.</returns>
      <param name="routeName">Název trasy, která se používá ke generování adresy URL</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Pro zadané hodnoty trasy generuje plně kvalifikovanou adresu URL.</summary>
      <returns>Plně kvalifikovaná adresa URL.</returns>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>Představuje volitelný parametr, který používá třída <see cref="T:System.Web.Mvc.MvcHandler" /> během trasování.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>Obsahuje hodnotu volitelného parametru určenou pouze ke čtení.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlParameter.ToString">
      <summary>Vrátí prázdný řetězec.Tato metoda podporuje rozhraní ASP.NET MVC a není zamýšlena k použití přímo z vašeho kódu.</summary>
      <returns>Prázdný řetězec.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>Poskytuje adaptér objektu, který lze ověřit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" />.</summary>
      <param name="metadata">Metadata modelu</param>
      <param name="context">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>Ověří zadaný objekt.</summary>
      <returns>Seznam výsledků ověření</returns>
      <param name="container">Kontejner</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>Představuje atribut, který se používá při ochraně před paděláním požadavku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Volá se v případě, že je požadována autorizace.</summary>
      <param name="filterContext">Kontext filtru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>Získá nebo nastaví řetězec salt.</summary>
      <returns>Řetězec salt</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>Představuje atribut, který slouží k označení akčních metod, jejichž vstup je třeba ověřit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValidateInputAttribute" />.</summary>
      <param name="enableValidation">Ověření povolíte nastavením hodnoty true.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>Získá nebo nastaví hodnotu určující, zda povolit ověření požadavku.</summary>
      <returns>Hodnota true, je-li ověření povoleno. V opačném případě hodnota false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Volá se v případě, že je požadována autorizace.</summary>
      <param name="filterContext">Kontext filtru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>Představuje kolekci objektů zprostředkovatelů hodnot pro aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValueProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValueProviderCollection" /> a zaregistruje zadané zprostředkovatele hodnot.</summary>
      <param name="list">Seznam zprostředkovatelů hodnot k registraci</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>Určuje, zda kolekce obsahuje zadanou předponu.</summary>
      <returns>Hodnota true, pokud kolekce obsahuje zadanou předponu, jinak hodnota false.</returns>
      <param name="prefix">Předpona, kterou chcete vyhledat.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetKeysFromPrefix(System.String)">
      <summary>Získá klíče pomocí zadané předpony.</summary>
      <returns>Klíče</returns>
      <param name="prefix">Předpona</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>Vrátí objekt hodnoty, který používá zadaný klíč.</summary>
      <returns>Objekt hodnoty pro zadaný klíč</returns>
      <param name="key">Klíč objektu hodnoty, který má být načten.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>Vrátí objekt hodnoty pomocí zadaného klíče a parametru pro přeskočení ověření.</summary>
      <returns>Objekt hodnoty pro zadaný klíč</returns>
      <param name="key">Klíč objektu hodnoty, který má být načten.</param>
      <param name="skipValidation">Hodnota true, pokud má být přeskočeno ověření, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Vloží zadaný objekt zprostředkovatele hodnot do kolekce na zadané umístění indexu.</summary>
      <param name="index">Umístění indexu založeného na nule, ve kterém se má vložit zprostředkovatel hodnot do kolekce</param>
      <param name="item">Objekt zprostředkovatele hodnot, který se má vložit</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Nahradí zprostředkovatele hodnot v zadaném umístění indexu novým zprostředkovatelem hodnot.</summary>
      <param name="index">Index elementu založený na nule, který se má nahradit</param>
      <param name="item">Nová hodnota pro element v zadaném indexu</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>Poznámka: Toto rozhraní API je nyní zastaralé.Představuje slovník zprostředkovatelů hodnot pro aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValueProviderDictionary" />.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Přidá určenou položku do kolekce zprostředkovatelů hodnot.</summary>
      <param name="item">Objekt, který chcete přidat k objektu <see cref="T:System.Collections.Generic.ICollection`1" /></param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.ICollection`1" /> je určen pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>Přidá element s určeným klíčem a hodnotou do kolekce zprostředkovatelů hodnot.</summary>
      <param name="key">Klíč elementu, který chcete přidat</param>
      <param name="value">Hodnota elementu, který chcete přidat</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> je určen pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Element s určeným klíčem již v objektu <see cref="T:System.Collections.Generic.IDictionary`2" /> existuje.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Přidá element s určeným klíčem a hodnotou do kolekce zprostředkovatelů hodnot.</summary>
      <param name="key">Klíč elementu, který chcete přidat</param>
      <param name="value">Hodnota elementu, který chcete přidat</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> je určen pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Element s určeným klíčem již v objektu <see cref="T:System.Collections.Generic.IDictionary`2" /> existuje.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>Odebere všechny položky z kolekce zprostředkovatelů hodnot.</summary>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.ICollection`1" /> je určen pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Určuje, zda kolekce zprostředkovatelů hodnot obsahuje zadanou položku.</summary>
      <returns>Hodnota true, pokud se položka <paramref name="item" /> nachází v kolekci zprostředkovatelů hodnot, jinak hodnota false.</returns>
      <param name="item">Objekt, který chcete nalézt v instanci třídy <see cref="T:System.Collections.Generic.ICollection`1" /></param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>Určuje, zda kolekce zprostředkovatelů hodnot obsahuje element se zadaným klíčem.</summary>
      <returns>Hodnota true, pokud kolekce zprostředkovatelů hodnot obsahuje element s klíčem, jinak hodnota false.</returns>
      <param name="key">Klíč elementu k vyhledání v instanci třídy <see cref="T:System.Collections.Generic.IDictionary`2" /></param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>Získá nebo nastaví kontext kontroleru.</summary>
      <returns>Kontext kontroleru.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>Zkopíruje elementy kolekce do pole, které začíná v zadané hodnotě indexu.</summary>
      <param name="array">Jednorozměrné pole, které je cílem elementů zkopírovaných z objektu <see cref="T:System.Collections.Generic.ICollection`1" />Pole musí mít indexování s nulovým základem.</param>
      <param name="arrayIndex">Index s nulovým základem v poli <paramref name="array" />, ve kterém začíná kopírování</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Pole <paramref name="arrayIndex" /> je menší než 0.</exception>
      <exception cref="T:System.ArgumentException">Pole <paramref name="array" /> je multidimenzionální.– nebo –Pole <paramref name="arrayIndex" /> se rovná nebo je větší než délka <paramref name="array" />.– nebo –Počet elementů ve zdrojové kolekci je větší než dostupné místo z <paramref name="arrayIndex" /> do konce cílového pole <paramref name="array" />.– nebo –Typ <paramref name="T" /> nelze automaticky přetypovat na typ cílového pole.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>Získá počet elementů v kolekci.</summary>
      <returns>Počet elementů v kolekci</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít pro iteraci prostřednictvím kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>Získá hodnotu, která určuje, zda je kolekce určena jen pro čtení.</summary>
      <returns>Hodnota true, pokud je kolekce určena jen pro čtení, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.ValueProviderResult" /> se zadaným klíčem.</summary>
      <returns>Objekt <see cref="T:System.Web.Mvc.ValueProviderResult" /></returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>Získá kolekci obsahující klíče instance <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Kolekce obsahující klíče objektu, který implementuje rozhraní <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Odebere první výskyt zadané položky z kolekce zprostředkovatelů hodnot.</summary>
      <returns>Hodnota true, pokud byla položka <paramref name="item" /> úspěšně odebrána z kolekce, jinak hodnota false.Tato metoda také vrátí hodnotu false, pokud položku <paramref name="item" /> nelze v kolekci nalézt.</returns>
      <param name="item">Objekt, který chcete odebrat z instance <see cref="T:System.Collections.Generic.ICollection`1" /></param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.ICollection`1" /> je určen pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>Odebere položku se zadaným klíčem z kolekce zprostředkovatelů hodnot.</summary>
      <returns>Hodnota true, pokud byl element úspěšně odebrán, jinak hodnota false.Tato metoda také vrátí hodnotu false, pokud klíč <paramref name="key" /> nelze v kolekci nalézt.</returns>
      <param name="key">Klíč elementu, který chcete odebrat</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> je určen pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít k iteraci v rámci kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Určuje, zda kolekce obsahuje zadanou předponu.</summary>
      <returns>Hodnota true, pokud kolekce obsahuje zadanou předponu, jinak hodnota false.</returns>
      <param name="prefix">Předpona, kterou chcete vyhledat.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Vrátí objekt hodnoty, který používá zadaný klíč.</summary>
      <returns>Objekt hodnoty pro zadaný klíč</returns>
      <param name="key">Klíč objektu hodnoty, který má být vrácen.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>Získá hodnotu elementu se zadaným klíčem.</summary>
      <returns>Hodnota true, pokud objekt, který implementuje entitu <see cref="T:System.Collections.Generic.IDictionary`2" />, obsahuje element se zadaným klíčem, jinak hodnota false.</returns>
      <param name="key">Klíč elementu, který chcete získat</param>
      <param name="value">Pokud je klíč nalezen, metoda vrátí hodnotu, která je přidružena k zadanému klíči, jinak je přidružena výchozí hodnota <paramref name="value" /> pro typ parametru.Tento parametr se předává neinicializovaný.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>Získá kolekci obsahující hodnoty v objektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Kolekce klíčů v objektu, který implementuje rozhraní <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>Představuje kontejner pro objekty factory zprostředkovatelů hodnot.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>Získá kolekci objektů factory zprostředkovatelů hodnot pro aplikaci.</summary>
      <returns>Kolekce objektů factory zprostředkovatelů hodnot.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>Představuje objekt pro vytváření objektů zprostředkovatele hodnoty.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí objekt zprostředkovatele hodnot pro zadaný kontext kontroleru.</summary>
      <returns>Objekt zprostředkovatele hodnoty</returns>
      <param name="controllerContext">Objekt, který zapouzdřuje informace o aktuální žádosti HTTP</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>Představuje kolekci objektů factory zprostředkovatelů hodnot pro aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> pomocí zadaného seznamu objektů factory zprostředkovatelů hodnot.</summary>
      <param name="list">Seznam objektů factory zprostředkovatelů hodnot, pomocí které se inicializuje kolekce.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.ClearItems">
      <summary>Odebere všechny elementy z kolekce.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí objekt factory zprostředkovatele hodnot pro zadaný kontext kontroleru.</summary>
      <returns>Objekt factory zprostředkovatele hodnot pro zadaný kontext kontroleru.</returns>
      <param name="controllerContext">Objekt, který zapouzdřuje informace o aktuální žádosti HTTP</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Vloží zadaný objekt factory zprostředkovatele hodnot na zadané umístění indexu.</summary>
      <param name="index">Umístění indexu založeného na nule, ve kterém se má vložit zprostředkovatel hodnot do kolekce</param>
      <param name="item">Objekt factory zprostředkovatele hodnot, který se má vložit</param>
      <exception cref="[ArgumentNullException]">Parametr <paramref name="item" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.RemoveItem(System.Int32)">
      <summary>Odebere element na pozici <see cref="T:System.Collections.ObjectModel.Collection`1" /> se zadaným indexem.</summary>
      <param name="index">Index elementu (počítáno od nuly), který se má odebrat</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Hodnota <paramref name="Index" /> je menší než nula.– nebo –<paramref name="Index" /> se rovná nebo je větší než  <see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Nastaví zadaný objekt factory zprostředkovatele hodnot na zadaném umístění indexu.</summary>
      <param name="index">Umístění indexu založeného na nule, ve kterém se má vložit zprostředkovatel hodnot do kolekce</param>
      <param name="item">Objekt factory zprostředkovatele hodnot, který se má nastavit.</param>
      <exception cref="[ArgumentNullException]">Parametr <paramref name="item" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>Představuje výsledek vazby hodnoty (například z vystavení formuláře nebo řetězce dotazu) k vlastnosti argumentu metody akce nebo k argumentu samotnému.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ValueProviderResult" /> pomocí zadané nezpracované hodnoty, pokusné hodnoty a informací o jazykové verzi.</summary>
      <param name="rawValue">Nezpracovaná hodnota</param>
      <param name="attemptedValue">Pokusná hodnota</param>
      <param name="culture">Jazyková verze</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>Získá nebo nastaví nezpracovanou hodnotu, která je převedena na řetězec k zobrazení.</summary>
      <returns>Nezpracovaná hodnota</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Převede hodnotu zapouzdřenou tímto výsledkem na zadaný typ.</summary>
      <returns>Převedená hodnota</returns>
      <param name="type">Cílový typ</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="type" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Převede hodnotu zapouzdřenou tímto výsledkem na zadaný typ pomocí zadaných informací o jazykové verzi.</summary>
      <returns>Převedená hodnota</returns>
      <param name="type">Cílový typ</param>
      <param name="culture">Jazyková verze, která se má použít v převodu.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="type" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>Získá nebo nastaví jazykovou verzi.</summary>
      <returns>Jazyková verze</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>Získá nebo nastaví nezpracovanou hodnotu zadanou zprostředkovatelem hodnoty.</summary>
      <returns>Nezpracovaná hodnota</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>Zapouzdří informaci související s vykreslením zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewContext" /> pomocí zadaného kontextu kontroleru, zobrazení, slovníku dat zobrazení, slovníku dočasných dat a zapisovače textu.</summary>
      <param name="controllerContext">Zapouzdří informace o požadavku HTTP.</param>
      <param name="view">Zobrazení, které se má vykreslit.</param>
      <param name="viewData">Slovník, který obsahuje data požadovaná k vykreslení zobrazení.</param>
      <param name="tempData">Slovník obsahující dočasná data pro zobrazení</param>
      <param name="writer">Objekt zapisovače textu, který se používá k zápisu výstupu protokolu HTML.</param>
      <exception cref="T:System.ArgumentNullException">Jeden z parametrů má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>Získá nebo nastaví hodnotu určující, zda je povoleno ověřování na straně klienta.</summary>
      <returns>Hodnota true, je-li ověřování na straně klienta povoleno. V opačném případě hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>Získá nebo nastaví objekt, který zapouzdří informace požadované pro ověření a zpracování vstupních dat z formuláře HTML.</summary>
      <returns>Objekt, který zapouzdří informace požadované pro ověření a zpracování vstupních dat z formuláře HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>Zapíše informace o ověření klienta do odpovědi HTTP.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>Získá data přidružená k požadavku a dostupná pouze pro jeden požadavek.</summary>
      <returns>Dočasná data</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled">
      <summary>Získá nebo nastaví hodnotu určující, zda je povolen nerušivý JavaScript.</summary>
      <returns>Hodnota true, je-li nerušivý JavaScript povolen, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationMessageElement">
      <summary>Název elementu, který slouží k zabalení zprávy na nejvyšší úrovni vygenerované metodou <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> a dalšími přetíženími.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationSummaryMessageElement">
      <summary>Název elementu, který slouží k zabalení zprávy na nejvyšší úrovni vygenerované metodou <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> a dalšími přetíženími.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>Získá objekt, který implementuje rozhraní <see cref="T:System.Web.Mvc.IView" /> k vykreslení v prohlížeči.</summary>
      <returns>Zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewBag">
      <summary>Získá slovník dat dynamického zobrazení.</summary>
      <returns>Slovník dat dynamického zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>Získá data zobrazení předaná do zobrazení.</summary>
      <returns>Data zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>Získá nebo nastaví objekt zapisovače textu, který se používá k zápisu výstupu protokolu HTML.</summary>
      <returns>Objekt, který slouží k zápisu výstupu protokolu HTML.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>Představuje kontejner, který slouží k předávání dat mezi kontrolerem a zobrazením.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewDataDictionary" /> pomocí zadaného modelu.</summary>
      <param name="model">Model</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewDataDictionary" /> pomocí zadaného slovníku.</summary>
      <param name="dictionary">Slovník</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Přidá zadanou položku do kolekce.</summary>
      <param name="item">Objekt, který má být přidán do kolekce.</param>
      <exception cref="T:System.NotSupportedException">Kolekce je určena pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>Přidá element do kolekce pomocí zadaného klíče a hodnoty.</summary>
      <param name="key">Klíč elementu, který chcete přidat</param>
      <param name="value">Hodnota elementu, který chcete přidat</param>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> je určen pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">V objektu <see cref="T:System.Collections.Generic.IDictionary`2" /> již existuje element se stejným klíčem.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>Odebere všechny položky z kolekce.</summary>
      <exception cref="T:System.NotSupportedException">Objekt <see cref="T:System.Collections.Generic.ICollection`1" /> je určen pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Určuje, zda kolekce obsahuje zadanou položku.</summary>
      <returns>Hodnota true, pokud se <paramref name="item" /> nachází v kolekci, jinak hodnota false.</returns>
      <param name="item">Objekt, který má být v kolekci vyhledán.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>Určuje, zda kolekce obsahuje element se zadaným klíčem.</summary>
      <returns>Hodnota true, pokud kolekce obsahuje element se zadaným klíčem, jinak hodnota. false.</returns>
      <param name="key">Klíč elementu, který má být v kolekci vyhledán.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Zkopíruje elementy kolekce do pole, počínaje konkrétním indexem.</summary>
      <param name="array">Jednorozměrné pole, které je cílem elementů zkopírovaných z kolekce.Pole musí mít indexování s nulovým základem.</param>
      <param name="arrayIndex">Index založený na nule v poli <paramref name="array" />, ve kterém kopírování začíná.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Pole <paramref name="arrayIndex" /> je menší než 0.</exception>
      <exception cref="T:System.ArgumentException">Pole <paramref name="array" /> je multidimenzionální.– nebo – Pole <paramref name="arrayIndex" /> se rovná nebo je větší než délka <paramref name="array" />.– nebo – Počet elementů ve zdrojové kolekci je větší než dostupné místo z <paramref name="arrayIndex" /> do konce cílového pole <paramref name="array" />.– nebo – Typ <paramref name="T" /> nelze automaticky přetypovat na typ cílového pole <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>Získá počet elementů v kolekci.</summary>
      <returns>Počet elementů v kolekci</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>Vyhodnotí zadaný výraz</summary>
      <returns>Výsledky vyhodnocení</returns>
      <param name="expression">Výraz</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>Vyhodnotí zadaný výraz pomocí zadaného formátu.</summary>
      <returns>Výsledky vyhodnocení</returns>
      <param name="expression">Výraz</param>
      <param name="format">Formát</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít pro iteraci prostřednictvím kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>Vrátí informace o datech zobrazení na základě definice v parametru <paramref name="expression" />.</summary>
      <returns>Objekt obsahující informace o datech zobrazení definované parametrem <paramref name="expression" /></returns>
      <param name="expression">Sada párů klíč/hodnota, která určuje informace o datech zobrazení, které budou vráceny</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> má buď hodnotu null, nebo je prázdný.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>Získá hodnotu, která určuje, zda je kolekce určena jen pro čtení.</summary>
      <returns>Hodnota true, pokud je kolekce určena jen pro čtení, jinak hodnota false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>Získá či nastaví položku přidruženou k zadanému klíči.</summary>
      <returns>Hodnota vybrané položky</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>Získá kolekci obsahující klíče tohoto slovníku.</summary>
      <returns>Kolekce obsahující klíče objektu, který implementuje <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>Získá či nastaví model přidružený k datům zobrazení.</summary>
      <returns>Model přidružený k datům zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>Získá či nastaví informace o modelu.</summary>
      <returns>Informace o modelu</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>Získá stav modelu.</summary>
      <returns>Stav modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Odebere první výskyt zadaného objektu z kolekce.</summary>
      <returns>Hodnota true, pokud byla položka <paramref name="item" /> úspěšně odebrána z kolekce, jinak hodnota false.Tato metoda také vrátí hodnotu false, pokud položku <paramref name="item" /> nelze v kolekci nalézt.</returns>
      <param name="item">Objekt, který bude odebrán z kolekce.</param>
      <exception cref="T:System.NotSupportedException">Kolekce je určena pouze pro čtení.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>Odebere element z kolekce pomocí zadaného klíče.</summary>
      <returns>Hodnota true, pokud byl element úspěšně odebrán, jinak hodnota false.Tato metoda také vrátí hodnotu false, pokud <paramref name="key" /> nelze v původní kolekci nalézt.</returns>
      <param name="key">Klíč elementu, který chcete odebrat</param>
      <exception cref="T:System.NotSupportedException">Kolekce je určena pouze pro čtení.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>Nastaví datový model, který bude používán pro zobrazení.</summary>
      <param name="value">Datový model, který bude používán pro zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Vrátí enumerátor, který lze použít pro iteraci prostřednictvím kolekce.</summary>
      <returns>Enumerátor, který lze použít pro iteraci prostřednictvím kolekce</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>Získá či nastaví objekt, který zapouzdří informace o kontextu aktuální šablony.</summary>
      <returns>Objekt, který obsahuje informace o aktuální šabloně</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Pokusí se načíst hodnotu přidruženou k zadanému klíči.</summary>
      <returns>Hodnota true, pokud kolekce obsahuje element se zadaným klíčem, jinak hodnota false.</returns>
      <param name="key">Klíč hodnoty, kterou chcete získat</param>
      <param name="value">Pokud je klíč nalezen, metoda vrátí hodnotu, která je přidružena k zadanému klíči, jinak je přidružena výchozí hodnota <paramref name="value" /> pro typ parametru.Tento parametr se předává neinicializovaný.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>Získá kolekci obsahující hodnoty tohoto slovníku.</summary>
      <returns>Kolekce obsahující hodnoty objektu, který implementuje <see cref="T:System.Collections.Generic.IDictionary`2" /></returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>Představuje kontejner sloužící k předávání dat silného typu mezi kontrolerem a zobrazením.</summary>
      <typeparam name="TModel">Typ modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> pomocí zadaného slovníku dat zobrazení.</summary>
      <param name="viewDataDictionary">Existující slovník dat zobrazení, který bude zkopírován do této instance</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> pomocí zadaného modelu.</summary>
      <param name="model">Datový model, který bude používán pro zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>Získá nebo nastaví model.</summary>
      <returns>Odkaz na datový model.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>Získá či nastaví informace o modelu.</summary>
      <returns>Informace o modelu</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>Nastaví datový model, který bude používán pro zobrazení.</summary>
      <param name="value">Datový model, který bude používán pro zobrazení</param>
      <exception cref="T:System.InvalidOperationException">Při nastavování modelu došlo k chybě</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>Zapouzdří informace o aktuálním obsahu šablony použité k vývoji šablony a o pomocných rutinách HTML, které pracují se šablonami.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewDataInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func{System.Object})">
      <summary>Inicializuje novou instanci třídy T:System.Web.Mvc.ViewDataInfo a přidruží delegáta pro přístup k informacím o datech zobrazení.</summary>
      <param name="valueAccessor">Delegát, který definuje přístup k informacím o datech zobrazení.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>Získá nebo nastaví objekt obsahující hodnoty, které mají být šablonou zobrazeny.</summary>
      <returns>Objekt obsahující hodnoty, které mají být šablonou zobrazeny</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>Získá nebo nastaví popis vlastnosti, která má být šablonou zobrazena.</summary>
      <returns>Popis vlastnosti, která má být šablonou zobrazena</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>Získá nebo nastaví aktuální hodnotu, která má být šablonou zobrazena.</summary>
      <returns>Aktuální hodnota, která má být šablonou zobrazena</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>Představuje kolekci pro moduly zobrazení, které jsou pro aplikaci k dispozici.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewEngineCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewEngineCollection" /> pomocí zadaného seznamu modulů zobrazení.</summary>
      <param name="list">Seznam zabalený novou kolekcí</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="list" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.ClearItems">
      <summary>Odebere všechny elementy z kolekce <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Vyhledá určené dílčí zobrazení pomocí zadaného kontextu kontroleru.</summary>
      <returns>Dílčí zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="partialViewName">Název částečného zobrazení</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="partialViewName" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Vyhledá určené zobrazení pomocí zadaného kontextu kontroleru a předlohy.</summary>
      <returns>Zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewName">Název zobrazení</param>
      <param name="masterName">Název předlohy</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="partialViewName" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Vloží do kolekce element v zadaném indexu.</summary>
      <param name="index">Index založený na nule, do kterého se má položka vložit.</param>
      <param name="item">Objekt, který se má vložit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Hodnota <paramref name="index" /> je menší než nula.– nebo –Hodnota <paramref name="index" /> je větší než počet položek v kolekci.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.RemoveItem(System.Int32)">
      <summary>Odebere element na pozici <see cref="T:System.Collections.ObjectModel.Collection`1" /> se zadaným indexem.</summary>
      <param name="index">Index elementu (počítáno od nuly), který se má odebrat</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Hodnota <paramref name="index" /> je menší než nula.– nebo –<paramref name="index" /> se rovná nebo je větší než  <see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Nahradí element v zadaném indexu.</summary>
      <param name="index">Index elementu založený na nule, který se má nahradit</param>
      <param name="item">Nová hodnota pro element v zadaném indexu</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Hodnota <paramref name="index" /> je menší než nula.– nebo –Hodnota <paramref name="index" /> je větší než počet položek v kolekci.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>Představuje výsledek hledání modulu zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewEngineResult" /> pomocí zadaných vyhledávaných umístění.</summary>
      <param name="searchedLocations">Vyhledávaná umístění</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="searchedLocations" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewEngineResult" /> pomocí zadaného zobrazení a modulu zobrazení.</summary>
      <param name="view">Zobrazení</param>
      <param name="viewEngine">Modul zobrazení</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="view " /> nebo <paramref name="viewEngine" /> má hodnotu null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>Získá nebo nastaví vyhledávaná umístění.</summary>
      <returns>Vyhledávaná umístění</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>Získá nebo nastaví zobrazení.</summary>
      <returns>Zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>Získá nebo nastaví modul zobrazení.</summary>
      <returns>Modul zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>Představuje kolekci pro moduly zobrazení, které jsou pro aplikaci k dispozici.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>Získá moduly zobrazení.</summary>
      <returns>Moduly zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>Představuje informace potřebné k vytvoření zobrazení stránky předlohy.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewMasterPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>Získá skript AJAX stránky předlohy.</summary>
      <returns>Skript AJAX stránky předlohy</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>Získá kód HTML stránky předlohy.</summary>
      <returns>Kód HTML stránky předlohy</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>Získá model.</summary>
      <returns>Model</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>Získá dočasná data.</summary>
      <returns>Dočasná data</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>Získá adresu URL.</summary>
      <returns>Adresa URL</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewBag">
      <summary>Získá slovník dynamického kontejneru zobrazení.</summary>
      <returns>Slovník dynamického kontejneru zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>Získá kontext zobrazení.</summary>
      <returns>Kontext zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>Získá data zobrazení.</summary>
      <returns>Data zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>Získá zapisovač použitý k vykreslení stránky předlohy.</summary>
      <returns>Zapisovač použitý k vykreslení stránky předlohy</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>Představuje informace potřebné k vytvoření stránky hlavního zobrazení silného typu.</summary>
      <typeparam name="TModel">Typ modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewMasterPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>Získá skript AJAX stránky předlohy.</summary>
      <returns>Skript AJAX stránky předlohy</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>Získá kód HTML stránky předlohy.</summary>
      <returns>Kód HTML stránky předlohy</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>Získá model.</summary>
      <returns>Odkaz na datový model.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>Získá data zobrazení.</summary>
      <returns>Data zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>Představuje vlastnosti a metody, které jsou potřebné pro vykreslení zobrazení jako stránky s webovými formuláři.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.AjaxHelper" />, který se použije k vykreslení HTML ve scénářích AJAX.</summary>
      <returns>Pomocný objekt AJAX přidružený k zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.HtmlHelper" />, který se použije k vykreslení elementů HTML.</summary>
      <returns>Pomocný objekt HTML přidružený k zobrazení</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>Inicializuje vlastnosti <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> a <see cref="P:System.Web.Mvc.ViewPage.Url" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>Získá nebo nastaví cestu zobrazení předlohy.</summary>
      <returns>Cesta zobrazení předlohy</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>Získá vlastnost modelu přidruženého objektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Vlastnost modelu přidruženého objektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>Na začátku inicializace stránky vyvolá událost <see cref="E:System.Web.UI.Page.PreInit" />.</summary>
      <param name="e">Data události</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>Umožní zpracování zadaného požadavku HTTP pomocí rozhraní ASP.NET MVC.</summary>
      <param name="context">Objekt, který zapouzdřuje HTTP informace o aktuálním požadavku HTTP</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Inicializuje objekt <see cref="T:System.Web.UI.HtmlTextWriter" />, který přijme obsah stránky k vykreslení.</summary>
      <param name="writer">Objekt, který přijme obsah stránky</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Pomocí zadaného kontextu zobrazení vykreslí stránku zobrazení do odpovědi.</summary>
      <param name="viewContext">Objekt, který zapouzdřuje informace požadované pro vykreslení zobrazení zahrnující kontext kontroleru, kontext formuláře, dočasná data a data zobrazení přidruženého zobrazení.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>Poznámka: Toto rozhraní API je nyní zastaralé.Nastaví zapisovač textu, který se použije k vykreslení zobrazení do odpovědi.</summary>
      <param name="textWriter">Zapisovač textu, který se použije k vykreslení zobrazení do odpovědi</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Nastaví slovník dat zobrazení pro přidružené zobrazení.</summary>
      <param name="viewData">Slovník dat, která mají být předána do zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>Získá dočasná data, která mají být předána do zobrazení.</summary>
      <returns>Dočasná data, která mají být předána do zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>Získá nebo nastaví adresu URL vykreslené stránky.</summary>
      <returns>Adresa URL vykreslené stránky</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewBag">
      <summary>Získá kontejner zobrazení.</summary>
      <returns>Kontejner zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>Získá nebo nastaví informace, které se použijí k vykreslení zobrazení.</summary>
      <returns>Informace, které se použijí k vykreslení zobrazení zahrnující kontext formuláře, dočasná data a data zobrazení přidruženého zobrazení.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>Získá nebo nastaví slovník obsahující data, která se předají mezi kontrolerem a zobrazením.</summary>
      <returns>Slovník obsahující data, která se předají mezi kontrolerem a zobrazením</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>Získá zapisovač textu, který se použije k vykreslení zobrazení do odpovědi.</summary>
      <returns>Zapisovač textu, který se použije k vykreslení zobrazení do odpovědi</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>Představuje informace potřebné k vykreslení zobrazení silného typu, například stránky s webovými formuláři.</summary>
      <typeparam name="TModel">Typ modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.AjaxHelper`1" />, který podporuje vykreslení HTML ve scénářích AJAX.</summary>
      <returns>Pomocný objekt AJAX přidružený k zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>Získá nebo nastaví objekty <see cref="T:System.Web.Mvc.HtmlHelper" />, které poskytují podporu elementům vykreslování.</summary>
      <returns>Pomocný objekt HTML přidružený k zobrazení</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>Vytvoří instance a provede inicializaci vlastností <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> a <see cref="P:System.Web.Mvc.ViewPage`1.Html" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>Získá vlastnost <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> přidruženého objektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
      <returns>Odkaz na datový model.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Nastaví slovník dat zobrazení pro přidružené zobrazení.</summary>
      <param name="viewData">Slovník dat, která mají být předána do zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>Získá nebo nastaví slovník obsahující data, která se předají mezi kontrolerem a zobrazením.</summary>
      <returns>Slovník obsahující data, která se předají mezi kontrolerem a zobrazením</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>Představuje třídu použitou pro vykreslení zobrazení pomocí instance <see cref="T:System.Web.Mvc.IView" />, která je vrácena objektem <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Prohledává registrované moduly zobrazení a vrací objekt, který slouží k vykreslení zobrazení.</summary>
      <returns>Objekt, který slouží k vykreslení zobrazení</returns>
      <param name="context">Kontext kontroleru.</param>
      <exception cref="T:System.InvalidOperationException">Zatímco metoda vyhledávala zobrazení, došlo k chybě.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>Získá název předlohy (například stránky předlohy nebo šablony), která se použije při vykreslení zobrazení.</summary>
      <returns>Název předlohy</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>Představuje základní třídu používanou k poskytnutí modelu pro zobrazení a následnému vykreslení zobrazení v odpovědi.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewResultBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Když je volána původcem volání akce, vykreslí zobrazení v odpovědi.</summary>
      <param name="context">Kontext, ve kterém je výsledek spuštěn.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí objekt <see cref="T:System.Web.Mvc.ViewEngineResult" />, který slouží k vykreslení zobrazení.</summary>
      <returns>Modul zobrazení</returns>
      <param name="context">Kontext</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.Model">
      <summary>Získá model dat zobrazení.</summary>
      <returns>Model dat zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.TempDataDictionary" /> pro tento výsledek.</summary>
      <returns>Dočasná data</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.IView" />, který je vykreslen v odpovědi.</summary>
      <returns>Zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewBag">
      <summary>Získá kontejner zobrazení.</summary>
      <returns>Kontejner zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>Získá nebo nastaví objekt dat zobrazení <see cref="T:System.Web.Mvc.ViewDataDictionary" /> pro tento výsledek.</summary>
      <returns>Data zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>Získá nebo nastaví kolekci modulů zobrazení přidružených k výsledku.</summary>
      <returns>Kolekce modulů zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>Získá nebo nastaví název zobrazení k vykreslení.</summary>
      <returns>Název zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>Poskytuje abstraktní třídu, kterou lze použít k implementaci úvodní stránky zobrazení (stránka předlohy).</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>Pokud je implementována do odvozené třídy, inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewStartPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>Při implementaci do odvozené třídy získá kód HTML pro úvodní stránku zobrazení.</summary>
      <returns>Kód HTML pro úvodní stránku zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>Při implementaci do odvozené třídy získá adresu URL pro úvodní stránku zobrazení.</summary>
      <returns>Adresa URL pro úvodní stránku zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>Při implementaci do odvozené třídy získá kontext zobrazení pro úvodní stránku zobrazení.</summary>
      <returns>Kontext zobrazení pro úvodní stránku zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>Poskytuje kontejner pro objekty <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewTemplateUserControl" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>Poskytuje kontejner pro objekty <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
      <typeparam name="TModel">Typ modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>Získá formátovanou hodnotu.</summary>
      <returns>Formátovaná hodnota.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>Představuje typ zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewType" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>Získá nebo nastaví název typu.</summary>
      <returns>Název typu</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>Představuje informace potřebné k vytvoření uživatelského ovládacího prvku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewUserControl" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>Získá skript AJAX zobrazení.</summary>
      <returns>Skript AJAX zobrazení</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>Zajišťuje, že jsou data zobrazení, pokud existují, přidána do objektu. <see cref="T:System.Web.Mvc.ViewDataDictionary" /> uživatelského ovládacího prvku.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>Získá kód HTML zobrazení.</summary>
      <returns>Kód HTML zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>Získá model.</summary>
      <returns>Model</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Vykreslí zobrazení pomocí zadaného kontextu zobrazení.</summary>
      <param name="viewContext">Kontext zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>Nastaví zapisovač textu, který se použije k vykreslení zobrazení do odpovědi.</summary>
      <param name="textWriter">Zapisovač textu, který se použije k vykreslení zobrazení do odpovědi</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Nastaví slovník dat zobrazení pomocí zadaných dat zobrazení.</summary>
      <param name="viewData">Data zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>Získá slovník dočasných dat.</summary>
      <returns>Slovník dočasných dat</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>Získá adresu URL zobrazení.</summary>
      <returns>Adresa URL zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewBag">
      <summary>Získá kontejner zobrazení.</summary>
      <returns>Kontejner zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>Získá nebo nastaví kontext zobrazení.</summary>
      <returns>Kontext zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>Získá nebo nastaví slovník dat zobrazení.</summary>
      <returns>Slovník dat zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>Získá nebo nastaví klíč dat zobrazení.</summary>
      <returns>Klíč dat zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>Získá zapisovač textu, který se použije k vykreslení zobrazení do odpovědi.</summary>
      <returns>Zapisovač textu, který se použije k vykreslení zobrazení do odpovědi</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>Představuje informace potřebné k vytvoření ovládacího prvku silného typu.</summary>
      <typeparam name="TModel">Typ modelu</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.ViewUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>Získá skript AJAX zobrazení.</summary>
      <returns>Skript AJAX zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>Získá kód HTML zobrazení.</summary>
      <returns>Kód HTML zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>Získá model.</summary>
      <returns>Odkaz na datový model.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Nastaví data zobrazení pro zobrazení.</summary>
      <param name="viewData">Data zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>Získá nebo nastaví data zobrazení.</summary>
      <returns>Data zobrazení</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>Představuje implementaci abstraktní základní třídy rozhraní <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>Získá nebo nastaví formáty oblastního hlavního umístění.</summary>
      <returns>Formáty oblastního hlavního umístění</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>Získá nebo nastaví formáty oblastního umístění částečného zobrazení.</summary>
      <returns>Formáty oblastního umístění částečného zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>Získá nebo nastaví formáty oblastního umístění zobrazení.</summary>
      <returns>Formáty oblastního umístění zobrazení</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Vytvoří zadané dílčí zobrazení pomocí zadaného kontextu kontroleru.</summary>
      <returns>Odkaz na částečné zobrazení.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="partialPath">Částečná cesta pro nové částečné zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Vytvoří zadané zobrazení pomocí kontextu kontroleru, cesty zobrazení a cesty předlohy.</summary>
      <returns>Odkaz na zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení</param>
      <param name="masterPath">Cesta zobrazení předlohy</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.DisplayModeProvider">
      <summary>Získá nebo nastaví zprostředkovatele režimu zobrazení.</summary>
      <returns>Zprostředkovatel režimu zobrazení</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Vrátí hodnotu určující, zda se soubor nachází v zadané cestě, pomocí zadaného kontextu kontroleru.</summary>
      <returns>Hodnota true, pokud se soubor nachází v zadané cestě, jinak hodnota false.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="virtualPath">Virtuální cesta</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>Získá nebo nastaví přípony názvu souborů, které se používají pro vyhledání zobrazení.</summary>
      <returns>Přípony názvu souborů, které se používají pro vyhledání zobrazení.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Vyhledá určené dílčí zobrazení pomocí zadaného kontextu kontroleru.</summary>
      <returns>Dílčí zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="partialViewName">Název částečného zobrazení</param>
      <param name="useCache">Hodnota true, chcete-li použít částečné zobrazení uložené v mezipaměti.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null (nothing v jazyce Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="partialViewName" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Vyhledá zadané zobrazení pomocí zadaného kontextu kontroleru a názvu předlohy.</summary>
      <returns>Zobrazení stránky</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewName">Název zobrazení</param>
      <param name="masterName">Název předlohy</param>
      <param name="useCache">Hodnota true, chcete-li použít zobrazení uložené v mezipaměti.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> má hodnotu null (nothing v jazyce Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="viewName" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>Získá nebo nastaví formáty hlavního umístění.</summary>
      <returns>Formáty hlavního umístění</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>Získá nebo nastaví formáty umístění částečného zobrazení.</summary>
      <returns>Formáty umístění částečného zobrazení</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Uvolní určené zobrazení pomocí zadaného kontextu kontroleru.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="view">Zobrazení, které se má uvolnit</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>Získá nebo nastaví mezipaměť umístění zobrazení.</summary>
      <returns>Mezipaměť umístění zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>Získá nebo nastaví formáty umístění zobrazení.</summary>
      <returns>Formáty umístění zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>Získá nebo nastaví zprostředkovatele virtuální cesty.</summary>
      <returns>Zprostředkovatel virtuální cesty</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>Představuje informace, které jsou nutné pro vytvoření stránky s webovými formuláři v aplikaci MVC rozhraní ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.WebFormView" /> pomocí kontextu kontroleru a cesty zobrazení.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.WebFormView" /> pomocí kontextu kontroleru, cesty zobrazení a cesty k hlavní stránce.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení</param>
      <param name="masterPath">Cesta k hlavní stránce</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.WebFormView" /> pomocí kontextu kontroleru, cesty zobrazení, cesty k hlavní stránce a instance <see cref="T:System.Web.Mvc.IViewPageActivator" />.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení</param>
      <param name="masterPath">Cesta k hlavní stránce</param>
      <param name="viewPageActivator">Instance stránky zobrazení rozhraní aktivátoru</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>Získá nebo nastaví hlavní cestu.</summary>
      <returns>Hlavní cesta</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Vykreslí zobrazení na odpověď.</summary>
      <param name="viewContext">Objekt, který zapouzdřuje informace požadované pro vykreslení zobrazení zahrnující kontext kontroleru, kontext formuláře, dočasná data a data zobrazení přidruženého zobrazení.</param>
      <param name="writer">Objekt zapisovače textu, který se používá k zápisu výstupu protokolu HTML.</param>
      <param name="instance">Instance stránky zobrazení</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Představuje modul zobrazení použitý k vykreslení stránky s webovými formuláři do odpovědi.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.WebFormViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.WebFormViewEngine" /> pomocí zadaného aktivátoru stránky zobrazení.</summary>
      <param name="viewPageActivator">Instance třídy, která implementuje rozhraní <see cref="T:System.Web.Mvc.IViewPageActivator" /></param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Vytvoří zadané dílčí zobrazení pomocí zadaného kontextu kontroleru.</summary>
      <returns>Dílčí zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="partialPath">Dílčí cesta</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Vytvoří zadané zobrazení pomocí zadaného kontextu kontroleru a cest zobrazení a hlavního zobrazení.</summary>
      <returns>Zobrazení</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="viewPath">Cesta zobrazení</param>
      <param name="masterPath">Cesta hlavního zobrazení</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>Představuje vlastnosti a metody potřebné k vykreslení zobrazení, které používá syntaxi ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.WebViewPage" />. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.AjaxHelper" />, který slouží k vykreslení HTML pomocí rozhraní Ajax. </summary>
      <returns>Objekt <see cref="T:System.Web.Mvc.AjaxHelper" />, který slouží k vykreslení HTML pomocí rozhraní Ajax</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Nastaví kontext zobrazení a data zobrazení pro stránku.</summary>
      <param name="parentPage">Nadřazená stránka</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>Získá objekt <see cref="T:System.Web.HttpContext" /> přidružený ke stránce.</summary>
      <returns>Objekt <see cref="T:System.Web.HttpContext" /> přidružený ke stránce.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>Spustí hierarchii stránek pro spouštěcí kanál ASP.NET Razor.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.HtmlHelper" />, který se použije k vykreslení elementů HTML.</summary>
      <returns>Objekt <see cref="T:System.Web.Mvc.HtmlHelper" />, který slouží k vykreslení elementů HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>Inicializuje třídy <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> a <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>Získá vlastnost modelu přidruženého objektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Vlastnost modelu přidruženého objektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Nastaví data zobrazení.</summary>
      <param name="viewData">Data zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>Získá dočasná data, která mají být předána do zobrazení.</summary>
      <returns>Dočasná data, která mají být předána do zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>Získá nebo nastaví adresu URL vykreslené stránky.</summary>
      <returns>Adresa URL vykreslené stránky</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewBag">
      <summary>Získá kontejner zobrazení.</summary>
      <returns>Kontejner zobrazení</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>Získá nebo nastaví informace, které se použijí k vykreslení zobrazení.</summary>
      <returns>Informace, které se použijí k vykreslení zobrazení zahrnující kontext formuláře, dočasná data a data zobrazení přidruženého zobrazení.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>Získá nebo nastaví slovník obsahující data, která se předají mezi kontrolerem a zobrazením.</summary>
      <returns>Slovník obsahující data, která se předají mezi kontrolerem a zobrazením</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>Představuje vlastnosti a metody potřebné k vykreslení zobrazení, které používá syntaxi ASP.NET Razor.</summary>
      <typeparam name="TModel">Typ modelu dat zobrazení.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.WebViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.AjaxHelper" />, který slouží k vykreslení kódu HTML pomocí rozhraní Ajax.</summary>
      <returns>Objekt <see cref="T:System.Web.Mvc.AjaxHelper" />, který slouží k vykreslení kódu HTML pomocí rozhraní Ajax</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>Získá nebo nastaví objekt <see cref="T:System.Web.Mvc.HtmlHelper" />, který se použije k vykreslení elementů HTML.</summary>
      <returns>Objekt <see cref="T:System.Web.Mvc.HtmlHelper" />, který slouží k vykreslení elementů HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>Inicializuje třídy <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> a <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>Získá vlastnost modelu přidruženého objektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Vlastnost modelu přidruženého objektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Nastaví data zobrazení.</summary>
      <param name="viewData">Data zobrazení</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>Získá nebo nastaví slovník obsahující data, která se předají mezi kontrolerem a zobrazením.</summary>
      <returns>Slovník obsahující data, která se předají mezi kontrolerem a zobrazením</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>Představuje podporu pro rozhraní ASP.NET AJAX v aplikaci ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
      <param name="fragment">Název fragmentu adresy URL (název anchor).</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
      <param name="fragment">Název fragmentu adresy URL (název anchor).</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor, který obsahuje adresu URL zadané metody akce. Po kliknutí na odkaz akce se asynchronně vyvolá metoda akce pomocí jazyka JavaScript.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název metody akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;. </summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="actionName">Název metody akce, která požadavek zpracuje.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Pomocí zadané informace trasování zapíše do odpovědi počáteční značku. &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Pomocí zadané informace trasování zapíše do odpovědi počáteční značku. &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Pomocí zadané informace trasování zapíše do odpovědi počáteční značku. &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Pomocí zadané informace trasování zapíše do odpovědi počáteční značku. &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Pomocí zadané informace trasování zapíše do odpovědi počáteční značku. &lt;form&gt;.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>Vrátí element HTML script, který obsahuje odkaz na skript globalization definující informace o jazykové verzi.</summary>
      <returns>Element script, jehož atribut src je nastaven na skript globalization, jako v následujícím příkladě: &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Pomocný objekt AJAX, který tato metoda rozšiřuje.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>Vrátí element HTML script, který obsahuje odkaz na skript globalization definující zadané informace o jazykové verzi.</summary>
      <returns>Element  skriptu HTML, jehož atribut src je nastaven na skript globalization, jako v následujícím příkladě:&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Pomocný objekt AJAX, který tato metoda rozšiřuje.</param>
      <param name="cultureInfo">Zapouzdří informace o cílové jazykové verzi, například formáty dat.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="cultureInfo" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
      <param name="fragment">Název fragmentu adresy URL (název anchor).</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor, který obsahuje virtuální cestu zadaných hodnot trasy. Po kliknutí na odkaz se pomocí jazyka JavaScript vytvoří asynchronní požadavek na virtuální cestu.</summary>
      <returns>Element anchor.</returns>
      <param name="ajaxHelper">Pomocná rutina AJAX.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="ajaxOptions">Objekt, který poskytuje možnosti pro asynchronní požadavek.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>Představuje nastavení možnosti spouštění skriptů Ajax v aplikaci ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.AllowCache"></member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>Získá nebo nastaví zprávu, která se zobrazí v potvrzovacím okně před odesláním požadavku.</summary>
      <returns>Zpráva, která se zobrazí v potvrzovacím okně.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>Získá nebo nastaví metodu požadavku HTTP (get nebo post).</summary>
      <returns>Metoda požadavku HTTPVýchozí hodnota je post.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>Získá nebo nastaví režim, který určuje způsob vložení odpovědi do cílového elementu DOM.</summary>
      <returns>Režim vložení (InsertAfter, InsertBefore nebo Replace)Výchozí hodnota je replace.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>Získá nebo nastaví hodnotu v milisekundách, která řídí trvání animace zobrazení nebo skrytí elementu načtení.</summary>
      <returns>Hodnota v milisekundách, která řídí trvání animace zobrazení nebo skrytí elementu načtení.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Získá nebo nastaví atribut id elementu HTML, který se zobrazuje při načítání funkce Ajax.</summary>
      <returns>ID elementu, který se zobrazuje při načítání funkce Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>Získá nebo nastaví název funkce JavaScript, která má být volána bezprostředně před aktualizací stránky.</summary>
      <returns>Název funkce JavaScript, která má být volána před aktualizací stránky.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>Získá nebo nastaví funkci JavaScript, která má být volána po vytvoření instance dat odpovědi, ale před aktualizací stránky.</summary>
      <returns>Funkce JavaScript, která má být volána po vytvoření instance dat odpovědi.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>Získá nebo nastaví funkci JavaScript, která má být volána, pokud se aktualizace stránky nezdaří.</summary>
      <returns>Funkce JavaScript, která má být volána, pokud se aktualizace stránky nezdaří.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>Získá nebo nastaví funkci JavaScript, která má být volána po úspěšné aktualizaci stránky.</summary>
      <returns>Funkce JavaScript, která má být volána po úspěšné aktualizaci stránky.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>Vrátí možnosti Ajax v podobě kolekce atributů HTML s cílem podpořit nerušivý jazyk JavaScript.</summary>
      <returns>Možnosti Ajax v podobě kolekce atributů HTML s cílem podpořit nerušivý JavaScript</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>Získá nebo nastaví ID elementu DOM, který chcete aktualizovat pomocí odpovědi ze serveru.</summary>
      <returns>ID elementu DOM, který chcete aktualizovat.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>Získá nebo nastaví adresu URL, na kterou má být odeslán požadavek.</summary>
      <returns>Adresa URL, na kterou má být odeslán požadavek.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>Nabízí výčet režimů vložení skriptu AJAX.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>Vložení za element</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>Vložení před element</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>Náhrada elementu</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.ReplaceWith">
      <summary>Nahradí celý elementu.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>Poskytuje informace o asynchronní metodě akce, jako jsou například název, kontroler, parametry, atributy a filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Vyvolá asynchronní metodu akce pomocí zadaných parametrů a kontextu kontroleru.</summary>
      <returns>Objekt obsahující výsledek asynchronního volání.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="parameters">Parametry metody akce</param>
      <param name="callback">Metoda zpětného volání</param>
      <param name="state">Objekt obsahující informace, které použije metoda zpětného volání.Tento parametr může mít hodnotu null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Vrátí výsledek asynchronní operace.</summary>
      <returns>Výsledek asynchronní operace</returns>
      <param name="asyncResult">Objekt reprezentující stav asynchronní operace.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Provede asynchronní metodu akce pomocí zadaných parametrů a kontextu kontroleru.</summary>
      <returns>Výsledek provedení asynchronní metody akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="parameters">Parametry metody akce</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>Představuje třídu, která zodpovídá za vyvolání metod akce asynchronního kontroleru.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Vyvolá asynchronní metodu akce pomocí zadaného kontextu kontroleru, názvu akce, metody zpětného volání a stavu.</summary>
      <returns>Objekt obsahující výsledek asynchronní operace.Implementuje<see cref="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)" /></returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název akce</param>
      <param name="callback">Metoda zpětného volání</param>
      <param name="state">Objekt obsahující informace, které použije metoda zpětného volání.Tento parametr může mít hodnotu null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Vyvolá asynchronní metodu akce pomocí zadaného kontextu kontroleru, popisovače akce, parametrů, metody zpětného volání a stavu.</summary>
      <returns>Objekt obsahující výsledek asynchronní operace.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Popisovač akce</param>
      <param name="parameters">Parametry asynchronní metody akce</param>
      <param name="callback">Metoda zpětného volání</param>
      <param name="state">Objekt obsahující informace, které použije metoda zpětného volání.Tento parametr může mít hodnotu null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Vyvolá asynchronní metodu akce pomocí zadaného kontextu kontroleru, filtrů, popisovače akce, parametrů, metody zpětného volání a stavu.</summary>
      <returns>Objekt obsahující výsledek asynchronní operace.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="filters">Filtry</param>
      <param name="actionDescriptor">Popisovač akce</param>
      <param name="parameters">Parametry asynchronní metody akce</param>
      <param name="callback">Metoda zpětného volání</param>
      <param name="state">Objekt obsahující informace, které použije metoda zpětného volání.Tento parametr může mít hodnotu null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Zruší akci.</summary>
      <returns>Hodnota true, pokud byla akce zrušena. V opačném případě hodnota false.</returns>
      <param name="asyncResult">Objekt definovaný uživatelem, který kvalifikuje nebo obsahuje informace o asynchronní operaci.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>Zruší akci.</summary>
      <returns>Hodnota true, pokud byla akce zrušena. V opačném případě hodnota false.</returns>
      <param name="asyncResult">Objekt definovaný uživatelem, který kvalifikuje nebo obsahuje informace o asynchronní operaci.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>Zruší akci.</summary>
      <returns>Hodnota true, pokud byla akce zrušena. V opačném případě hodnota false.</returns>
      <param name="asyncResult">Objekt definovaný uživatelem, který kvalifikuje nebo obsahuje informace o asynchronní operaci.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Vrátí popisovač kontroleru.</summary>
      <returns>Popisovač kontroleru</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>Poskytuje asynchronní operace pro třídu <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.AsyncManager" /> pomocí kontextu synchronizace.</summary>
      <param name="syncContext">Kontext synchronizace</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>Informuje technologii ASP.NET o dokončení všech asynchronních operací.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>Nastane při volání metody <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>Získá počet zbývajících operací.</summary>
      <returns>Počet zbývajících operací.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>Získá parametry předané do asynchronní metody dokončení.</summary>
      <returns>Parametry předané do asynchronní metody dokončení.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>Provede zpětné volání v aktuálním kontextu synchronizace.</summary>
      <param name="action">Asynchronní akce</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>Získá nebo nastaví hodnotu asynchronního časového limitu v milisekundách.</summary>
      <returns>Hodnota asynchronního časového limitu v milisekundách.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>Definuje rozhraní původce volání akce, které je použito k volání asynchronní akce v odpovědi na požadavek HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Vyvolá zadanou akci.</summary>
      <returns>Stav asynchronního výsledku</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název asynchronní akce</param>
      <param name="callback">Metoda zpětného volání</param>
      <param name="state">Stav</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Zruší asynchronní akci.</summary>
      <returns>Hodnota true, pokud lze asynchronní metodu zrušit. V opačném případě hodnota false.</returns>
      <param name="asyncResult">Asynchronní výsledek</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvokerFactory">
      <summary>Slouží k vytvoření instance <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" /> pro aktuální požadavek.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvokerFactory.CreateInstance">
      <summary>Vytvoří instanci původce volání asynchronních akcí pro aktuální požadavek.</summary>
      <returns>Vytvořený objekt <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>Definuje metody, které jsou požadovány pro asynchronní kontroler.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Spouští kontext učeného požadavku.</summary>
      <returns>Stav asynchronní operace</returns>
      <param name="requestContext">Kontext požadavku</param>
      <param name="callback">Asynchronní metoda zpětného volání</param>
      <param name="state">Stav</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>Ukončí asynchronní operaci.</summary>
      <param name="asyncResult">Asynchronní výsledek</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>Poskytuje kontejner pro asynchronní objekt správce.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>Získá asynchronní objekt správce.</summary>
      <returns>Asynchronní objekt správce</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>Poskytuje kontejner, který spravuje počet čekajících asynchronních operací.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.OperationCounter" />.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>Nastane při dokončení asynchronní metody.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>Získá počet operací.</summary>
      <returns>Počet operací</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>Počet operací se zmenší o jednu.</summary>
      <returns>Aktualizovaný počet operací</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>Zmenší počet operací o zadanou hodnotu.</summary>
      <returns>Aktualizovaný počet operací</returns>
      <param name="value">Počet operací, o který se má zmenšit jejich celkový počet</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>Zvětší počet operací o jednu.</summary>
      <returns>Aktualizovaný počet operací</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>Zvětší počet operací o zadanou hodnotu.</summary>
      <returns>Aktualizovaný počet operací</returns>
      <param name="value">Počet operací, o který se má zvětšit jejich celkový počet</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>Poskytuje informace o asynchronní metodě akce, jako jsou například název, kontroler, parametry, atributy a filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" />.</summary>
      <param name="asyncMethodInfo">Objekt obsahující informace o metodě, která zahájí asynchronní operaci (metoda, jejíž název končí řetězcem Asynch).</param>
      <param name="completedMethodInfo">Objekt obsahující informace o metodě dokončení (metoda, jejíž název končí řetězcem Completed)</param>
      <param name="actionName">Název akce</param>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>Získá název metody akce.</summary>
      <returns>Název metody akce</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>Získá informace metody pro asynchronní metodu akce.</summary>
      <returns>Informace metody pro asynchronní metodu akce</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Zahájí spuštění asynchronní metody akce pomocí zadaných parametrů a kontextu kontroleru.</summary>
      <returns>Objekt obsahující výsledek asynchronního volání.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="parameters">Parametry metody akce</param>
      <param name="callback">Metoda zpětného volání</param>
      <param name="state">Objekt obsahující informace, které použije metoda zpětného volání.Tento parametr může mít hodnotu null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>Získá informace metody pro asynchronní metodu dokončení.</summary>
      <returns>Informace metody pro asynchronní metodu dokončení</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>Získá popisovač kontroleru pro asynchronní metodu akce.</summary>
      <returns>Popisovač kontroleru pro asynchronní metodu akce</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Vrátí výsledek asynchronní operace.</summary>
      <returns>Výsledek asynchronní operace</returns>
      <param name="asyncResult">Objekt reprezentující stav asynchronní operace.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou pro tento člen definovány (mimo pojmenovaných atributů).</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou definovány pro tento člen a určeny podle typu.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy zadaného typu neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů, který má být vrácen</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Získá atributy filtru.</summary>
      <returns>Atributy filtru</returns>
      <param name="useCache">Použije příznak mezipaměti.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>Vrátí parametry metody akce.</summary>
      <returns>Parametry metody akce</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>Vrátí selektory metody akce.</summary>
      <returns>Selektory metody akce</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Určuje, zda jsou pro člen akce definovány jedna či více instancí zadaného typu atributu.</summary>
      <returns>Hodnota true, pokud je pro tento člen definován některý atribut typu představovaný typem <paramref name="attributeType" />, jinak hodnota false.</returns>
      <param name="attributeType">Typ vlastního atributu</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>Získá opožděně inicializované jedinečný ID instance této třídy.</summary>
      <returns>Opožděně inicializované jedinečný ID instance této třídy</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>Zapouzdří informace popisující asynchronní kontroler, například jeho název, typ a akce.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" />.</summary>
      <param name="controllerType">Typ kontroleru</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>Získá typ kontroleru.</summary>
      <returns>Typ kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Nalezne metodu akce pomocí zadaného názvu a kontextu kontroleru.</summary>
      <returns>Informace o metodě akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionName">Název akce</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>Vrátí seznam popisovačů metody akce v kontroleru.</summary>
      <returns>Seznam popisovačů metody akce v kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Vrátí vlastní atributy definované pro tento člen s vynecháním pojmenovaných atributů.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Vrátí vlastní atributy zadaného typu definované pro tento člen s vynecháním pojmenovaných atributů.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Získá atributy filtru.</summary>
      <returns>Atributy filtru</returns>
      <param name="useCache">Hodnota true, pokud má být použita mezipaměť, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Vrátí hodnotu, která určuje, zda je pro tento člen definována jedna nebo více instancí zadaného vlastního atributu.</summary>
      <returns>Hodnota true, pokud je pro tento člen definován některý atribut typu představovaný typem. <paramref name="attributeType" />, jinak hodnota false.</returns>
      <param name="attributeType">Typ vlastního atributu</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>Představuje výjimku, ke které došlo v průběhu synchronního zpracování požadavku HTTP v aplikaci ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> pomocí zprávy poskytnuté systémem.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> pomocí zadané zprávy.</summary>
      <param name="message">Zpráva, která popisuje výjimkuVolající, který volá tento konstruktor, musí zajistit lokalizaci tohoto řetězce pro aktuální systémovou kulturu.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> pomocí zadané chybové zprávy a odkazu na vnitřní výjimku, která je příčinou této výjimky.</summary>
      <param name="message">Zpráva, která popisuje výjimkuVolající, který volá tento konstruktor, musí zajistit lokalizaci tohoto řetězce pro aktuální systémovou kulturu.</param>
      <param name="innerException">Výjimka, která je příčinou aktuální výjimkyPokud parametr <paramref name="innerException" /> nemá hodnotu null, bude aktuální výjimka vyvolána v bloku catch, který zpracovává vnitřní výjimku.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor">
      <summary>Když metoda akce vrací buď úlohu, nebo úlohu &lt;T&gt;, poskytuje <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" /> informace o dané akci.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" />.</summary>
      <param name="taskMethodInfo">Informace metody úlohy</param>
      <param name="actionName">Název akce</param>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName">
      <summary>Získá název metody akce.</summary>
      <returns>Název metody akce</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Vyvolá asynchronní metodu akce pomocí zadaných parametrů, zpětného volání kontextu kontroleru a stavu.</summary>
      <returns>Objekt obsahující výsledek asynchronního volání.</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="parameters">Parametry metody akce</param>
      <param name="callback">Volitelná metoda zpětného volání</param>
      <param name="state">Objekt obsahující informace, které použije metoda zpětného volání.Tento parametr může mít hodnotu null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor">
      <summary>Získá popisovač kontroleru.</summary>
      <returns>Popisovač kontroleru</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Ukončí asynchronní operaci.</summary>
      <returns>Výsledek asynchronní operace</returns>
      <param name="asyncResult">Objekt reprezentující stav asynchronní operace.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Provede asynchronní metodu akce.</summary>
      <returns>Výsledek provedení asynchronní metody akce</returns>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="parameters">Parametry metody akce</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou pro tento člen definovány (mimo pojmenovaných atributů).</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Vrátí pole vlastních atributů, které jsou definovány pro tento člen a určeny podle typu.</summary>
      <returns>Pole vlastních atributů nebo prázdné pole, pokud žádné vlastní atributy neexistují.</returns>
      <param name="attributeType">Typ vlastních atributů</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Vrátí pole všech vlastních atributů použitých na tento člen.</summary>
      <returns>Pole, které obsahuje všechny vlastní atributy použité na tento člen, nebo pole s nulovým počtem elementů, pokud nejsou definovány žádné atributy</returns>
      <param name="useCache">Hodnota true pro hledání řetěze dědičnosti tohoto členu pro vyhledání atributů, jinak hodnota false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters">
      <summary>Vrací parametry asynchronní metody akce.</summary>
      <returns>Parametry asynchronní metody akce</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors">
      <summary>Vrací selektory asynchronní metody akce.</summary>
      <returns>Selektory asynchronní metody akce</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Vrací hodnotu, která určuje, zda je pro tento člen definována jedna nebo více instancí zadaného vlastního atributu.</summary>
      <returns>Hodnota, která určuje, zda je pro tento člen definována jedna nebo více instancí zadaného vlastního atributu</returns>
      <param name="attributeType">Typ vlastního atributu</param>
      <param name="inherit">Hodnota true, pokud má být vyhledán řetězec hierarchie pro odvozený vlastní atribut, jinak hodnota false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo">
      <summary>Získá informace pro asynchronní úlohu.</summary>
      <returns>Informace pro asynchronní úlohu</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId">
      <summary>Získá jedinečné ID pro úlohu.</summary>
      <returns>Jedinečné ID pro úlohu</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationChallengeContext">
      <summary>Reprezentuje kontext výzvy ověřování obsahující informace pro provedení výzvy ověřování.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" />.</summary>
      <param name="controllerContext">Kontext kontroleru.</param>
      <param name="actionDescriptor">Metody akce přidružené k výzvě</param>
      <param name="result">Odpověď výzvy</param>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.ActionDescriptor">
      <summary>Získá nebo nastaví popisovač akce.</summary>
      <returns>Popisovač akce přidružený k výzvě.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.Result">
      <summary>Získá nebo nastaví výsledek akce k provedení.</summary>
      <returns>Odpověď výzvy</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationContext">
      <summary>Reprezentuje kontext ověřování obsahující informace pro provedení ověřování.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Filters.AuthenticationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Security.Principal.IPrincipal)"></member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.ActionDescriptor">
      <summary>Získá nebo nastaví popisovač akce.</summary>
      <returns>Metody akce přidružené k ověřování</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Principal">
      <summary>Získá nebo nastaví aktuálně ověřený objekt zabezpečení.</summary>
      <returns>Zabezpečovací pověření pro ověřování</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Result">
      <summary>Získá nebo nastaví chybný výsledek, který udává, že pokus o ověření se nezdařil.</summary>
      <returns>Výsledek ověřování</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.IAuthenticationFilter">
      <summary>Definuje filtr, který provede ověřování.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Ověří žádost.</summary>
      <param name="filterContext">Kontext, který má být použit pro ověřování.</param>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Přidá výzvu ověřování k aktuálnímu objektu <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="filterContext">Kontext, který má být použit pro výzvu ověřování.</param>
    </member>
    <member name="T:System.Web.Mvc.Filters.IOverrideFilter">
      <summary>Definuje filtr, který přepíše ostatní filtry.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filters.IOverrideFilter.FiltersToOverride">
      <summary>Získá typ filtrů k přepsání.</summary>
      <returns>Filtr k přepsání</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>Představuje podporu pro volání metod podřízené akce a vykreslení výsledku vloženého do nadřazeného zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vyvolá metodu podřízené akce a vrátí výsledek jako řetězec HTML.</summary>
      <returns>Výsledek podřízené akce jako řetězec HTML</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název akce, která bude vyvolána</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vyvolá zadanou metodu podřízené akce se zadanými parametry a vrátí výsledek jako řetězec HTML.</summary>
      <returns>Výsledek podřízené akce jako řetězec HTML</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název akce, která bude vyvolána</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyChcete-li poskytnout parametry, které se váží k parametrům metody akce, můžete použít <paramref name="routeValues" />.Parametr <paramref name="routeValues" /> je sloučen s původními hodnotami trasy a přepíše je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaného názvu kontroleru a vrátí výsledek jako řetězec HTML.</summary>
      <returns>Výsledek podřízené akce jako řetězec HTML</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název akce, která bude vyvolána</param>
      <param name="controllerName">Název kontroleru, který obsahuje metodu akce</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaných parametrů a názvu kontroleru a vrátí výsledek jako řetězec HTML.</summary>
      <returns>Výsledek podřízené akce jako řetězec HTML</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název akce, která bude vyvolána</param>
      <param name="controllerName">Název kontroleru, který obsahuje metodu akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyChcete-li poskytnout parametry, které se váží k parametrům metody akce, můžete použít <paramref name="routeValues" />.Parametr <paramref name="routeValues" /> je sloučen s původními hodnotami trasy a přepíše je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaných parametrů a názvu kontroleru a vrátí výsledek jako řetězec HTML.</summary>
      <returns>Výsledek podřízené akce jako řetězec HTML</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název akce, která bude vyvolána</param>
      <param name="controllerName">Název kontroleru, který obsahuje metodu akce</param>
      <param name="routeValues">Slovník, který obsahuje parametry trasyChcete-li poskytnout parametry, které se váží k parametrům metody akce, můžete použít <paramref name="routeValues" />.Parametr <paramref name="routeValues" /> je sloučen s původními hodnotami trasy a přepíše je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaných parametrů a vrátí výsledek jako řetězec HTML.</summary>
      <returns>Výsledek podřízené akce jako řetězec HTML</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název akce, která bude vyvolána</param>
      <param name="routeValues">Slovník, který obsahuje parametry trasyChcete-li poskytnout parametry, které se váží k parametrům metody akce, můžete použít <paramref name="routeValues" />.Parametr <paramref name="routeValues" /> je sloučen s původními hodnotami trasy a přepíše je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vyvolá zadanou metodu podřízené akce a vykreslí výsledek vložený v nadřazeném zobrazení.</summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody podřízené akce, která bude vyvolána</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaných parametrů a vykreslí výsledek vložený v nadřazeném zobrazení.</summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody podřízené akce, která bude vyvolána</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyChcete-li poskytnout parametry, které se váží k parametrům metody akce, můžete použít <paramref name="routeValues" />.Parametr <paramref name="routeValues" /> je sloučen s původními hodnotami trasy a přepíše je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaného názvu kontroleru a vykreslí výsledek vložený v nadřazeném zobrazení.</summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody podřízené akce, která bude vyvolána</param>
      <param name="controllerName">Název kontroleru, který obsahuje metodu akce</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaných parametrů a názvu kontroleru a vykreslí výsledek vložený v nadřazeném zobrazení.</summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody podřízené akce, která bude vyvolána</param>
      <param name="controllerName">Název kontroleru, který obsahuje metodu akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyChcete-li poskytnout parametry, které se váží k parametrům metody akce, můžete použít <paramref name="routeValues" />.Parametr <paramref name="routeValues" /> je sloučen s původními hodnotami trasy a přepíše je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaných parametrů a názvu kontroleru a vykreslí výsledek vložený v nadřazeném zobrazení.</summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody podřízené akce, která bude vyvolána</param>
      <param name="controllerName">Název kontroleru, který obsahuje metodu akce</param>
      <param name="routeValues">Slovník, který obsahuje parametry trasyChcete-li poskytnout parametry, které se váží k parametrům metody akce, můžete použít <paramref name="routeValues" />.Parametr <paramref name="routeValues" /> je sloučen s původními hodnotami trasy a přepíše je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Vyvolá zadanou metodu podřízené akce pomocí zadaných parametrů a vykreslí výsledek vložený v nadřazeném zobrazení.</summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody podřízené akce, která bude vyvolána</param>
      <param name="routeValues">Slovník, který obsahuje parametry trasyChcete-li poskytnout parametry, které se váží k parametrům metody akce, můžete použít <paramref name="routeValues" />.Parametr <paramref name="routeValues" /> je sloučen s původními hodnotami trasy a přepíše je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> má hodnotu null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.InvalidOperationException">Nelze nalézt požadovaná data virtuální cesty.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>Představuje podporu pro vykreslení hodnot objektů v kódu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí kód HTML pro každou vlastnost objektu zastoupeného řetězcovým výrazem.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí kód HTML pro každou vlastnost objektu zastoupeného řetězcovým výrazem s použitím dalších dat zobrazení.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrátí kód HTML pro každou vlastnost objektu zastoupeného daným výrazem s použitím určené šablony.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vrátí kód HTML pro každou vlastnost objektu zastoupeného daným výrazem s použitím určené šablony a dalších dat zobrazení.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Vrátí kód HTML pro každou vlastnost objektu zastoupeného daným výrazem s použitím určené šablony a ID pole HTML.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Vrátí kód HTML pro každou vlastnost objektu zastoupeného daným výrazem s použitím určené šablony, ID pole HTML a dalších dat zobrazení.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrátí kód HTML pro každou vlastnost v objektu zastoupenou výrazem <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrátí řetězec obsahující všechny hodnoty vlastností v objektu zastoupeném zadaným výrazem s použitím dalších dat zobrazení.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Vrátí řetězec obsahující všechny hodnoty vlastností v objektu zastoupeném výrazem <see cref="T:System.Linq.Expressions.Expression" />, s použitím určené šablony.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Vrátí řetězec obsahující všechny hodnoty vlastností v objektu zastoupeném zadaným výrazem s použitím určeného názvu šablony a dalších dat zobrazení.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Vrátí kód HTML pro každou vlastnost objektu zastoupenou výrazem <see cref="T:System.Linq.Expressions.Expression" />, s použitím určené šablony a ID pole HTML.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Vrátí kód HTML pro každou vlastnost objektu zastoupeného daným výrazem s použitím určené šablony, ID pole HTML a dalších dat zobrazení.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Vrátí kód HTML pro všechny vlastnosti v daném modelu.</summary>
      <returns>Kód HTML pro všechny vlastnosti v daném modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Vrátí kód HTML pro každou vlastnost v modelu s použitím dalších dat zobrazení.</summary>
      <returns>Kód HTML pro všechny vlastnosti v daném modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí kód HTML pro každou vlastnost v modelu s použitím určené šablony.</summary>
      <returns>Kód HTML pro všechny vlastnosti v daném modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí kód HTML pro každou vlastnost v modelu s použitím určené šablony a dalších dat zobrazení.</summary>
      <returns>Kód HTML pro všechny vlastnosti v daném modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrátí kód HTML pro každou vlastnost v modelu s použitím určené šablony a ID pole HTML.</summary>
      <returns>Kód HTML pro všechny vlastnosti v daném modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vrátí kód HTML pro každou vlastnost v modelu s použitím určené šablony, ID pole HTML a dalších dat zobrazení.</summary>
      <returns>Kód HTML pro všechny vlastnosti v daném modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="templateName">Název šablony, která je použita k vykreslení objektu.</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayNameExtensions">
      <summary>Poskytuje mechanismus pro získání zobrazovaných názvů.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Získá zobrazovaný název.</summary>
      <returns>Zobrazovaný název</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující zobrazovaný název.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Získá zobrazovaný název modelu.</summary>
      <returns>Zobrazovaný název modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující zobrazovaný název.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Získá zobrazovaný název modelu.</summary>
      <returns>Zobrazovaný název modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující zobrazovaný název.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Získá zobrazovaný název modelu.</summary>
      <returns>Zobrazovaný název modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>Poskytuje způsob vykreslení hodnot objektu ve formátu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí značku HTML pro každou vlastnost objektu zastoupeného zadaným výrazem.</summary>
      <returns>Kód HTML pro každou vlastnost objektu zastoupeného daným výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrátí značku HTML pro každou vlastnost objektu zastoupeného zadaným výrazem.</summary>
      <returns>Značka HTML pro jednotlivé vlastnosti</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TResult">Typ výsledku</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>Představuje podporu elementu HTML input v aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrací element HTML input pro každou vlastnost objektu reprezentovaného výrazem.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem s použitím dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrací element HTML input pro každou vlastnost objektu reprezentovaného výrazem za použití určené šablony.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem s použitím určené šablony a dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Vrací element HTML input pro každou vlastnost objektu reprezentovaného výrazem za použití určené šablony a názvu pole HTML.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem s použitím určené šablony, názvu pole HTML a dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem třídy <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem s použitím dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem třídy <see cref="T:System.Linq.Expressions.Expression" /> s použitím určené šablony.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem s použitím určené šablony a dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem třídy <see cref="T:System.Linq.Expressions.Expression" /> s použitím určené šablony a názvu pole HTML.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost objektu reprezentovaného výrazem s použitím určené šablony, názvu pole HTML a dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Vrátí element HTML input pro každou vlastnost v modelu.</summary>
      <returns>Element HTML input pro každou vlastnost v modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost v modelu s použitím dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost v modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí element HTML input pro každou vlastnost v modelu s použitím určené šablony.</summary>
      <returns>Element HTML input pro každou vlastnost v modelu a určené šabloně.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost v modelu s použitím zadané šablony a dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost v modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrátí element HTML input pro každou vlastnost v modelu s použitím určeného názvu šablony a názvu pole HTML.</summary>
      <returns>Element HTML input pro každou vlastnost v modelu a uvedené šabloně</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vrátí element HTML input pro každou vlastnost v modelu s použitím názvu šablony, názvu pole HTML a dalších dat zobrazení.</summary>
      <returns>Element HTML input pro každou vlastnost v modelu</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="templateName">Název šablony, která má být použita k vykreslení objektu</param>
      <param name="htmlFieldName">Řetězec, který se používá k rozlišení názvů elementů HTML input, které jsou generovány pro vlastnosti se stejným názvem.</param>
      <param name="additionalViewData">Anonymní objekt, který může obsahovat další data zobrazení, která budou sloučena do instance třídy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> vytvořené pro danou šablonu</param>
    </member>
    <member name="T:System.Web.Mvc.Html.EnumHelper">
      <summary>Poskytuje metody pro práci s hodnotami výčtů a vybranými seznamy.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)">
      <summary>Získá seznam objektů <see cref="T:System.Web.Mvc.SelectListItem" /> odpovídajících konstantám výčtu definovaným v zadaném typu.</summary>
      <returns>Seznam pro daný parametr <paramref name="type" />.</returns>
      <param name="type">Typ k vyhodnocení.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type,System.Enum)">
      <summary>Získá seznam objektů <see cref="T:System.Web.Mvc.SelectListItem" /> odpovídajících konstantám výčtu definovaným v zadaném typu.Také zajistí, že <paramref name="value" /> bude mít odezvu, i když neodpovídá definované konstantě, a nastaví vlastnost Selected na hodnotu true pro jeden element ve vráceném seznamu – odpovídající parametru <paramref name="value" />.</summary>
      <returns>Seznam pro danou hodnotu parametru <paramref name="type" />, případně rozšířený tak, aby byly zahrnuty i nerozpoznané hodnoty parametru <paramref name="value" />.</returns>
      <param name="type">Typ k vyhodnocení.</param>
      <param name="value">Hodnota z typů na výběr.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)">
      <summary>Získá seznam objektů <see cref="T:System.Web.Mvc.SelectListItem" /> odpovídajících konstantám výčtu definovaným v zadaných metadatech.</summary>
      <returns>Seznam pro daná metadata.</returns>
      <param name="metadata">Metadata modelu k vyhodnocení.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata,System.Enum)">
      <summary>Získá seznam objektů <see cref="T:System.Web.Mvc.SelectListItem" /> odpovídajících konstantám výčtu definovaným v zadaných metadatech.Také zajistí, že hodnota bude mít odezvu, i když neodpovídá definované konstantě, a nastaví vlastnost Selected na hodnotu true pro jeden element ve vráceném seznamu – odpovídající hodnotě.</summary>
      <returns>Seznam pro danou hodnotu parametru <paramref name="metadata" />, případně rozšířený tak, aby byly zahrnuty i nerozpoznané hodnoty parametru <paramref name="value" />.</returns>
      <param name="metadata">Metadata k vyhodnocení.</param>
      <param name="value">Hodnota z typu metadat k výběru.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Type)">
      <summary>Získá hodnotu označující, zda je daný typ nebo výraz tohoto typu vhodný pro použití ve voláních metod <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> a <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</summary>
      <returns>Hodnota true, pokud <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> nezpůsobí výjimku při předání daného typu a <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> nezpůsobí výjimku při předání výrazu tohoto typu; jinak hodnota false.</returns>
      <param name="type">Typ určený ke kontrole.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Web.Mvc.ModelMetadata)">
      <summary>Získá hodnotu označující, zda jsou daná metadata nebo přidružený výraz vhodné pro použití ve voláních metod <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> a <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</summary>
      <returns>Hodnota true, pokud <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> nezpůsobí výjimku při předání daného typu (<see cref="T:System.Web.Mvc.ModelMetadata" />) a <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> nezpůsobí výjimku při předání přidruženého výrazu; jinak hodnota false.</returns>
      <param name="metadata">Metadata určená ke kontrole.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>Představuje podporu HTML v aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Formulář použije metodu POST a metoda akce pro dané zobrazení zpracuje požadavek.</summary>
      <returns>Počáteční značka &lt;form&gt;. </returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a do atributu akce zahrne hodnoty trasy.Formulář použije metodu POST a metoda akce pro dané zobrazení zpracuje požadavek.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler a akci.Formulář používá metodu POST.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler, akci a hodnoty trasy.Formulář používá metodu POST.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler, akci a hodnoty trasy.Formulář používá zadanou metodu HTTP.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler, akci a hodnoty trasy.Formulář použije zadanou metodu HTTP a zahrne atributy HTML.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler a akci.Formulář používá zadanou metodu HTTP.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler a akci.Formulář použije zadanou metodu HTTP a zahrne atributy HTML ze slovníku.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler a akci.Formulář použije zadanou metodu HTTP a zahrne atributy HTML.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler, akci a hodnoty trasy ze slovníku hodnot trasy.Formulář používá metodu POST.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler, akci a hodnoty trasy ze slovníku hodnot trasy.Formulář používá zadanou metodu HTTP.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a nastaví značku akce na zadaný kontroler, akci a hodnoty trasy ze slovníku hodnot trasy.Formulář použije zadanou metodu HTTP a zahrne atributy HTML ze slovníku.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="actionName">Název metody akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapíše do odpovědi úvodní značku &lt;form&gt; a do atributu akce zahrne hodnoty trasy ze slovníku hodnot trasy.Formulář použije metodu POST a metoda akce pro dané zobrazení zpracuje požadavek.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Tento objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeName">Název trasy, která se použije k získání adresy URL vystavení formuláře.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy.</param>
      <param name="method">Metoda HTTP pro zpracování formuláře: GET, nebo POST.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapíše do odpovědi počáteční značku &lt;form&gt;.Jakmile uživatel formulář odešle, požadavek bude zpracován cílem trasy.</summary>
      <returns>Počáteční značka &lt;form&gt;.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>Vykreslí do odpovědi ukončovací značku. &lt;/form&gt;. </summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>Představuje podporu vstupních ovládacích prvků HTML v aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí zaškrtávací políčko elementu input pomocí zadané pomocné rutiny HTML a názvu pole formuláře.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu checkbox.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>Vrátí zaškrtávací políčko elementu input pomocí zadané pomocné rutiny HTML, názvu pole formuláře a hodnoty, která určuje, zda je políčko zaškrtnuto.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu checkbox.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře</param>
      <param name="isChecked">Hodnota true pro zaškrtnutí políčka, jinak hodnota false.Hodnota zaškrtávacího políčka se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut checked v atributech HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí zaškrtávací políčko elementu input pomocí zadané pomocné rutiny HTML, názvu pole formuláře, hodnoty, která určuje, zda je políčko zaškrtnuto, a atributů HTML.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu checkbox.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře</param>
      <param name="isChecked">Hodnota true pro zaškrtnutí políčka, jinak hodnota false.Hodnota zaškrtávacího políčka se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut checked v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>Vrátí zaškrtávací políčko elementu input pomocí zadané pomocné rutiny HTML, názvu pole formuláře, hodnoty, která určuje, zda je políčko zaškrtnuto, a atributů HTML.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu checkbox.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře</param>
      <param name="isChecked">Hodnota true pro zaškrtnutí políčka, jinak hodnota false.Hodnota zaškrtávacího políčka se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut checked v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí zaškrtávací políčko elementu input pomocí zadané pomocné rutiny HTML, názvu pole formuláře a atributů HTML.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu checkbox.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí zaškrtávací políčko elementu input pomocí zadané pomocné rutiny HTML, názvu pole formuláře a atributů HTML.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu checkbox.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Vrací element input zaškrtávacího políčka pro každou vlastnost v objektu, která je reprezentována zadaným výrazem.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu checkbox pro každou vlastnost v objektu, která je reprezentována zadaným výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element input zaškrtávacího políčka pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu checkbox pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML, které se mají nastavit pro element.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)">
      <summary>Vrátí element input zaškrtávacího políčka pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu checkbox pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí skrytý element input pomocí zadané pomocné rutiny HTML a názvu pole formuláře.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu hidden.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí skrytý element input pomocí zadané pomocné rutiny HTML, názvu pole formuláře a hodnoty.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu hidden.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota skrytého elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí skrytý element input pomocí zadané pomocné rutiny HTML, názvu pole formuláře, hodnoty a atributů HTML.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu hidden.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota skrytého elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Vrátí skrytý element input pomocí zadané pomocné rutiny HTML, názvu pole formuláře, hodnoty a atributů HTML.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu hidden.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota skrytého elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrátí skrytý element input HTML pro každou vlastnost v objektu, která je reprezentována zadaným výrazem.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu hidden pro každou vlastnost v objektu, která je reprezentována výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí skrytý element input HTML pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu hidden pro každou vlastnost v objektu, která je reprezentována výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrátí skrytý element input HTML pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu hidden pro každou vlastnost v objektu, která je reprezentována výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí element input pro heslo použitím zadané pomocné rutiny HTML a názvu pole formuláře.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu password.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí element input pro heslo pomocí zadané pomocné rutiny HTML, názvu pole formuláře a hodnoty.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu password.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota elementu input pro hesloPokud hodnota tohoto parametru není k dispozici, k načtení hodnoty se použije atribut value v atributech HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element input pro heslo použitím zadané pomocné rutiny HTML, názvu pole formuláře, hodnoty a atributů HTML.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu password.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota elementu input pro hesloPokud hodnota tohoto parametru není k dispozici, k načtení hodnoty se použije atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Vrátí element input pro heslo použitím zadané pomocné rutiny HTML, názvu pole formuláře, hodnoty a atributů HTML.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu password.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota elementu input pro hesloPokud hodnota tohoto parametru není k dispozici, k načtení hodnoty se použije atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrací element input pro heslo pro každou vlastnost v objektu, která je reprezentována zadaným výrazem.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu password pro každou vlastnost v objektu, která je reprezentována zadaným výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element input pro heslo pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu password pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML, které se mají nastavit pro element.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrátí element input pro heslo pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu password pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí element input přepínače, který nabídne vzájemně se vylučující možnosti.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu radio.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>Vrátí element input přepínače, který nabídne vzájemně se vylučující možnosti.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu radio.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="isChecked">Hodnota true pro vybrání přepínače, jinak hodnota false.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element input přepínače, který nabídne vzájemně se vylučující možnosti.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu radio.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="isChecked">Hodnota true pro vybrání přepínače, jinak hodnota false.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>Vrátí element input přepínače, který nabídne vzájemně se vylučující možnosti.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu radio.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="isChecked">Hodnota true pro vybrání přepínače, jinak hodnota false.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element input přepínače, který nabídne vzájemně se vylučující možnosti.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu radio.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Vrátí element input přepínače, který nabídne vzájemně se vylučující možnosti.</summary>
      <returns>Element input jehož atribut type je nastaven na hodnotu radio.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrací element input přepínače pro každou vlastnost v objektu, která je reprezentována zadaným výrazem.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu radio pro každou vlastnost v objektu, která je reprezentována zadaným výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element input přepínače pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu radio pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML, které se mají nastavit pro element.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)">
      <summary>Vrátí element input přepínače pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu radio pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="value">Hodnota vybraného přepínače.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí textový element input použitím zadané pomocné rutiny HTML a názvu pole formuláře.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí textový element input pomocí zadané pomocné rutiny HTML, názvu pole formuláře a hodnoty.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota textového elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí textový element input pomocí zadané pomocné rutiny HTML, názvu pole formuláře, hodnoty a atributů HTML.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota textového elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Vrátí textový element input pomocí zadané pomocné rutiny HTML, názvu pole formuláře, hodnoty a atributů HTML.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota textového elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Vrátí textový element input.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře</param>
      <param name="value">Hodnota textového elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="format">Řetězec, který slouží k formátování vstupu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí textový element input.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota textového elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="format">Řetězec, který slouží k formátování vstupu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)">
      <summary>Vrátí textový element input.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře a klíč <see cref="T:System.Web.Mvc.ViewDataDictionary" />, který se použije pro vyhledávání hodnoty.</param>
      <param name="value">Hodnota textového elementu input.Hodnota se načítá v tomto pořadí: objekt <see cref="T:System.Web.Mvc.ModelStateDictionary" />, hodnota tohoto parametru, objekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nakonec atribut value v atributech HTML.</param>
      <param name="format">Řetězec, který slouží k formátování vstupu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrací textový element input pro každou vlastnost v objektu, která je reprezentována zadaným výrazem.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu text pro každou vlastnost v objektu, která je reprezentována výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí textový element input pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Atribut type elementu input HTML je nastaven na hodnotu text pro každou vlastnost v objektu, která je reprezentována výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML, které se mají nastavit pro element.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrátí textový element input pro každou vlastnost v objektu, která je reprezentována zadaným výrazem, pomocí zadaných atributů HTML.</summary>
      <returns>Element input HTML, jehož atribut type je nastaven na hodnotu text pro každou vlastnost v objektu, která je reprezentována výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Vrátí textový element input.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="format">Řetězec, který slouží k formátování vstupu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí textový element input.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="format">Řetězec, který slouží k formátování vstupu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Vrátí textový element input.</summary>
      <returns>Element input, jehož atribut type je nastaven na hodnotu text.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="format">Řetězec, který slouží k formátování vstupu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>Představuje podporu elementu HTML label v zobrazení ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem pomocí textu popisku.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="labelText">Zobrazovaný text popisku</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="labelText">Text popisku</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="labelText">Text popisku</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Hodnota.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem pomocí textu popisku.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="labelText">Zobrazovaný text popisku</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="labelText">Zobrazovaný text popisku</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje zobrazovanou vlastnost</param>
      <param name="labelText">Text popisku</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TValue">Hodnota.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované modelem.</summary>
      <returns>Element HTMLlabel a název vlastnosti reprezentované modelem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem pomocí textu popisku.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="labelText">Zobrazovaný text popisku</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="labelText">Text popisku</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí element HTML label a název vlastnosti reprezentované zadaným výrazem.</summary>
      <returns>Element HTML label a název vlastnosti reprezentované výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="labelText">Text popisku</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>Představuje podporu odkazů HTML v aplikaci.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu a akci.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci a hodnoty trasy.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci, hodnoty trasy a atributy HTML.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný elementAtributy se načítají prostřednictvím reflexe kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci a kontroler.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci, kontroler, hodnoty trasy a atributy HTML.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci, kontroler, protokol, název hostitele, fragment adresy URL, hodnoty trasy a atributy HTML.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
      <param name="fragment">Název fragmentu adresy URL (název anchor).</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci, kontroler, protokol, název hostitele, fragment adresy URL a hodnoty trasy jako slovník hodnot trasy a pro atributy HTML jako slovník.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
      <param name="fragment">Název fragmentu adresy URL (název anchor).</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci, kontroler a hodnoty trasy jako slovník hodnot trasy a pro atributy HTML jako slovník.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="controllerName">Název kontroleru</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci a hodnoty trasy jako slovník hodnot trasy.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor (element a) pro zadaný text odkazu, akci a hodnoty trasy jako slovník hodnot trasy a pro atributy HTML jako slovník.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="actionName">Název akce</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
      <param name="fragment">Název fragmentu adresy URL (název anchor).</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasyParametry se načítají reflexí kontrolou vlastností objektu.Objekt se obvykle vytvoří pomocí syntaxe inicializátoru objektu.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="protocol">Protokol pro adresu URL, například http nebo https.</param>
      <param name="hostName">Název hostitele adresy URL.</param>
      <param name="fragment">Název fragmentu adresy URL (název anchor).</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeName">Název trasy, která se používá k vrácení virtuální cesty</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy </param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element anchor (element a), který obsahuje virtuální cestu zadané akce.</summary>
      <returns>Element anchor (element a).</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="linkText">Vnitřní text elementu anchor.</param>
      <param name="routeValues">Objekt, který obsahuje parametry trasy</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>Představuje element HTML form v zobrazení MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Html.MvcForm" /> pomocí zadaného objektu odpovědi HTTP.</summary>
      <param name="httpResponse">Objekt odpovědi HTTP</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpResponse " /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Html.MvcForm" /> pomocí zadaného kontextu zobrazení.</summary>
      <param name="viewContext">Objekt zapouzdřující informace vyžadované pro vykreslení zobrazení.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="viewContext" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>Uvolní všechny prostředky, které používá aktuální instance třídy <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>Uvolní nespravované a volitelně i spravované prostředky, které jsou používány aktuální instancí třídy <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
      <param name="disposing">Hodnota true slouží k uvolnění spravovaných i nespravovaných prostředků; hodnota false slouží k uvolnění pouze nespravovaných prostředků.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>Ukončí formulář a uvolní všechny jeho prostředky.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.NameExtensions">
      <summary>Získá ID HTML a atributy názvu řetězce <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Získá ID řetězce <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>Hodnota atributu ID HTML pro objekt, který je zastoupený výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Výraz, který určuje objekt obsahující ID.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary> Získá ID řetězce <see cref="T:System.Web.Mvc.HtmlHelper`1" />.</summary>
      <returns>Hodnota atributu ID HTML pro objekt, který je zastoupený výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující ID.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Získá ID řetězce <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>Hodnota atributu ID HTML pro objekt, který je zastoupený výrazem.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Získá úplný název pole HTML pro objekt zastoupený výrazem.</summary>
      <returns>Úplný název pole HTML pro objekt vyjádřený výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Výraz, který určuje objekt obsahující název</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Získá úplný název pole HTML pro objekt zastoupený výrazem.</summary>
      <returns>Úplný název pole HTML pro objekt vyjádřený výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující název</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Získá úplný název pole HTML pro objekt zastoupený výrazem.</summary>
      <returns>Úplný název pole HTML pro objekt vyjádřený výrazem</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>Představuje funkci, která vykreslí částečné zobrazení jako řetězec kódovaný jazykem HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vykreslí částečné zobrazení jako řetězec kódovaný jazykem HTML.</summary>
      <returns>Částečné zobrazení, které je vykresleno jako řetězec kódovaný jazykem HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="partialViewName">Název částečného zobrazení, které má být vykresleno</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vykreslí částečné zobrazení jako řetězec kódovaný jazykem HTML.</summary>
      <returns>Částečné zobrazení, které je vykresleno jako řetězec kódovaný jazykem HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="partialViewName">Název částečného zobrazení, které má být vykresleno</param>
      <param name="model">Model pro částečné zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Vykreslí částečné zobrazení jako řetězec kódovaný jazykem HTML.</summary>
      <returns>Částečné zobrazení, které je vykresleno jako řetězec kódovaný jazykem HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="partialViewName">Název částečného zobrazení</param>
      <param name="model">Model pro částečné zobrazení</param>
      <param name="viewData">Slovník dat zobrazení pro částečné zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Vykreslí částečné zobrazení jako řetězec kódovaný jazykem HTML.</summary>
      <returns>Částečné zobrazení, které je vykresleno jako řetězec kódovaný jazykem HTML.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="partialViewName">Název částečného zobrazení, které má být vykresleno</param>
      <param name="viewData">Slovník dat zobrazení pro částečné zobrazení</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>Poskytuje podporu pro vykreslení částečného zobrazení.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vykreslí zadané částečné zobrazení pomocí zadané pomocné rutiny HTML.</summary>
      <param name="htmlHelper">Pomocná rutina HTML</param>
      <param name="partialViewName">Název částečného zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vykreslí zadané částečné zobrazení, kterému předá kopii aktuálního objektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />, avšak s vlastností Model nastavenou na zadaný model.</summary>
      <param name="htmlHelper">Pomocná rutina HTML</param>
      <param name="partialViewName">Název částečného zobrazení</param>
      <param name="model">Model</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Vykreslí zadané částečné zobrazení, nahradí jeho vlastnost ViewData zadaným objektem <see cref="T:System.Web.Mvc.ViewDataDictionary" /> a nastaví vlastnost Model dat zobrazení na zadaný model.</summary>
      <param name="htmlHelper">Pomocná rutina HTML</param>
      <param name="partialViewName">Název částečného zobrazení</param>
      <param name="model">Model pro částečné zobrazení</param>
      <param name="viewData">Data zobrazení pro částečné zobrazení</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Vykreslí zadané částečné zobrazení a nahradí jeho vlastnost ViewData zadaným objektem <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <param name="htmlHelper">Pomocná rutina HTML</param>
      <param name="partialViewName">Název částečného zobrazení</param>
      <param name="viewData">Data zobrazení</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>Představuje podporu pro výběr ze seznamu.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí element s jedním výběrem select pomocí zadané pomocné rutiny HTML a názvu pole formuláře.</summary>
      <returns>Element HTML select</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Vrátí element s jedním výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře a zadaných položek seznamu.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element s jedním výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře, zadaných položek seznamu a zadaných atributů HTML.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Vrátí element s jedním výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře, zadaných položek seznamu a zadaných atributů HTML.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Vrátí element s jedním výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře, zadaných položek seznamu a popisku položky.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element s jedním výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře, zadaných položek seznamu, popisku položky a zadaných atributů HTML.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Vrátí element s jedním výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře, zadaných položek seznamu, popisku položky a zadaných atributů HTML.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrátí element s jedním výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře a popisku položky.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem použitím zadaných položek seznamu.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem použitím zadaných položek seznamu a atributů HTML.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem použitím zadaných položek seznamu a atributů HTML.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem použitím zadaných položek seznamu a popisku položky.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem použitím zadaných položek seznamu, popisku položky a atributů HTML.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem použitím zadaných položek seznamu, popisku položky a atributů HTML.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ hodnoty</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrátí element HTML select pro každou hodnotu ve výčtu představovanou zadaným výrazem.</summary>
      <returns>Element HTML select pro každou hodnotu ve výčtu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující hodnoty, které mají být zobrazeny.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TEnum">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML select pro každou hodnotu ve výčtu představovanou zadaným výrazem.</summary>
      <returns>Element HTML select pro každou hodnotu ve výčtu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující hodnoty, které mají být zobrazeny.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TEnum">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrátí element HTML select pro každou hodnotu ve výčtu představovanou zadaným výrazem.</summary>
      <returns>Element HTML select pro každou hodnotu ve výčtu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující hodnoty, které mají být zobrazeny.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TEnum">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Vrátí element HTML select pro každou hodnotu ve výčtu představovanou zadaným výrazem.</summary>
      <returns>Element HTML select pro každou hodnotu ve výčtu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující hodnoty, které mají být zobrazeny.</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TEnum">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML select pro každou hodnotu ve výčtu představovanou zadaným výrazem.</summary>
      <returns>Element HTML select pro každou hodnotu ve výčtu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující hodnoty, které mají být zobrazeny.</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TEnum">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Vrátí element HTML select pro každou hodnotu ve výčtu představovanou zadaným výrazem.</summary>
      <returns>Element HTML select pro každou hodnotu ve výčtu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující hodnoty, které mají být zobrazeny.</param>
      <param name="optionLabel">Text výchozí prázdné položkyTento parametr může mít hodnotu null.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TEnum">Typ hodnoty</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí element s vícenásobným výběrem select pomocí zadané pomocné rutiny HTML a názvu pole formuláře.</summary>
      <returns>Element HTML select</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Vrátí element s vícenásobným výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře a zadaných položek seznamu.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element s vícenásobným výběrem. select pomocí zadané pomocné rutiny HTML, názvu pole formuláře, zadaných položek seznamu a zadaných atributů HTML.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Vrátí element s vícenásobným výběrem select pomocí zadané pomocné rutiny HTML, názvu pole formuláře a zadaných položek seznamu.</summary>
      <returns>Element HTML select s dílčím elementem option pro každou položku v seznamu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> má hodnotu null nebo prázdný.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem a použitím zadaných položek seznamu.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem použitím zadaných položek seznamu a atributů HTML.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Vrátí element HTML select pro každou vlastnost v objektu představovanou zadaným výrazem použitím zadaných položek seznamu a atributů HTML.</summary>
      <returns>Element HTML select pro každou vlastnost v objektu představovanou výrazem.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které mají být zobrazeny</param>
      <param name="selectList">Kolekce objektů <see cref="T:System.Web.Mvc.SelectListItem" /> použitých k naplnění rozevíracího seznamu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>Představuje podporu pro ovládací prvky elementu HTML textarea.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí zadaný element textarea pomocí zadané pomocné rutiny HTML a názvu pole formuláře.</summary>
      <returns>Element textarea</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí zadaný element textarea pomocí zadané pomocné rutiny HTML, názvu pole formuláře a zadaných atributů HTML.</summary>
      <returns>Element textarea</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí zadaný element textarea pomocí zadané pomocné rutiny HTML a atributů HTML.</summary>
      <returns>Element textarea</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Vrátí zadaný element textarea pomocí zadané pomocné rutiny HTML, názvu pole formuláře a textového obsahu.</summary>
      <returns>Element textarea</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="value">Textový obsah</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí zadaný element textarea pomocí zadané pomocné rutiny HTML, názvu pole formuláře, textového obsahu a zadaných atributů HTML.</summary>
      <returns>Element textarea</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="value">Textový obsah</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí zadaný element textarea pomocí zadané pomocné rutiny HTML, názvu pole formuláře, textového obsahu, počtu řádků a sloupců a zadaných atributů HTML.</summary>
      <returns>Element textarea</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="value">Textový obsah</param>
      <param name="rows">Počet řádků</param>
      <param name="columns">Počet sloupců</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Vrátí zadaný element textarea pomocí zadané pomocné rutiny HTML, názvu pole formuláře, textového obsahu, počtu řádků a sloupců a zadaných atributů HTML.</summary>
      <returns>Element textarea</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="value">Textový obsah</param>
      <param name="rows">Počet řádků</param>
      <param name="columns">Počet sloupců</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Vrátí zadaný element textarea pomocí zadané pomocné rutiny HTML, názvu pole formuláře, textového obsahu a zadaných atributů HTML.</summary>
      <returns>Element textarea</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název pole formuláře, které se má vrátit</param>
      <param name="value">Textový obsah</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML, které se mají pro daný element nastavit</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrátí element HTML textarea pro každou vlastnost objektu reprezentovaného zadaným výrazem.</summary>
      <returns>Element HTML textarea pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML textarea pro každou vlastnost objektu reprezentovaného zadaným výrazem použitím zadaných atributů HTML.</summary>
      <returns>Element HTML textarea pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML, které se mají nastavit pro element.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí element HTML textarea pro každou vlastnost objektu reprezentovaného zadaným výrazem použitím zadaných atributů HTML a počtu řádků a sloupců.</summary>
      <returns>Element HTML textarea pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="rows">Počet řádků</param>
      <param name="columns">Počet sloupců</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML, které se mají nastavit pro element.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
      <summary>Vrátí element HTML textarea pro každou vlastnost objektu reprezentovaného zadaným výrazem použitím zadaných atributů HTML a počtu řádků a sloupců.</summary>
      <returns>Element HTML textarea pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="rows">Počet řádků</param>
      <param name="columns">Počet sloupců</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML, které se mají nastavit pro element.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Vrátí element HTML textarea pro každou vlastnost objektu reprezentovaného zadaným výrazem použitím zadaných atributů HTML.</summary>
      <returns>Element HTML textarea pro každou vlastnost objektu reprezentovaného výrazem</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML, které se mají nastavit pro element.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> má hodnotu null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>Poskytuje podporu pro ověření vstupu z formuláře HTML.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>Získá nebo nastaví název souboru prostředků (klíč třídy), který obsahuje lokalizované hodnoty řetězce.</summary>
      <returns>Název souboru prostředků (klíč třídy)</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Načte ověřovací metadata zadaného modelu a použije každé pravidlo na datové pole.</summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="modelName">Název vlastnosti nebo objektu modelu, který je ověřován</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelName" /> má hodnotu null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Načte ověřovací metadata zadaného modelu a použije každé pravidlo na datové pole.</summary>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadaném poli objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="modelName">Název vlastnosti nebo objektu modelu, který je ověřován</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zobrazí ověřovací zprávu, pokud v zadaném poli objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="modelName">Název vlastnosti nebo objektu modelu, který je ověřován</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadané položce objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Hodnota null, pokud je položka platná a je zakázáno ověřování na straně klienta.Jinak element <paramref name="tag" /> obsahující chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda používá.</param>
      <param name="modelName">Název ověřované položky.</param>
      <param name="htmlAttributes">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> obsahující atributy HTML pro daný element.</param>
      <param name="tag">Značka, která se má nastavit pro zabalení elementu HTML ověřovací zprávy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadaném poli objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="modelName">Název vlastnosti nebo objektu modelu, který je ověřován</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadané položce objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Hodnota null, pokud je položka platná a je zakázáno ověřování na straně klienta.Jinak element <paramref name="tag" /> obsahující chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda používá.</param>
      <param name="modelName">Název ověřované položky.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
      <param name="tag">Značka, která se má nastavit pro zabalení elementu HTML ověřovací zprávy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadaném poli objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="modelName">Název vlastnosti nebo objektu modelu, který je ověřován</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zobrazí ověřovací zprávu, pokud v zadaném poli objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="modelName">Název vlastnosti nebo objektu modelu, který je ověřován</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadané položce objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Hodnota null, pokud je objekt modelu platný a je zakázáno ověřování na straně klienta.Jinak element <paramref name="tag" /> obsahující chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda používá.</param>
      <param name="modelName">Název ověřovaného objektu modelu.</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadaná položka obsahuje chybu.</param>
      <param name="htmlAttributes">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> obsahující atributy HTML pro daný element.</param>
      <param name="tag">Značka, která se má nastavit pro zabalení elementu HTML ověřovací zprávy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadaném poli objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="modelName">Název vlastnosti nebo objektu modelu, který je ověřován</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.String)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadané položce objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Hodnota null, pokud je položka platná a je zakázáno ověřování na straně klienta.Jinak element <paramref name="tag" /> obsahující chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda používá.</param>
      <param name="modelName">Název ověřované položky.</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadaná položka obsahuje chybu.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
      <param name="tag">Značka, která se má nastavit pro zabalení elementu HTML ověřovací zprávy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Zobrazí ověřovací zprávu, pokud v zadané položce objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> došlo k chybě.</summary>
      <returns>Hodnota null, pokud je položka platná a je zakázáno ověřování na straně klienta.Jinak element <paramref name="tag" /> obsahující chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda používá.</param>
      <param name="modelName">Název ověřované položky.</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadaná položka obsahuje chybu.</param>
      <param name="tag">Značka, která se má nastavit pro zabalení elementu HTML ověřovací zprávy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Vrátí značku HTML chybové zprávy ověření pro každé datové pole, které je reprezentováno zadaným výrazem.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Vrátí značku HTML chybové zprávy ověření pro každé datové pole, které je reprezentováno zadaným výrazem, pomocí zadané zprávy.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí značku HTML chybové zprávy ověření pro každé datové pole, které je reprezentováno zadaným výrazem, pomocí zadané zprávy a atributů HTML.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Vrátí kód HTML zprávy o chybě ověření pro zadaný výraz.</summary>
      <returns>Hodnota null, pokud je objekt modelu platný a je zakázáno ověřování na straně klienta.Jinak element <paramref name="tag" /> obsahující chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda používá.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="validationMessage">Zpráva, která se má zobrazit, pokud dojde k chybě ověření.</param>
      <param name="htmlAttributes">Objekt <see cref="T:System.Collections.Generic.IDictionary`2" /> obsahující atributy HTML pro daný element.</param>
      <param name="tag">Značka, která se má nastavit pro zabalení elementu HTML ověřovací zprávy.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Vrátí značku HTML chybové zprávy ověření pro každé datové pole, které je reprezentováno zadaným výrazem, pomocí zadané zprávy a atributů HTML.</summary>
      <returns>Pokud jsou vlastnost nebo objekt platné, prázdný řetězec, jinak element span, který obsahuje chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="validationMessage">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.String)">
      <summary>Vrátí kód HTML zprávy o chybě ověření pro zadaný výraz.</summary>
      <returns>Hodnota null, pokud je objekt modelu platný a je zakázáno ověřování na straně klienta.Jinak element <paramref name="tag" /> obsahující chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda používá.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="validationMessage">Zpráva, která se má zobrazit, pokud dojde k chybě ověření.</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
      <param name="tag">Značka, která se má nastavit pro zabalení elementu HTML ověřovací zprávy.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Vrátí kód HTML zprávy o chybě ověření pro zadaný výraz.</summary>
      <returns>Hodnota null, pokud je objekt modelu platný a je zakázáno ověřování na straně klienta.Jinak element <paramref name="tag" /> obsahující chybovou zprávu.</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda používá.</param>
      <param name="expression">Výraz, který identifikuje objekt obsahující vlastnosti, které se mají vykreslit</param>
      <param name="validationMessage">Zpráva, která se má zobrazit, pokud dojde k chybě ověření.</param>
      <param name="tag">Značka, která se má nastavit pro zabalení elementu HTML ověřovací zprávy.</param>
      <typeparam name="TModel">Typ modelu</typeparam>
      <typeparam name="TProperty">Typ proměnné</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>Vrátí neuspořádaný seznam (element ul) ověřovacích zpráv, které jsou v objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Řetězec, který obsahuje neuspořádaný seznam (element ul) ověřovacích zpráv</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>Vrátí neuspořádaný seznam (element ul) ověřovacích zpráv, které jsou v objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> a volitelně zobrazuje pouze chyby na úrovni modelu.</summary>
      <returns>Řetězec, který obsahuje neuspořádaný seznam (element ul) ověřovacích zpráv</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="excludePropertyErrors">Hodnota true, chcete-li, aby souhrn zobrazil pouze chyby na úrovni modelu nebo hodnota false, pokud chcete, aby souhrn zobrazil všechny chyby.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>Vrátí neuspořádaný seznam (element ul) ověřovacích zpráv, které jsou v objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> a volitelně zobrazuje pouze chyby na úrovni modelu.</summary>
      <returns>Řetězec, který obsahuje neuspořádaný seznam (element ul) ověřovacích zpráv</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="excludePropertyErrors">Hodnota true, chcete-li, aby souhrn zobrazil pouze chyby na úrovni modelu nebo hodnota false, pokud chcete, aby souhrn zobrazil všechny chyby.</param>
      <param name="message">Zpráva, která se má zobrazit se souhrnem ověření</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí neuspořádaný seznam (element ul) ověřovacích zpráv, které jsou v objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> a volitelně zobrazuje pouze chyby na úrovni modelu.</summary>
      <returns>Řetězec, který obsahuje neuspořádaný seznam (element ul) ověřovacích zpráv</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="excludePropertyErrors">Hodnota true, chcete-li, aby souhrn zobrazil pouze chyby na úrovni modelu nebo hodnota false, pokud chcete, aby souhrn zobrazil všechny chyby.</param>
      <param name="message">Zpráva, která se má zobrazit se souhrnem ověření</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML pro element</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>Vrátí neuspořádaný seznam (element ul) ověřovacích zpráv, které jsou v objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> a volitelně zobrazuje pouze chyby na úrovni modelu.</summary>
      <returns>Řetězec, který obsahuje neuspořádaný seznam (element ul) ověřovacích zpráv</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="excludePropertyErrors">Hodnota true, chcete-li, aby souhrn zobrazil pouze chyby na úrovni modelu nebo hodnota false, pokud chcete, aby souhrn zobrazil všechny chyby.</param>
      <param name="message">Zpráva, která se má zobrazit se souhrnem ověření</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Vrátí neuspořádaný seznam (element ul) ověřovacích zpráv, které jsou v objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Řetězec, který obsahuje neuspořádaný seznam (element ul) ověřovacích zpráv</returns>
      <param name="htmlHelper">Instance pomocné rutiny HTML, kterou tato metoda rozšiřuje</param>
      <param name="message">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Vrátí neuspořádaný seznam (element ul) ověřovacích zpráv, které jsou v objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Řetězec, který obsahuje neuspořádaný seznam (element ul) ověřovacích zpráv</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="message">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
      <param name="htmlAttributes">Slovník obsahující atributy HTML pro element</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Vrátí neuspořádaný seznam (element ul) ověřovacích zpráv v objektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Řetězec, který obsahuje neuspořádaný seznam (element ul) ověřovacích zpráv</returns>
      <param name="htmlHelper">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="message">Zpráva, která se zobrazí, pokud zadané pole obsahuje chybu</param>
      <param name="htmlAttributes">Objekt obsahující atributy HTML pro daný element </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.String)"></member>
    <member name="T:System.Web.Mvc.Html.ValueExtensions">
      <summary>Zajišťuje mechanismus pro vytvoření vlastní značky HTML kompatibilní s vazači a šablonami technologie ASP.NET modelu MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zajišťuje mechanismus pro vytvoření vlastní značky HTML kompatibilní s vazači a šablonami technologie ASP.NET modelu MVC.</summary>
      <returns>Značka HTML pro danou hodnotu.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název modelu</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zajišťuje mechanismus pro vytvoření vlastní značky HTML kompatibilní s vazači a šablonami technologie ASP.NET modelu MVC.</summary>
      <returns>Značka HTML pro danou hodnotu.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="name">Název modelu</param>
      <param name="format">Řetězec formátu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zajišťuje mechanismus pro vytvoření vlastní značky HTML kompatibilní s vazači a šablonami technologie ASP.NET modelu MVC.</summary>
      <returns>Značka HTML pro danou hodnotu.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které se mají zveřejnit.</param>
      <typeparam name="TModel">Model</typeparam>
      <typeparam name="TProperty">Vlastnost</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zajišťuje mechanismus pro vytvoření vlastní značky HTML kompatibilní s vazači a šablonami technologie ASP.NET modelu MVC.</summary>
      <returns>Značka HTML pro danou hodnotu.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="expression">Výraz, který určuje objekt obsahující vlastnosti, které se mají zveřejnit.</param>
      <param name="format">Řetězec formátu.</param>
      <typeparam name="TModel">Model</typeparam>
      <typeparam name="TProperty">Vlastnost</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Zajišťuje mechanismus pro vytvoření vlastní značky HTML kompatibilní s vazači a šablonami technologie ASP.NET modelu MVC.</summary>
      <returns>Značka HTML pro danou hodnotu.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zajišťuje mechanismus pro vytvoření vlastní značky HTML kompatibilní s vazači a šablonami technologie ASP.NET modelu MVC.</summary>
      <returns>Značka HTML pro danou hodnotu.</returns>
      <param name="html">Pomocná instance HTML, kterou tato metoda rozšiřuje.</param>
      <param name="format">Řetězec formátu.</param>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser">
      <summary>Kompiluje zobrazení syntaxe Razor rozhraní ASP.NET do tříd.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.InheritsDirective">
      <summary>Direktiva inherits</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.ModelDirective">
      <summary>Direktiva modelu</summary>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser">
      <summary>Rozšiřuje třídu VBCodeParser přidáním podpory pro klíčové slovo @model.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.InheritsStatement">
      <summary>Nastaví hodnotu, která určuje, zda mají být aktuální blok kódu a model odvozeny.</summary>
      <returns>Má hodnotu true, pokud jsou blok kódu a model odvozeny, jinak má hodnotu false.</returns>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.ModelTypeDirective">
      <summary>Direktiva typu modelu</summary>
      <returns>Vrátí prázdnou hodnotu.</returns>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcWebPageRazorHost">
      <summary>Nakonfiguruje analyzátor ASP.NET Razor a generátor kódu pro zadaný soubor.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Razor.MvcWebPageRazorHost" />. </summary>
      <param name="virtualPath">Virtuální cesta souboru ASP.NET Razor</param>
      <param name="physicalPath">Fyzická cesta souboru ASP.NET Razor</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)">
      <summary>Vrátí generátor kódu Razor rozhraní ASP.NET MVC pro konkrétní jazyk.</summary>
      <returns>Generátor kódu Razor rozhraní ASP.NET MVC pro konkrétní jazyk</returns>
      <param name="incomingCodeGenerator">Generátor kódu jazyka C# nebo Visual Basic</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)">
      <summary>Vrátí analyzátor kódu Razor rozhraní ASP.NET MVC pro konkrétní jazyk pomocí zadaného analyzátoru jazyka.</summary>
      <returns>Analyzátor kódu Razor rozhraní ASP.NET MVC pro konkrétní jazyk</returns>
      <param name="incomingCodeParser">Analyzátor kódu jazyka C# nebo Visual Basic</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultDirectRouteProvider"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Vytvoří instance položky <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> na základě zadaných objektů factory a akce.Položky cesty poskytují přímé směrování k zadané akci.</summary>
      <returns>Sada položek trasy.</returns>
      <param name="actionDescriptor">Popisovač akce</param>
      <param name="factories">Objekty factory přímé trasy.</param>
      <param name="constraintResolver">Řešitel omezení.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)">
      <summary>Získá sadu objektů factory trasy pro zadaný popisovač akce.</summary>
      <returns>Sada objektů factory trasy.</returns>
      <param name="actionDescriptor">Popisovač akce</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>Získá předponu oblasti ze zadaného kontroleru.</summary>
      <returns>Předpona oblasti nebo hodnota null.</returns>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Vytvoří instance položky <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> na základě zadaných objektů factory, kontroleru a akcí.Položky trasy poskytují přímé směrování k zadanému kontroleru a mohou dosáhnout sady zadaných akcí.</summary>
      <returns>Sada položek trasy.</returns>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
      <param name="actionDescriptors">Popisovače akce.</param>
      <param name="factories">Objekty factory přímé trasy.</param>
      <param name="constraintResolver">Řešitel omezení.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)">
      <summary>Získá objekty factory trasy pro zadaný popisovač kontroleru.</summary>
      <returns>Sada objektů factory trasy.</returns>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Získá přímé trasy pro zadaný popisovač kontroleru a popisovače akce na základě atributů objektu <see cref="T:System.Web.Mvc.Routing.IDirectRouteFactory" />.</summary>
      <returns>Sada položek trasy.</returns>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
      <param name="actionDescriptors">Popisovače akce pro všechny akce.</param>
      <param name="constraintResolver">Řešitel omezení.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>Získá předponu trasy ze zadaného kontroleru.</summary>
      <returns>Předpona trasy nebo hodnota null.</returns>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultInlineConstraintResolver">
      <summary>Výchozí implementace třídy <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />.Vyřeší omezení analýzou klíče a argumentů omezení, s využitím mapy pro vyřešení typu omezení a voláním příslušného konstruktoru pro daný typ omezení.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.#ctor"></member>
    <member name="P:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary>Získá měnitelný slovník, který mapuje klíče omezení na konkrétní typ omezení.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)"></member>
    <member name="T:System.Web.Mvc.Routing.DirectRouteFactoryContext">
      <summary>Představuje kontext, který podporuje vytvoření přímé trasy.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.DirectRouteFactoryContext" />.</summary>
      <param name="areaPrefix">Předpona trasy, pokud existuje, definovaná oblastí.</param>
      <param name="controllerPrefix">Předpona trasy, pokud existuje, definovaná kontrolerem.</param>
      <param name="actions">Popisovače akcí, pro které má být vytvořena trasa.</param>
      <param name="inlineConstraintResolver">Řešitel vloženého omezení.</param>
      <param name="targetIsAction">Hodnota určující, zda je trasa nakonfigurována na úrovni akce nebo kontroleru.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.Actions">
      <summary>Získá popisovače akcí, pro které má být vytvořena trasa.</summary>
      <returns>Popisovače akcí, pro které má být vytvořena trasa.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.AreaPrefix">
      <summary>Získá předponu trasy, pokud existuje, definovanou oblastí.</summary>
      <returns>Předpona trasy, pokud existuje, definovaná oblastí.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.ControllerPrefix">
      <summary>Získá předponu trasy, pokud existuje, definovanou kontrolerem.</summary>
      <returns>Předpona trasy, pokud existuje, definovaná kontrolerem.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>Vytvoří tvůrce trasy, který může vytvořit trasu odpovídající tomuto kontextu.</summary>
      <returns>Tvůrce trasy, který může vytvořit trasu odpovídající tomuto kontextu.</returns>
      <param name="template">Šablona trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Vytvoří tvůrce trasy, který může vytvořit trasu odpovídající tomuto kontextu.</summary>
      <returns>Tvůrce trasy, který může vytvořit trasu odpovídající tomuto kontextu.</returns>
      <param name="template">Šablona trasy.</param>
      <param name="constraintResolver">Řešitel vloženého omezení, pokud existuje; jinak hodnota null.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>Získá řešitele vloženého omezení.</summary>
      <returns>Řešitel vloženého omezení.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>Získá hodnotu určující, zda je trasa nakonfigurována na úrovni akce nebo kontroleru.</summary>
      <returns>Hodnota true, pokud je trasa nakonfigurována na úrovni akce; jinak hodnota false (tzn. pokud je trasa nakonfigurována na úrovni kontroleru).</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteBuilder">
      <summary>Definuje tvůrce, který vytváří přímé trasy k akcím (trasy atributů).</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Actions">
      <summary>Získá popisovače akcí, pro které má být vytvořena trasa.</summary>
      <returns>Popisovače akcí, pro které má být vytvořena trasa.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteBuilder.Build">
      <summary>Vytvoří položku trasy na základě aktuálních hodnot vlastností.</summary>
      <returns>Vytvořená položka trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Constraints">
      <summary>Získá nebo nastaví omezení trasy.</summary>
      <returns>Omezení trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.DataTokens">
      <summary>Získá nebo nastaví tokeny dat trasy.</summary>
      <returns>Tokeny dat trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Defaults">
      <summary>Získá nebo nastaví výchozí hodnoty trasy.</summary>
      <returns>Výchozí nastavení trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Name">
      <summary>Získá nebo nastaví název trasy.</summary>
      <returns>Název trasy, nebo hodnota null, pokud není zadán žádný název.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Order">
      <summary>Získá nebo nastaví pořadí trasy.</summary>
      <returns>Pořadí trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Precedence">
      <summary>Získá nebo nastaví prioritu trasy.</summary>
      <returns>Priorita trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>Získá hodnotu určující, zda je trasa nakonfigurována na úrovni akce nebo kontroleru.</summary>
      <returns>Hodnota true, pokud je trasa nakonfigurována na úrovni akce; jinak hodnota false (tzn. pokud je trasa nakonfigurována na úrovni kontroleru).</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Template">
      <summary>Získá nebo nastaví šablonu trasy.</summary>
      <returns>Šablona trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteFactory">
      <summary>Definuje objekt pro vytváření, který vytváří trasu přímo k sadě popisovačů akcí (trasa atributu).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteFactory.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Vytvoří položku přímé trasy.</summary>
      <returns>Položka přímé trasy.</returns>
      <param name="context">Kontext, který má být použit k vytvoření trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteProvider">
      <summary>Definuje zprostředkovatele pro trasy, jejichž přímým cílem jsou popisovače akcí (trasy atributů).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Získá přímé trasy pro určitý kontroler.</summary>
      <returns>Sada položek trasy pro kontroler.</returns>
      <param name="controllerDescriptor">Popisovač kontroleru</param>
      <param name="actionDescriptors">Popisovače akce.</param>
      <param name="constraintResolver">Řešitel vloženého omezení.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IInlineConstraintResolver">
      <summary>Definuje abstrakci pro vyřešení vložených omezení ve formě instancí objektu <see cref="T:System.Web.Routing.IRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>Vyřeší vložené omezení.</summary>
      <returns>Objekt <see cref="T:System.Web.Routing.IRouteConstraint" />, který je výsledkem vyřešení vloženého omezení.</returns>
      <param name="inlineConstraint">Vložené omezení k vyřešení.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRouteInfoProvider">
      <summary>Poskytuje informace o sestavení objektu System.Web.Routing.Route.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Name">
      <summary>Získá šablonu trasy popisující odpovídající vzor identifikátoru URI.</summary>
      <returns>Šablona trasy popisující odpovídající vzor identifikátoru URI.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Template">
      <summary>Získá název trasy k vytvoření.</summary>
      <returns>Název trasy, která má být vygenerována</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRoutePrefix">
      <summary>Definuje předponu trasy.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRoutePrefix.Prefix">
      <summary>Získá předponu trasy.</summary>
      <returns>Předpona trasy</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteBuilder">
      <summary>Sestaví instance <see cref="T:System.Web.Routing.Route" /> na základě informací o trase.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.RouteBuilder" /> pomocí výchozího překladače vložených závislostí.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor(System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.RouteBuilder" />.</summary>
      <param name="constraintResolver">Objekt <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />, který má být použit k vyřešení vložených omezení.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Reflection.MethodInfo,System.String)">
      <summary>Sestaví objekt <see cref="T:System.Web.Routing.Route" /> pro určitou akci.</summary>
      <returns>Generovaný objekt <see cref="T:System.Web.Routing.Route" /></returns>
      <param name="routeTemplate">Tokenizovaná šablona trasy pro tuto trasu,</param>
      <param name="allowedMethods">Metody HTTP, které tato trasa podporuje.Hodnota null určuje, že jsou podporovány všechny možné metody.</param>
      <param name="controllerName">Název přidruženého kontroleru.</param>
      <param name="actionName">Název přidružené akce.</param>
      <param name="targetMethod">Metoda, pro niž byl použit atribut trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Sestaví objekt <see cref="T:System.Web.Routing.Route" /> pro určitou akci.</summary>
      <returns>Vygenerovaná trasa.</returns>
      <param name="routeTemplate">Tokenizovaná šablona trasy pro tuto trasu,</param>
      <param name="controllerDescriptor">Kontroler, pro který byl použit atribut trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.String,System.Reflection.MethodInfo)">
      <summary>Sestaví objekt <see cref="T:System.Web.Routing.Route" />.</summary>
      <returns>Generovaný objekt <see cref="T:System.Web.Routing.Route" /></returns>
      <param name="defaults">Výchozí nastavení trasy.</param>
      <param name="constraints">Omezení trasy.</param>
      <param name="routeTemplate">Šablona trasy bez tokenů.</param>
      <param name="targetMethod">Metoda, pro niž byl použit atribut trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteBuilder.ConstraintResolver">
      <summary>Získá řešitele pro vyřešení vložených omezení.</summary>
      <returns>Řešitel pro vyřešení vložených omezení.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteEntry">
      <summary>Představuje pojmenovanou trasu.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteEntry.#ctor(System.String,System.Web.Routing.Route)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.RouteEntry" />.</summary>
      <param name="name">Název trasy</param>
      <param name="route">Trasa</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Name">
      <summary>Získá název trasy.</summary>
      <returns>Název trasy, pokud existuje; jinak hodnota null.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Route">
      <summary>Získá trasu.</summary>
      <returns>Trasa</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteFactoryAttribute">
      <summary>Představuje atribut trasy, který může obsahovat vlastní omezení.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.RouteFactoryAttribute" />.</summary>
      <param name="template">Šablona trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Constraints">
      <summary>Získá omezení trasy.</summary>
      <returns>Omezení trasy, pokud existují; jinak hodnota null.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Vytvoří položku přímé trasy.</summary>
      <returns>Položka přímé trasy.</returns>
      <param name="context">Kontext, který má být použit k vytvoření trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.DataTokens">
      <summary>Získá tokeny dat trasy.</summary>
      <returns>Tokeny dat trasy, pokud existují; jinak hodnota null.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Defaults">
      <summary>Získá výchozí hodnoty trasy.</summary>
      <returns>Výchozí hodnoty trasy, pokud existují; jinak hodnota null.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Name">
      <summary>Získá nebo nastaví název trasy.</summary>
      <returns>Název trasy, pokud existuje; jinak hodnota null.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Order">
      <summary>Získá nebo nastaví pořadí trasy.</summary>
      <returns>Pořadí trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Template">
      <summary>Získá šablonu trasy.</summary>
      <returns>Šablona trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint">
      <summary>Omezí parametr trasy, aby obsahoval pouze malá nebo velká písmena anglické abecedy (A až Z).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint">
      <summary>Omezí parametr trasy, aby reprezentoval pouze logické hodnoty.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint">
      <summary>Omezuje trasu pomocí několika podřízených omezení.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Routing.IRouteConstraint})">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint" />.</summary>
      <param name="constraints">Podřízená omezení musí odpovídat tomuto omezení.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>Získá podřízená omezení, která musí odpovídat tomuto omezení.</summary>
      <returns>Podřízená omezení musí odpovídat tomuto omezení.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint">
      <summary>Omezí parametr trasy, aby reprezentoval pouze hodnoty <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint">
      <summary>Omezí parametr trasy, aby reprezentoval pouze desetinná čísla.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint">
      <summary>Omezí parametr trasy, aby reprezentoval pouze 64bitové hodnoty s plovoucí desetinnou čárkou.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint">
      <summary>Omezí parametr trasy, aby reprezentoval pouze 32bitové hodnoty s plovoucí desetinnou čárkou.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint">
      <summary>Omezí parametr trasy, aby reprezentoval pouze hodnoty <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.IntRouteConstraint">
      <summary>Omezí parametr trasy, aby reprezentoval pouze 32bitové celočíselné hodnoty.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint">
      <summary>Omezí parametr trasy na řetězec s danou délkou nebo s délkou v daném rozsahu délek.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>Inicializuje novou instanci třídy the <see cref="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint" />, která omezuje parametr trasy na řetězec dané délky.</summary>
      <param name="minLength">Minimální délka parametru trasy.</param>
      <param name="maxLength">Maximální délka parametru trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>Získá délku parametru trasy, je-li nastavena.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>Získá maximální délku parametru trasy, je-li nastavena.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>Získá minimální délku parametru trasy, je-li nastavena.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint">
      <summary>Omezí parametr trasy, aby reprezentoval pouze 64bitové celočíselné hodnoty.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.#ctor">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>Omezí parametr trasy na řetězec s maximální délkou.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>Získá maximální délku parametru trasy.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint">
      <summary>Omezí parametr trasy na celé číslo s maximální délkou.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint" />.</summary>
      <param name="max">Maximální hodnota</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru.</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>Získá maximální hodnotu parametru trasy.</summary>
      <returns>Maximální hodnota parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint">
      <summary>Omezí parametr trasy na řetězec s maximální délkou.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint" />.</summary>
      <param name="minLength">Minimální délka,</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název porovnání.</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>Získá minimální délku parametru trasy.</summary>
      <returns>Minimální délka parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint">
      <summary>Omezí parametr trasy na typ long s minimální hodnotou.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint" />.</summary>
      <param name="min">Minimální hodnota.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Min">
      <summary>Získá minimální hodnotu parametru trasy.</summary>
      <returns>Minimální hodnota parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint">
      <summary>Omezuje trasu pomocí vnitřního omezení, které neselže, je-li volitelný parametr nastaven na jeho výchozí hodnotu.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint" />.</summary>
      <param name="innerConstraint">Vnitřní omezení, které musí být splněno, pokud parametr není volitelným parametrem bez hodnoty.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>Získá vnitřní omezení, které musí být splněno, pokud parametr není volitelným parametrem bez hodnoty.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint">
      <summary>Omezí parametr trasy na celé číslo v určeném rozsahu hodnot.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint" />.</summary>
      <param name="min">Minimální hodnota.</param>
      <param name="max">Maximální hodnota</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>Získá maximální hodnotu parametru trasy.</summary>
      <returns>Maximální hodnota parametru trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>Získá minimální hodnotu parametru trasy.</summary>
      <returns>Minimální hodnota parametru trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint">
      <summary>Omezí parametr trasy, aby odpovídal regulárnímu výrazu.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>Inicializuje novou instanci třídy <see cref="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint" /> se zadaným vzorem.</summary>
      <param name="pattern">Vzor k porovnání shody.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Určí, zda se tato instance rovná zadané trase.</summary>
      <returns>Hodnota true, pokud se tato instance rovná zadané trase, jinak hodnota false.</returns>
      <param name="httpContext">Kontext HTTP</param>
      <param name="route">Trasa k porovnání.</param>
      <param name="parameterName">Název parametru</param>
      <param name="values">Seznam hodnot parametrů.</param>
      <param name="routeDirection">Směr trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>Získá regulární výraz k porovnání shody.</summary>
      <returns>Regulární výraz k porovnání shody.</returns>
    </member>
  </members>
</doc>